%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1811.w013.n001.88B.p12.88__01.eps
%%Creator: Adobe Illustrator(R) 23.0
%%For: Дмитрий Калиниченко
%%CreationDate: 11/8/2018
%%BoundingBox: 0 0 400 400
%%HiResBoundingBox: 0 0 400 400
%%CropBox: 0 0 400 400
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.0.1 x540 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 128 8%%BeginData: 15692 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFDF2FFA0FD3FFFA884A859FD2EFFC9A7FD0BFFA098
%A1FD30FFA8FFA8AFFD08FFA8A8597D522E52CFA7CFC9CFFD27FFC87499A8
%FD08FFCF9F99749FA8FD2EFFA8A87D5952CFCFCEC9CEC8C8C7A77DA85952
%52A5C6C7C79F75FD0AFFA827A8FD19FFC8989F98A0FD07FFCF9F9F999F9F
%FD2DFFCFA7847D7D2E529EC79EC79EC7C0A659847D522E9FC6C79E9F6E6E
%A0FD09FF530005A8FD17FFC898997499A1FD06FFCE9E99759999FD2DFFCE
%9F837D7D2E7CC7C79FC7C7C7C0A67E847D592E7CC7C7C79F6E756E99CAFD
%09FF530527FD16FFC9989F999FA0FD06FFC99E9F759999FD2DFFCE9E7D7D
%7D2E529FC79FC79EC79EC77D847D7D287C9EC79E9F6E756E756EA0FD0AFF
%520027FD14FFC898996F6F75FD05FFCFC898996F6F6FCFFD2CFFCFC6A77E
%A852529FFD07C77D847D842E58A5C7C7C775756E99757574FD0BFF59287D
%FD12FFCE9F9F6F6F6FCBFD05FFC89F996F6F6FFD2DFFCF9EA67D8459527B
%C79EC7A5C79EC7A0847DA8522E7BC79FC774756E756E756E747CFD0BFF7D
%287EFD10FFC36F996F6F76FFFFCFA6FFCB9A6E996F6FA1FD2EFFC7C77D84
%7D5252C7C7C79FC79FC19EC9A8CFA87D2E9F999F99756E7575756E757475
%CAFD0BFF7D28A8FD0EFFCA936F75CE9F537DCDC7CFCA9AFD046FA8FD2EFF
%A79FA0A8A8A82E52989F7599749975997CAFA8AE7D2E7599749F74756E75
%6E756E756EA1FD0CFF5928A8FD0DFF6F6F459AC8CD5127747DCB9A456F6F
%6FA1FFFFFFA8CAA1C9A7FD28FF99A0A8FFA859529F999F999F999F99A0A8
%AEA8A82E7C999F999F757575996E99747575FD0DFF2E52A8FD0CFF764B93
%6FA6A6A627282ECA4B766F6F6FCAFFFF7C9F999F9899A1FD27FFA074A8A8
%AE5852759F9999759F999975A8A8A883525299749F99756E756E756E756E
%6EA1FD0BFFA852270559FD0BFF7D276F6F75A79F52057ECA4C4B6F6F4B7D
%FFC79F749F6F9974A0FD27FFA199A7AFA8832E7C999F999F999F999FA1AF
%A8A85252759F999F99756E9974756E756EA0FD0CFF7E522E287DFD0BFF27
%4C6FC2C776282E2EA84C4C6F6F6FFFFFC89F9F756F6F9999FD27FFCA74A1
%A8A87D2E5199749F7599989F74A084A8A87D28769899749F6E756E756E75
%6E756EA8FD0CFF532E27277DFD0AFFA2004B747B5183592E5176276F44A1
%FFFFA6C1756F696F6F99A8FD27FFA0A0A8A8A8587C7BA69FA69F7C759F9F
%AEA8A87D53529F999F99996E7575756E997575A0FD0CFFA827522E2E59FD
%0AFFA176C2C7CF8483A0C79F284B999FFFFFCEC7996F996F6F6FC9FD27FF
%A09F83A87DA57B817BA67B580B7B99997DA884A82E527599759F75754A75
%6E756E756E75A8FD0CFF7D27522E272ECFCAFD06FFCEC8CECECF847DA6C7
%A5C77599749FFFC89EC76F6F6F9F756F6E7CA8FD25FFCA98A784FD05A6A5
%580C2E51C199837DA8847D2E7C999F999F75756E75757574756EA7FD0DFF
%7D28522852A0CEC9FD05FFCECEA0CEA7A7A6C8C8C8C7C89FA052C89E759F
%996F996F9F756F4AA7FD25FFCA997CA88383A6835E822D2E0B2E75FD047D
%847D7D52A0999974996E756E756E756E7475FD0DFFA8592752A6C89FC8C9
%FFFFFFC9CFC9C9A6C8A6C8A6CEC8C874A0A8A07499759F7575756F6F9975
%6E7CFD26FFA0A07D655FC83B425E582E342D7DA8A87D847D847D8459A099
%9F99996E75759974996E75A8FD0EFFA852CECEC89FC8FFFFCFCEC8FD05CE
%C8CEC8C2999FA0847B9F999F9F9F75996F706F996EA0FD25FFA8A87D7D7D
%A77CA77C7D2E2E0B2E7DCFA8A87DA87D592E524B746E9974756E756E756E
%756EA1FD0EFF52057BCEC8C8517EFFFF9FC7C6C199C7A5C79F9F7599987C
%2E519E9F999F9F99FD056F7475FD24FF84AEA8837DAFA8A884A87E592E2E
%52AEA8AEA8A87D592E522E754A6F4A757575749975756E7575FD0EFFA952
%7C9FCDC8A62753A8A6C6C7939499C7C7C7999F999F755252C1759F99C16F
%6F6F9F6F6F6E76FD23FFFD04A87D7DA8A884A87DA852520559A8A883A884
%7D2D522E7574996E4A4A756E756E756E754A75A8FD0DFFCFCEC87C7BC8C7
%9F2728279F9399999399C79F9F99C89F99A0FF9F7574759F6F6999999F6E
%4B7DFD24FFA8AEA88459FFA8A884A88459282E7DFD05A87D52529F999F99
%9F747575757499759975756EA7FD0EFFC9C8C87C9FC7C77C0553A1BBC7C7
%9F9499C79FC8C8C19FFFFFC99FC19FC76F99999F99C14B7EFD23FFCAA883
%A87D525984597D5959282857A884A87DA87D592E7598C1759F999F6E756E
%756E756E756E7575FD0FFFC8C7A57B7B7B272859FFA6C79EC79F99995875
%9F747DFFFFFFCF7C277B9F759F9999754B53FD22FFCFC8A7A883A8592E33
%52052805282DA67DA884A87DA8525275C7C79F999F99996E9974756E7574
%756E99CFFD0FFFC8C79F28052805AFFFFFA6C7A5C79FA07C9F75527EFD04
%FF84007B9F99999F999F2759FD22FFC99EA67E847D7D2E58512E2728277C
%7B7C7D847D845852519F9EC79999749F746E6E756E756E756E756EA8FD10
%FFC8A1287E7D59A8FFFFFF7D2E2E2E0551272727A0FD04FFA827F89F9F9F
%749F750528FD22FFC8C7A5A6A6C875347BA67BA67BA6A5A67BA6A6A77D7D
%52A09FC7C79F999F999F6E9975756E7575757475A0FD1AFFA67B7C517651
%75997575CFFD04FF2E27009F9F9F999F0052FD22FFC99EC7C0C79E9F2D58
%7BA67BA57BA67B827BC7C6C79FC79FC79EC79F99759F99754A756E756E75
%6E756EA0FD19FF7E75C7C7C7999F9951277598C9FFFFFF7D000051C1749F
%992727FD22FFCFC79EC7C7C79E9F9FC77BA67BA67BA6A5C77BA6FD07C7C1
%999F999F7575747575756E99757574FD17FFC9CE52289FC7C79F999F7BC8
%999F99CFFFFF84270052C19F999F2728FD23FFA6C87B7BA0A69EC7C0C79F
%A67BA59EC7C09F2D587BA59EC7C0C79899989F74754A756E756E756E756E
%74A1FD15FFC9CEC9C875519EC79F9974CDC89F747575FFFFFF270026C799
%99994B00FD25FF590584CF827BA6A5FD05C7A5A67B8258342E587BA59F9F
%997B51756E757499759974996E996EA7FD14FFC9CEC9CEC7C7757CC7C8A0
%CFC8CE9F9F5151A7FFFF5200279F9F99C14B27FD25FF2E287DFF577C577C
%7BC79FA57B7C577C7B82572E0B2E0C514A522E2827754A754A756E756E75
%6E6E75FD13FFC9CEC8CEA6C7C67B06FFFFFFCFA6A6C1749F759FCAFF7D05
%009F9999995100FD22FFA77C585227A8FFA757A67B7C578257827BA67BA6
%7B580C340B34516E4B2E2E2E2D342E516E99757574756E99FD12FFCFC8C8
%CEC8A675C7512EFD04FF7CC8C79F999F98C9FFA8270075C7999F4B28FD21
%FFCA580B2E0528A8FFA77B7BA67B7B577C7BA57BA67B7B2D2E0B2E0B514A
%752D2E0B2E0B2E2D756E756E756E756ECAFD11FFC9A6C8A6C87B7B7B277D
%FFFFFFCFC8A5C899997499A0FFA82E00519F99994B05FD20FFCF7C0B342E
%2E0584FFFF7B827B8257827B827B827B7C57582E342E34516E75822E342E
%342E346F9975756E997475A7FD10FFCFC7C8C8CDA5A09F7B52FD05FFC8C8
%C7C199C175595252520527C799C14B2EFD1FFFCA7C0B2E0B340B2E0BA8FF
%A757A67B817BA67B817BA67B7C2D2E0B2E0B754A757B340B2E0B2E0B516E
%756E756E756EA1FD10FFA5C8C7C89FC7C79F0553FD05FFC99EC79F99752E
%5151057D05059F9F994B53FD1EFFCF7C0B2E2E342D342E2E84FFA77B7BA6
%7B827BA67BA67BA67B340B342D514A756EA657342E340C3451996E757575
%6E75A0FD10FFC9FD04C79FC751522753AFFFFFA8CFCEC7C7752E51C19951
%7DFF52A698997CFD1EFFA7580528272E0B2E0B2E2EFFFFFF756E4A752D58
%2D582D582D582D2D4A744A6E4A757B580B2E0B2E0B756E756E756E754AA0
%FD12FFA7524B514B9F9EC7502E7E7D00A8FFFFA075759F749F747DFFFFCA
%A77CFD1EFFA7580C2E28522E2E2E340BAEFFFFFFA14A6F75A6577C587C7B
%580C2E2D756E754A756EA67B342E342E34517574997599747575FD13FFA7
%9F9FC8FD04C77B280553FD04FFC99F989F999952FD23FFCF512E2E2E272E
%272E0B59FD04FFA86E4A7B7B582D587BA52D2E27284A744A6E4A757B820B
%2E0B2E0B756E756E756E756E75A8FD13FFC9C8A6C89FC79EC72D057DFD05
%FFCA9F749F2752FD24FFA62D2E2E52272E0B58FD06FF754B51827BA67B7C
%7B3427522E2E27756E6F74A67B340B342E345175757574996E7475FD15FF
%C9C8FD04C751282EFD08FFA7512E2EFD24FFA77B052E282E0534A8FD06FF
%5205587BA57BA57B7C0B2E052E2E2E274B4A757BA62D2E0B2E2D756E756E
%754A7475FD18FFCFC8A6512800A8FD08FFA82E2752FD25FFA77C052E0B59
%FD07FF7E2E2E27583458577C2E340C344B522E52284B6E9F81340C342E52
%747575756E7575FD1BFF53520559FD0AFF2E522EFD26FFA77C2E84FD06FF
%A8A7522E276E4A512D2E0B2E2D2E276E4A2E272E052D517C0B2E0B2E4B75
%6E756E7476FD1BFF84522728A8FD09FFA8522752FD30FFA7A7CE582E4A6E
%4A754A754A756E744A744B2E0B342E2E2D754B754A7575756E99A7FD1CFF
%592E287EFD0AFFAF2E2E52FD30FFA7CEA7830B514A6E4A6E4A6E4A6E4A6E
%4A7B0B2E0B2E0B754A6E4A4A4A756EA0A8FD18FFCF587EA9A8272E28A8FD
%08FFA9FF7D2E057DFD2FFFCACEA7CEA73434CFA8CFA8CFA8CFA8CFA8CF81
%580C342E7B99A0A1A77CA0A0CFFD19FFCFC675277C522E272E27A0CAFD05
%FFCFA07D7D515252FD2FFFCEA6A7A6A70B34AFFD0AFFA6510C0B7B98992D
%FD1EFFCF9EC152A6C67500052E766E9FA1FD04FFC89E2727C79F2705FD2E
%FFA6CDA6CEA7340BA8FD0AFFA67C0C7C999F2E0C59FD1CFFC9C7C775A8C7
%C7758484FFA8767474A7FFFFCD9E9F537BC6C1520528FD2CFFA8A7A6C8A6
%A72E0B59FD0AFFA7577B98750B2E0B2EA8FD1BFFA09F9FA8A6C79EA1FD04
%FFA9A7A1FFFFC9989FA1FF9FC799FF7D52A8FD2CFFA6A7A6CDC8580B59FD
%0AFFA7C79F7C0C342E340BA8FD1CFFCAFFCFC79FC8FD0AFFCFC9A1FFCAC1
%9EC9FD2FFFA7FD04A6C87B512DFD0AFFCF9E7C0C2E0B2E0B2E34FD1FFFA8
%CACAFD0FFFCACAA8FD2FFFA782FD04A6A0757BA8FD09FFCFA657342E340C
%342E34A8FD62FF7CA59FA67BA62D2E0BA8FD0AFF7B7B0B2E0B582D2E0B83
%FD61FFAEC7C7C79FA6A5580C2E83FD0AFFA77B580C349FC1512E58FD61FF
%C99EC7989F7BA52D2E0B83FD0AFFA7A5510C7BC79E9F512EA8FD60FFA5C7
%C79F99A6A5580B2E59FD0AFFCF7B7C2DC7C7C7999F51A8FD5FFFA6C69EC7
%98997BA52D0C0559FD0AFFA7A557579EC79E9F74987CFD25FFA0C9CAFD37
%FFCFC9CFC9CFA7CFCFAEA8AEA8FD0BFFA7AEA7CEC9CEA7C9A7CAFD24FFCA
%C9A0C3C9FD11FFCFFD68FFCFC9A02F52C2CAFD0FFFA1C9FD69FFC9C276A1
%C2C9FD04FFA8CFFD07FFCAC2C2C9FD68FFCAC9A1C9C9CAA0C9FFFFA199A7
%FD05FFCFC9A0C2A0CFFD25FFA852A8FD3FFFCFFFCFFFCFFFC9C9C2FFA19A
%99FD06FFCFC2C9C9FD27FF7DF82EA8FD3EFFCFCACFCFCFCAC9C2C9A09A75
%CAFD04FFCFCFC2C9CAFD29FF590552A8FD3DFFFD04CF8AC9C2CFC3A075CA
%FD04FFCFCFC2CAFD2BFFA82E0552A8FD23FF7D5205FD15FFCA668ACA191F
%A0C9CAC975A8FFFFCFCFCAC9A0CAFD2DFFA82E2759FD21FFA8522E0552A8
%FD15FF668ACA665FC9C9CFA0C9FFFFCFFFCAC9C3FD30FF842705597D5284
%FD17FFA85952FF84592727057DFD17FFCFCACFCAAE7CC9A0C9FFFFCACFC9
%C2A1FD32FF7D28272E2E52A8FD15FF7D282752522E052853FD19FFFD04CF
%A7C9C2C9FFFFCFCFCFC9C2FD34FF5327272E0052FD0CFFA7C9FD05FFA828
%27052E2728002E7DFD1BFFCACFCAC97676CAFFCAA7A7CFA0C9FD35FF282E
%2E2E057DFD06FFC9C2C1CEA7C1C8FD04FF7D05282E52282E287EFD1EFFCF
%CFA02E76FF52597DA87DC3CAFD34FFA828272E2E2800A8FD04FFA075575F
%A5C19ECEFFFF7D2E052E272E272E057EFD1FFFCF522827C97E052E595253
%A8FD36FF7DFD042E2805AFFFFFFF8A1E423B66A5C7C9FF522805522E2E28
%522852A8FD1FFFA1270559CF7D53FD3CFF7D28272E2E2827FFFFFF837B75
%C19FC7C7CF272727282728052E2EA8FD20FFCACF7CA7CACFA0C9FD3DFF7D
%769AC29A9A76FFFFCF999F9FC79FCEFF7D697069949A9A7DFD21FFCFAE36
%AECFFFC97DC9C9CFFD3AFFCFC39AC29ABC9ABC7DFFFFA0749F7B067EFFA1
%69696F6FC2BCBCA1FD1FFFCACF3C1435AECFA77DFFC9C3CAFD38FFCFC39A
%C29ABCBCC2BCBCA8CFA09F9FA651A7CEC97594699A99C29AFD20FFCF361B
%3C1B35FFC9A1CFFFC9C9FD29FFA85252AFFD0BFFA16970696F93BC99BC93
%C29F9F9FC8C7CDC7C8C7CDA5A099BB93C3FD20FFC984141A35A8CFC9C3CF
%CACFA0CAFD28FF53002E2EA8C9CF84A87EFD05FFA17069706994BBBC99BC
%C1CDA5A0759FA6CDC8CDC8CECDC993BCCAFD1FFFCFCFCF6014A8CFFFC3FF
%FFFFCFCFC3FD27FFA8F8191352519F9F7B27282E7DA8FFFFFF4C28274C69
%9993B599CDC8CDC79F74C8A5C8A0C2A6CEA6BBA0FD20FFCFC9CFA8A8CACF
%C9C9FFFFCACFCFC9CAFD26FF7D05192E2E769FC7C7C727522858A8FFFF59
%05522E52939A93999FC8C7C79F9FC7C8A0BD9AC8C8C8C7C7A8FD1FFFC9C9
%CFFFCFFFCFCFC9FFFFFFCFFFC9CAFD26FF7D002E052E75C19EC79F28272E
%057DFFFF2728275227696F754A6E74C79EC774C799A099C29AC89FC79ECF
%FD0CFFCFFFFFFFA8FF7D59A8FD0AFFC99ACAA87D7D7D53FD05FFA85252FD
%26FFA853272E519F9FC7C77B28522E2E7BCEA82828592E776F7574756E9F
%C7C79F9FC7C29AC29AC2C8C7C7C8FD0AFFCFCEC8A07D7D2E2E282E52FD0B
%FF2852CFA805280052CAFD05FF59A7C9FD27FF7C4A9F99C79EC7512E282E
%52C79ECE59272752A8A04A756E6F74C79FC774C79F9A93C2C7C79EC77BFD
%05FFCFCFFFCFA5C79F75052805272EA8A9FD0BFF7D057DFFC9A17CA17DC3
%A0FD05FFCFC9C9FD26FFC99999C1C7C79FC79F582EA6C7C7C87D05287DFF
%A1746E756E9FC7C7C79F9FC7C1C2C7C8C7C7C75259FFCFCFCDC87BCF9F9F
%759F752E2E5252FD0DFFCF7D52FFCFFFCFFFCFFFC9C2C2FD05FFCAC9FD26
%FFC9749998C79FC79EC79F9F9EC79FC79E7559FFFFCA6E744A7574C79EC7
%749F9EC7C7C79FC7C69F057CC8C89FC7512727757599749F272852A8FD0C
%FFCFCFA0C9FFFFCACFCACFCACFC2C2A1FFFFFFCACFC9CFFD25FFCA996E75
%75FD0CC7C8FFFFFF996E756E75C7CC9F75749F999F99C7C7C7517C9F9F99
%9F9F520528759F999F9F52285252FD0DFFC9C9FD04FFCFFFCFFFCFC976C9
%FD04FFCFA7A7FD26FFA8A06E6E6E999EC7C7C79EC79FC79EA5A0FFFFFFA8
%A075756E9F989F6E744A756E6E74C7C87E759F9999759F75280552999975
%9F750651FD0DFF52A0CAFFFFFFA7FFCACFCFCF4B05A1FD05FF52A8CFFD28
%FFA0756E75749FC7A59FC7C7C7C0CFFD06FFA8756E756E756E756E7575FD
%04FFA0989F999F999F2728279F999F999F51C9FD0CFFA828A8FFFFFFA852
%CAFFCFFF7C0652C9C2CAFFFFFFCFCFCFA8FD28FFA8A16E6E4A74747574C7
%9EC8FD08FF4A756E744A756E754AA8FD04FFA099749F759998520028519F
%75757CCFFD0CFFCAA17DFFFFFFCFA80052A7CFCA7627C9C2C2A0CAFFFF7D
%532759FD2BFFA1A77C756E756E9FCFFD05FFCACFCA756E7574C8C7C8C8C8
%C9FD04FFCF999F999F999F9F75A0FF7D2827A8FD0CFFA85352A8FD04FFCF
%7D0553FFFFA8FFC9C9C2C9C2FFFF847D2728FD2EFFA8A075A7A9FD05FFA8
%C2C1CD9F756E7475FD04C8CEA6CEA0FFFFA0749F999F7576C9FFFF7E0028
%7DFD0DFF7E7DA8FFFFFFCACFCFA176FFFFFFCFCFC2C3A0C3C9FFFFFF7D7D
%FD38FFC39AC2C8C798756E9FC7CDC8CEC8CEC8BCA1FFCFCAA7FFFF7E05FF
%FFFF592828A8FD13FFCFCFFFC9C9C9FFFFFFCFC9C2C9C2C9CFFD3CFFC89A
%9AC2A59F4A7574C79FC8C8C875C29A9AA7FD05FF7D057DFFFF520052A8FD
%13FFCACFCACAA0C2A8FFCFCFA7C2A0C3A0CAFD3BFFCFCDC2C3C1C79F756E
%9FC7C7C7CD757599C3C2CDCFFD04FFA80559FFFF272E52FD14FFCFCFFFCA
%C9C2CFFFFFCFCAC2C9C2C9C9FD3BFFCFC7CDA0C79ECEA1756E9F9EC79E74
%4A75A0CD9FC9FD04FFA92805845927277DFD14FFCAC9C9CFC2C2C9FFFFCF
%C9CAC2C3A0C9CAFD34FFCFCFCECFCECFA77C7CC8C0C8FFFFA8A0A0C8A7A1
%6E756E9F514BA1FD05FF7D270528272EA8FD15FFCFCAC9C9C2CAFFFFFFCF
%CFC9C2C9C2CAFD33FFA6C8A5C89FC79FA5050674C7A8FD08FFA04A742706
%05FD04CFFFFFFF5227002E7DFD15FFCACFCACFA0C2A1FFFFFFCFCFA7C3A0
%C2A0FD33FFC9999F999F999FC19F2EA7CAFD0AFFA0752E27519FC89FC89F
%FFFFFFA8A8A8FD17FFFD04CFC2C9FD04FFCFFFC9C9C2C9FD33FFA89F7499
%749F759F9EC9FD0DFFA827757499749974A0FD1EFFCACFCAC9C2FD05FFCF
%CFC2C2A0CFFD33FFA19F999F99A09FC7C7FD0DFF2875749F999F98A0FD20
%FFCFFFC9C9CAFD05FFCFCAC2C9CAFD33FFCA9FC8A5CDA0A69EC7A8FD0BFF
%7D274A759F9F999FA8FD1FFFCAFFA15251FD07FFA8C9C2C9A0CFFD31FFA7
%CDCDCDC8CDC7C79FA8FD0BFF5927759FC7C7C7A0FD22FF7D052EA9FD07FF
%7D52CAC9C3FD30FFCFCDC7CDC8CDA5C7C675A8FD0BFF05516E9F9EC79EC8
%FD21FFCFC276007EFD07FFA805A8C9C9FD30FFCEC8CDC8CDC7C7C7A552FD
%0BFFA8284B759FC79FC7C7FD21FFCFCFC22828FD08FF7D28C9C9FD2FFFCF
%A5CDC8CDA5C79EC74B7EFD0BFFA805756E9FA5C79EC8FD22FFCFFFA7C9A0
%CFFD06FFA852A1C9CAFD2EFFA7C8C8C89FC8C7C79F2EAFFD0CFF7D4A9975
%7B759FA0FD25FFCFC9C2FD07FFCFCFC2C9FD2EFFCF757551514BC7C72752
%CECFFD09FFA0C9CE51275151754BA8FD24FFCFCFCAC9C3FD07FFC9C3A0CA
%FD2DFFCECDA6CDA67B755252C7C0CEFD09FF756E9F517574C7C7C7A5CFFD
%24FFCFFFC9C9FD06FFCFFFC9C3C3FD2CFFCFCDC8CDC8C8C09F51C79EC7A8
%FD09FFA7744A756E749EC7C0C79FFD25FFCFCAA0FD07FFCACAA0C3CAFD2B
%FFC9C7C89FC8C7C7C7CCC7C7CFFD0BFF7C7574756E754B516EA0FD26FF7D
%52FD08FFCFC9C2FD2CFFA7754B4B4BC1A5C79F9FA7FD0CFF530528272705
%28057DFD27FF7D05FD09FF7676CFFD2BFFA9052806282752272E05A8FD0C
%FF2828052E282827282EA8A8FD25FFA82EA9FD08FF7D00A8FD29FF84A828
%27052805280528050553FD0BFFA82805280528272E272E272E277DFD24FF
%27FD09FFA82E27FD28FF52522E522E2E272E272E27280553FD0BFFA80528
%052805282E5852522E5252FD24FF52FD0AFFA92852FD26FFA8522E522E2E
%27280528052E285259FD0BFFA87E537D5359525952595259527DFD23FFAF
%2EFD0BFFA82753FD28FFA8A87EFD04A8AFA8FD3FFFA87DFD0CFFA82E7EFD
%70FFA8FDFCFFFDFCFFFD24FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">vectorpocket</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 23.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-11-08T14:53:25+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-11-08T14:53:25+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-11-08T14:53:25+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYqoS6hYRSrDLcxRyuwRI2dQxZtgoBNSTii1fFLsVSLXfOGm6TL6BDXFzSrRRkfD4cielcIDCUwE&#xA;m8r/AJqaLrut3OklBaSwJzileQMkhU0dQSF3Xb57+GQyTjAXIgDzTjlxGgGXfpLTqgfWoakgAeou&#xA;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&#xA;rsVdirsVdirsVf/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:0b8e31d6-0549-c047-9685-dc9ca9cf5c28</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:0b8e31d6-0549-c047-9685-dc9ca9cf5c28</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:bde181d8-7628-0249-bafc-7e87240600ad</stRef:instanceID>
            <stRef:documentID>xmp.did:bde181d8-7628-0249-bafc-7e87240600ad</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7f846d85-2490-ba43-8c3b-798314c9c2fe</stEvt:instanceID>
                  <stEvt:when>2017-08-31T17:33:17+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0b8e31d6-0549-c047-9685-dc9ca9cf5c28</stEvt:instanceID>
                  <stEvt:when>2018-11-08T14:53:25+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>400.000000</stDim:w>
            <stDim:h>400.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р‘РµР»С‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р§РµСЂРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>РћС‚С‚РµРЅРєРё СЃРµСЂРѕРіРѕ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р¦РІРµС‚РѕРІР°СЏ РіСЂСѓРїРїР° 1</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=189 G=181 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>189</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -400 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 400 li
400 400 li
400 0 li
cp
clp
400 400 mo
0 400 li
0 0 li
400 0 li
400 400 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
64.4268 48.1353 mo
75.9736 85.9843 86.3828 124.181 95.6352 162.656 cv
121.022 162.531 147.207 162.808 172.564 164.294 cv
170.47 122.767 160.355 81.6377 142.947 43.8769 cv
116.744 44.6352 90.559 46.0591 64.4268 48.1353 cv
.199557 .566888 .97763 .0466621 cmyk
f
112.022 74.6568 mo
157.166 80.3579 li
165.622 103.845 169.915 132.958 172.564 164.294 cv
145.382 163.218 119.523 162.104 95.6352 162.656 cv
74.5595 82.4614 li
112.022 74.6568 li
.321782 .743862 1 .314794 cmyk
f
160.789 24.1846 mo
160.754 24.1211 li
133.726 23.8726 106.076 26.3535 79.438 30.9356 cv
73.6905 35.9673 68.7256 41.75 64.3995 48.0454 cv
64.4268 48.1353 li
90.559 46.0591 116.744 44.6352 142.947 43.8769 cv
143.008 44.0132 li
148.097 36.71 154.075 30.0283 160.789 24.1846 cv
.0614023 .247898 .95169 0 cmyk
f
160.79 24.1846 mo
154.075 30.0283 148.097 36.71 143.008 44.0132 cv
160.378 81.7368 170.473 122.816 172.564 164.294 cv
172.804 164.309 173.046 164.318 173.286 164.333 cv
184.483 159.12 193.633 152.301 200.255 144.149 cv
195.432 102.317 181.872 60.6372 160.79 24.1846 cv
cp
.271183 .697047 1 .169436 cmyk
f
97.1113 23.8091 mo
94.3404 24.1323 90.4668 24.2759 88.1704 25.6694 cv
81.4483 32.0357 75.6621 39.3882 71.0542 47.4184 cv
73.6084 61.8706 77.6499 78.0215 82.4243 91.4097 cv
85.0332 91.748 89.3803 91.708 91.3413 91.2275 cv
87.7784 79.2094 84.2133 63.7964 80.6484 46.9307 cv
85.9653 38.5591 90.6529 31.0254 97.1113 23.8091 cv
.410468 .223423 .288701 0 cmyk
f
100.691 27.7905 mo
99.3633 26.1147 98.664 25.2788 97.1113 23.8091 cv
90.6529 31.0254 85.9653 38.5591 80.6484 46.9307 cv
84.2133 63.7964 87.7784 79.2094 91.3413 91.2275 cv
92.8638 90.2412 93.6582 89.5215 94.7627 88.0825 cv
91.6895 75.1626 88.8272 61.0391 85.9135 46.583 cv
90.1441 39.7964 95.0967 33.5053 100.691 27.7905 cv
.68069 .454383 .523583 .190829 cmyk
f
140.307 91.3623 mo
140.405 91.3496 li
141.1 90.2979 144.137 88.8858 144.831 87.8339 cv
140.024 74.1831 135.217 59.6421 130.783 44.3516 cv
135.113 37.396 140.262 30.4585 146.112 24.2485 cv
145.088 22.126 144.119 20.4033 142.415 18.7774 cv
135.819 26.1602 130.09 34.3173 125.405 43.0391 cv
129.039 61.0517 134.487 82.1739 140.307 91.3623 cv
f
125.405 43.0391 mo
130.09 34.3173 135.819 26.1602 142.415 18.7774 cv
142.405 18.7666 li
139.385 18.7505 132.637 20.3486 132.637 20.3486 cv
124.901 27.0058 118.697 35.0567 113.908 44.0093 cv
116.491 59.7759 121.414 75.0953 127.525 89.8569 cv
132.084 91.8951 135.356 92.0645 140.307 91.3623 cv
134.487 82.1739 129.039 61.0517 125.405 43.0391 cv
.410468 .223423 .288701 0 cmyk
f
149.188 44.6221 mo
152.532 52.0737 155.686 59.9136 158.57 67.9448 cv
160.723 58.6494 162.244 49.1406 163.095 39.6587 cv
161.787 37.1123 160.591 34.8501 159.451 32.7637 cv
155.757 36.4277 152.307 40.4141 149.188 44.6221 cv
cp
158.717 70.5889 mo
158.292 69.3936 li
155.272 60.8906 151.949 52.5923 148.414 44.729 cv
148.324 44.5293 li
148.455 44.3525 li
151.729 39.9141 155.371 35.7183 159.278 31.8799 cv
159.631 31.5337 li
159.87 31.9668 li
161.1 34.2065 162.39 36.6421 163.811 39.4126 cv
163.861 39.5098 li
163.852 39.6177 li
162.961 49.5913 161.333 59.5967 159.011 69.355 cv
158.717 70.5889 li
cp
166.743 93.9595 mo
172.965 94.4346 179.253 95.3877 185.449 96.7954 cv
181.037 81.0591 175.373 65.6553 168.605 50.9819 cv
167.249 60.5908 165.21 70.2246 162.538 79.6396 cv
164.025 84.3149 165.439 89.1309 166.743 93.9595 cv
cp
186.511 97.8105 mo
185.896 97.667 li
179.45 96.1704 172.898 95.1675 166.423 94.6875 cv
166.158 94.6675 li
166.088 94.4106 li
164.758 89.4702 163.312 84.5405 161.789 79.7598 cv
161.755 79.6523 li
161.786 79.5435 li
164.581 69.7148 166.684 59.646 168.036 49.6157 cv
168.207 48.3481 li
168.747 49.5073 li
175.858 64.7529 181.779 80.7998 186.342 97.2017 cv
186.511 97.8105 li
cp
168.545 100.898 mo
170.98 110.731 172.995 120.821 174.54 130.913 cv
179.574 124.184 184.253 116.608 188.461 108.379 cv
188.128 106.987 187.782 105.598 187.429 104.21 cv
181.27 102.621 174.92 101.507 168.545 100.898 cv
cp
174.064 132.787 mo
173.932 131.907 li
172.347 121.369 170.247 110.825 167.689 100.566 cv
167.563 100.054 li
168.088 100.102 li
174.755 100.71 181.397 101.867 187.832 103.54 cv
188.046 103.595 li
188.101 103.81 li
188.486 105.317 188.861 106.826 189.223 108.34 cv
189.255 108.474 li
189.192 108.597 li
184.8 117.204 179.891 125.104 174.602 132.078 cv
174.064 132.787 li
cp
175.829 140.187 mo
176.514 145.689 177.055 151.057 177.439 156.151 cv
184.28 152.255 190.065 147.653 194.642 142.463 cv
193.677 134.63 192.35 126.562 190.693 118.462 cv
186.17 126.416 181.174 133.72 175.829 140.187 cv
cp
176.778 157.383 mo
176.734 156.796 li
176.347 151.489 175.785 145.878 175.064 140.119 cv
175.044 139.958 li
175.148 139.833 li
180.698 133.135 185.874 125.528 190.532 117.223 cv
191.022 116.349 li
191.226 117.331 li
192.993 125.835 194.399 134.317 195.407 142.539 cv
195.427 142.706 li
195.316 142.832 li
190.552 148.267 184.487 153.065 177.292 157.096 cv
176.778 157.383 li
cp
.321782 .743862 1 .314794 cmyk
f
75.8469 69.5794 mo
73.9879 62.3752 72.4002 55.056 71.0897 47.6202 cv
71.0899 47.6201 li
72.3487 54.7119 73.964 62.2067 75.8469 69.5794 cv
level3{
gsave
clp
[15.7447 42.7234 -42.7234 15.7447 71.0576 40.7359 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea
%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea
%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea
%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea%O#Ea
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~%O#Ea%jGWd&0koi&128p&LMDr&h.f#&h7o%'.e5*'J4P0'/+S1'ejq6(,L=<(H$^C(cHsG)*!6K)*<NP
)E`cT)a9,Z*'T>^)a]Ma*(#hh*CH%k*Cc=p+%M_!+A&('+AA@,+\eR/,#=s6,#G$7,>k<<,ZCWA,ugoF
-!.2K-<[JO-X3eT-=*tY-sj:^.:9Rc-t9^f.:Tpj.V6<p.VZX!.r*!(/8W9,/SrH0/T8`5/o]#:/of2>
/p,JC/p>\H06bqM06u.Q072IX07M^]0Rr!b0S8<i0SJQo0nnit15>'#15YH+15bT/1QCu61QM/:1QhJA
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.0391061 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[15.7447 42.7234 -42.7234 15.7447 71.0576 40.7359 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~%1NaU%1NaU%1NaV%Ls![%hB0]%hB3_&.fEc&J5Te&J5Wg&eYik',)#m',)#m'GM8s'c%Q#()Ic'(Dmu+
(`4),(`=2/)&aD3)B0V7)]K_8)]K_8)]Th;*#oq<*??1B+!2RH+!2RH+<VdL+X&!P+X&!P+sJ3T,9nEX
,U=W\,U=W],paia-71&d-71&d-7:/h-n$Jl-n$Jl-n$Jm.4H\p.4H\q.Olnu.k</%/1`>'/1`A)/M/P+
/M/P+/M/P+/M/S-/hSb//hSb//hSb//h\k20/"t30/"t30/,(60JP::0ekC;0ekC;0etL>1,:U?1,:U?
~>
<~+<VdL+<VdL+<VdM+X&$R+sJ6V,UF`_,palc-R^Dm.4H_r.k</%/1`A)/hSe10/#"61,C^C1c7-J2)[?O
2`NfX3]fDb4$5Vg4Ztqk4[)(q5s[e&5sdn)6:4.07Rfj:7n6*@8P)NI9MA,R9heAX:JXb^:f'tb;,L4h
;c?Un<)lt#='/R-=^#!5>?kE=?!U`B?=$rF?smDO@:<SR@q9+]AnPdkBk_9rCMR^$CMRa&D/O91Df9T6
E,]f;EcZ>EF`hkNG'8(RG^+LZH?spcI=?WoIXcitJV&K+K7no2KS>,6KnbA<Ll$tFM2I4MN/`gVNK0']
~>
<~AS#FaAS#FaAS#FbAnG[gBPD3sCi+'-DJjB2E,]f:EH-#>F)uGGG'A.SGB\:VH$O^^H[L6jIt3'#JV&K*
JqJ]/KS>,7L51S@M2I4MN/W^SN/is]P*;)nPE_>tQBml)R@0M5S=H.@St;OFT:hmPU8"BVUSO`_VP^8h
W2ZesX/i>(Xf\_.Y-5%5Z*L^C['[3J[^NZT\@B&Z]">Se]Y2"m^:q=s_8=+.`5KX6`l?'>aN2KFb0/#R
c-FY]d*U1fdaHUneC<%!f%/L,g=tE<gtgfChr*GOioB([jlYahkiq?rl0@U%mdKW6nF?&>o(2MHp%J.T
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!"!<E3%!<E3%!<E6'!WiE)!WiE)!WiE)!WiE
)!WiH+!s8Z/"9\i1"9\i1"9\l3"U,&5"U5/8"pYA<#6tJ=#7(S@#RC\A#RLeD#mq"H$47+I$4@4L~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
71.0897 47.6202 mo
71.0778 47.5527 71.066 47.4859 71.0542 47.4184 cv
71.0542 47.4184 li
71.066 47.4855 71.078 47.553 71.0899 47.6201 cv
71.0897 47.6202 li
level3{
gsave
clp
[15.7447 42.7234 -42.7234 15.7447 71.0576 40.7359 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M
"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M
"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M
"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M"po;M
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~"po;M"q,JP"q#MR"q5_V#7YtZ#7Q"\#7c.^#7l=b#7lFe#7uRh#SDgl#SMso#SW-s#SW7!#S`="#SiL&
#o&X)#o8j-#oB!0#oK-3#oK66#oTB9#o]K;$6#W=#ofZ?#ooiC#p-)H$6?2J$6HAN$6ZPQ$6c\T$6ceW
$6lnY$R<.]$RN=`$RNCb$RWRf$7NUg$n&pm$Rrsn$S'-r$S06t$S'3t$S9F#$n]['$nfg*$STj,$STm-
$Sg03$Sp?7%5QT:%5cf>%Q3&B%QE8F%QEAI%liVM%lreQ%m&nS%m&qT%m91Y%R'1Z&3T@\&3fUa&3oad
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.0391061 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[15.7447 42.7234 -42.7234 15.7447 71.0576 40.7359 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~"U,&5"U,&5"U,&5"U,&5"U,&5"U,)7"pP89"pP89"pP89"pP89"pP89"pP;;#6tJ=#6tJ=#6tJ=#6tJ=
#6tJ=#7(S@#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#mgnE#mgnE#RC\A#RC\A#mgnE#mgnE#mgnE#mgnE
#mgnE#mgnF$47+I$47+I$47+I$47+I$47+I$4@4L$O[=L$47+I$47+I$47+I$47.K$O[=M$O[=M$O[:K
$47+I$47+I$47.K$k*OQ$k*RS%1NaU%1NaU%1WjX%LrsY%LrsY%LrsY%LrsY%LrsY%LrsZ%hB0]%hB0]
~>
<~#RC\A#RC\A#RC\B$47+I$47+I$O[@O$k*OQ$k*OQ%1NdW%LrsY%Ls![%hB3_&.fEc&J>]h&eYfi&ebol
',2,p'GM5q'GM5r'c%Q#()Ic'(Ddl((Dmu+(`=2/)&X;0)B'M4)]K_8*#ot>*??.@*??.@*ZcCF+<VdL
+<VdL+X&!Q+sJ3U,:"N[,U=W],paia-7:/g-RU8h-R^Al.4H\q.Olnt.Olnt.k</%/1`A)/M/S-/hSb/
/hSe10JG490ekC;0ekF=1G^jE1c.'I2E!HO2E*QR2`NcV3&ruZ3B9)[3BB2_4$5Vf4?P_g4?P_h4[)%n
~>
<~EH,u<EH,u<EH,u=EcQ5BFEMbMGB\:VH$O^_H[L3gI!g?kIXcm!JqAW-KS5&5L5(J=Ll$tGMi<USNfK-[
NfT9`OckolPa.N"QC!r*R$jA2R[]h<SXuFFT:hjMTqS0RU8"EXUnjiaVl6PnWiE,#XKAV-YHP.5YctC;
ZEppF[C*EN[^W`U\@B&Z\[oAa]Y(qk]tM+n^VRe(_SX1-`5T^8`l?$=a2c6AaiV]JbKJ,Rc-=PZcd0tb
d*U1ge'uq!f%8R,f\"m1g=k<9gt^`AhV[5KiSrkWj5f:_k3(pjkNM-nkiqBtlg4!)m-X3-mI'H4nF?&>
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
87.7676 80.9426 mo
85.9638 80.9426 84.2285 80.9067 82.5548 80.8376 cv
82.1071 80.4365 81.6573 80.0028 81.195 79.5775 cv
83.4545 79.8795 85.8493 80.0477 88.2757 80.097 cv
88.3486 80.3793 88.4216 80.6608 88.4945 80.9407 cv
88.251 80.942 88.0086 80.9426 87.7676 80.9426 cv
80.9948 79.3947 mo
80.1272 78.6091 79.2109 77.8727 78.1787 77.4492 cv
78.1554 77.5786 78.1328 77.7079 78.1109 77.8375 cv
78.1109 77.8375 li
78.1328 77.7079 78.1554 77.5786 78.1787 77.4492 cv
78.1699 77.4448 li
78.1169 77.4605 78.0637 77.4763 78.0108 77.492 cv
77.2528 74.8698 76.5315 72.2326 75.8469 69.5794 cv
73.964 62.2067 72.3487 54.7119 71.0899 47.6201 cv
71.078 47.553 71.066 47.4855 71.0542 47.4184 cv
80.6484 46.9307 li
81.9189 53.271 83.3353 59.6949 84.8806 66.1927 cv
83.3306 67.8607 81.9032 69.7149 80.9648 71.4419 cv
80.7328 73.8821 80.724 76.3432 80.9376 78.7848 cv
80.9545 78.9911 80.9735 79.1949 80.9948 79.3947 cv
level3{
gsave
clp
[15.7447 42.7234 -42.7234 15.7447 71.0576 40.7359 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg
(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg
(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg
(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg(^hPg
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~(^hPg)%7\h)@[nk)\"%m*=a=p*=jCq*tKXt+:fe!+V6"$+qZ4',8)F*,nh[,-PIp/-ke'1.2+02.MOB5
.hsQ7//Bf;/f#u<0,H2?0GlDB0c;VE1)_bF1`A"I2&e4L2B+=M2]FIO3?0gT4!$3Y4WZBZ4WcK\59Mf`
5Tqra5pA2e66eDh6mFYk73jel7O0qn7jU1r8L6Fu9-u_#9IDq&9di+(:+8:*:F\L-:b+^0;Ck$4;_('4
<%U?8<A$Q;="Zc==YE&@=ti8C>;8JF>V\YH?8FtL?Sk1O@5ULS@5LFR@PpXUA2d$ZAiE3[B/iH_BfScc
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.0391061 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[15.7447 42.7234 -42.7234 15.7447 71.0576 40.7359 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~(Ddl((Ddl((Ddl)(`4,.)&X>2)B'P6*#oq<*#ot>*ZcCF+!2UJ+<VgN+X&$R+sJ6V,UF``-7:/g-R^Ak
-n-So.4Qes.P!#".kE5'/M8Y./h\k20/,(60JP::1,:XA1c.$G2)R6K2E!HO2`E]U3B9,]4$,Pe4?P_g
4Zttm5<h@t5X7S#5s[e'6:4+.6psF377BX77Rfj;7n?0B8P2TJ91qoO9MA,S9heAX:/4S\:JXe`;,L4h
;GpFl;c?Xp<)cjt<`W:'=BJ^/=]np3>$G38>?kE=?!^iD?=.&I?smAM?t!JP@:E\U@q9+]AS,OdAnPai
~>
<~$47+I$47+I$47+J$O[@O$k*OQ$k*RS%1NdW%LrsY%LrsY%Ls![%hB3_&.fEc&J5Wg&eYfi&eYfi&eYfi
&ebol',2,p'GV>t'bqGu'c%Q#()Ic'(Dmu+(`=2/)&X;0)B'M4)B'M4)B'M4)]K_8*#ot>*??.@*Zc@D
+!2RH+<VdM+X&!Q+sJ3T+sJ3U,9nEX,9nEY,U=W\,U=W],paia-71&e-RU8i-n$Mn.4H_r.Olr!.k<,#
.k<,#/1`A)/M/P+/M/S-/hSe10/#"50JP::0etL>1,C^B1GgpF1c.$G1c.$G1c7-K2E!HO2E*QR2`NcV
~>
<~+sJ3T+sJ3T+sJ3T+sJ3T+sJ6V,9nEX,9nEX,9nHZ,U=Z^,palb-71)f-RU;j-n$Jl-n$Jl-n-So.4H\p
.4Qes.Olnt.P!##/1`>'/1`>'/1iG*/M8Y./hSb//hSb/0/"t30/"t30JG170ekF=1G^gC1G^gC1G^gC
1c.$G1c.$G1c7-K2E!HP2`EZS2`EZS2`EZT3&ru[3]];_3]];`4$,Mc4$,Mc4$,Pe4?Pbi4Zttm5!D.o
5!D1q5<hCu5X7S"5X7S"5X7V$5s[h(6:+"*6:4+-6UX=16q'O577BX677Ka97Ros=7n6'>7n6'?84cBE
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
88.4945 80.9407 mo
88.4216 80.6608 88.3486 80.3793 88.2757 80.097 cv
88.3005 80.0975 88.3252 80.098 88.35 80.0985 cv
88.423 80.3787 88.4964 80.6598 88.5699 80.9402 cv
88.5448 80.9404 88.5196 80.9405 88.4945 80.9407 cv
level3{
gsave
clp
[15.7447 42.7234 -42.7234 15.7447 71.0576 40.7359 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW
//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW
//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW
//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW//ptW
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~//ptW/f[7Z0H<L]1ET*e2BYQk2^1io3@%8u4!dT$4XWu)5:98-5q,Y26n;+77P.O=81mjA8hX0E9e]TJ
:GQ#P;)DAT;`7bY<B"._=?'Oc=ufpi>WZ9m?9MZs@6J'#@R+E(Aj^,1BLQP7C.2e;Cdr(>DF\CBE(OgI
E_C0MFA6NRG><#YGu&;\H;SVcHr=qgIT(4kJ5^OqJlQn!KNE7&L08X-LKSd0MHk<7Md:Q=NaHuBOC3;G
O^NMMP[SkQQ",+VQt1U_RUppdS7d6iSnNTpT5&iuTk]0'UMPK,V/1`0Vf%/9W,RA=WcE_CXDrtIY&oCQ
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.0391061 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[15.7447 42.7234 -42.7234 15.7447 71.0576 40.7359 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~.k<,#.k<,#.k<,$/M/S-0/#"50etO@1c70L2E!KQ3&ioY3]]>a4?Pbi5!D1q5X7V%6UX=277Ka:7n?0B
8P2WK9MJ5V:/=Y^:f1(f;H$Ln<)lt#='/R-=^#$6>[1Q??=$uH@:<SQ@Uiq[AnG[gBP;*oC2.O"Ci!s*
DJjB2E,]f;EcZ;DFEMbNGBe@XH$O[]H@(!dI!pElIXcitJ:W9'JqJ]/KS>,7L5(J=Ll%"HMMd=MN/`jX
O,oBaOH>TfP*;,pPa%H!Q^=),R@0M4S"-">SXuFEStDXJTV8'RU8+KZUnsobVPg>iVl6PnWN)u!X/rD)
~>
<~)B'M4)B'M4)B'M5)]K_8)]Kb:*?H:E+!2UJ+X&$R,9nHZ,U=Z^-71&d-71)f-n$Mn.P!##/1iG*/M8Y.
/h\k20/,(70etL?1GgpG2)[?N2E*QR2`NcV3&s#\4$,Pe4?P_g4Zttn5X@\&6UO706psF277BX67Rfj:
7n6*@8P)NI92&#R9he>W:/4P[:Jakb;,L1g;GpCj;GpCk;cH^r<E<.%='/R,=BJ^/>$G6:>[1Q??=$uG
?XI/I?XI2K?smDO@U`hW@q0%[A7T7_AnPahB4tsmBk_9qBkhBuCMR^$CM[g(D/O60DfBZ8EH,u<EH-#?
~>
<~6UO4.6UO4.6UO4.6UO706psI47Rfm<84Z<D8P)NH91qrP9MA/T9heAX:JXe`:f'tb:f1(f;H$Lm;cH^q
<)lpu<E<.%='&I)='/R,=BSg3>?b<9>?kH??=$rE?XI/I?smDO@U`eU@q0%[AS#IcB4kjiB4kjiBP;'m
Bk_<sC2.KuC2.L!CM[j)D/F--DJsH4E,]c8E,]c9EcZ;CF)uDDF)uDEFEDVIF`hhLF`hkNGB\7TGB\7T
GB\:WH$Xd_H?sj^H$O^_I!g?jI=6NlI=6NmIXZ`pIXcitJUrB'JUrB'JV&K+K7ef/K7\],JqJ`1KnY57
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E3%!<E3%!WiE)!WiE*!s8W-!s8W-!s8W."9er4"U,&6"
pP8:#6tJ>#RC\B#mgnF$4@4M$k*RS%1NdW%hB3_&.fEc&J5Wg',)&o'GM8s()@]&(`4,.)&X>2)]Th<*
?H7D+!;[L+X/*T,:"N[,UFca-R^Al.4Qet.kE5'/M8\1~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
135.886 81.2372 mo
135.766 81.2038 135.646 81.1705 135.526 81.1375 cv
135.421 80.8566 135.316 80.5721 135.212 80.2857 cv
135.291 80.2302 135.37 80.175 135.45 80.12 cv
135.594 80.4934 135.74 80.8659 135.886 81.2372 cv
level3{
gsave
clp
[22.1277 45.0213 -45.0213 22.1277 112.506 38.0465 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[22.1277 45.0213 -45.0213 22.1277 112.506 38.0465 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
135.526 81.1375 mo
135.163 81.0377 134.8 80.9401 134.437 80.8448 cv
134.693 80.6551 134.951 80.4687 135.212 80.2857 cv
135.316 80.5721 135.421 80.8566 135.526 81.1375 cv
level3{
gsave
clp
[22.1277 45.0213 -45.0213 22.1277 112.506 38.0465 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[22.1277 45.0213 -45.0213 22.1277 112.506 38.0465 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
120.117 69.6874 mo
119.985 69.2577 119.855 68.8276 119.726 68.3962 cv
119.859 68.8248 119.992 69.2515 120.127 69.6794 cv
120.124 69.682 120.12 69.6847 120.117 69.6874 cv
level3{
gsave
clp
[22.1277 45.0213 -45.0213 22.1277 112.506 38.0465 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[22.1277 45.0213 -45.0213 22.1277 112.506 38.0465 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
132.329 71.3144 mo
132.309 71.3085 132.289 71.3027 132.269 71.2969 cv
132.059 70.5936 131.852 69.883 131.647 69.1653 cv
131.87 69.8848 132.098 70.6015 132.329 71.3144 cv
level3{
gsave
clp
[22.1277 45.0213 -45.0213 22.1277 112.506 38.0465 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[22.1277 45.0213 -45.0213 22.1277 112.506 38.0465 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
132.269 71.2969 mo
128.626 70.2434 124.911 69.4415 121.12 68.9253 cv
120.788 69.174 120.456 69.4256 120.127 69.6794 cv
119.992 69.2515 119.859 68.8248 119.726 68.3962 cv
117.38 60.5458 115.452 52.4083 113.908 44.0093 cv
113.908 44.0093 li
125.405 43.0391 li
127.01 52.1615 129.075 60.8842 131.647 69.1653 cv
131.852 69.883 132.059 70.5936 132.269 71.2969 cv
level3{
gsave
clp
[22.1277 45.0213 -45.0213 22.1277 112.506 38.0465 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[22.1277 45.0213 -45.0213 22.1277 112.506 38.0465 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
92.1231 158.543 mo
95.7466 154.183 99.0468 149.769 103.052 145.756 cv
102.234 144.478 101.479 143.171 100.508 142.005 cv
94.6787 145.709 89.5898 150.574 85.6259 156.23 cv
87.8482 157.404 89.6158 158.378 92.1231 158.543 cv
.85919 .688991 .469245 .380224 cmyk
f
92.2324 155.897 mo
89.0318 155.164 85.688 154.551 82.6553 154.291 cv
80.3979 163.865 78.1054 174.452 75.8482 184.026 cv
75.8477 184.027 li
73.7192 191.142 72.7832 194.461 71.0947 200.48 cv
95.0508 200.48 li
95.8027 185.575 94.8579 170.589 92.2324 155.897 cv
.343969 .18088 .894652 .00390631 cmyk
f
96.9008 157.067 mo
95.4223 156.665 93.8442 156.267 92.2324 155.897 cv
94.8579 170.589 95.8027 185.575 95.0508 200.48 cv
104.999 200.48 li
104.811 186.368 101.883 171.294 96.9008 157.067 cv
.836149 .328679 .722316 .187869 cmyk
f
79.1055 169.807 mo
95.187 183.85 li
95.0025 179.706 li
80.4238 163.973 li
79.1055 169.807 li
.0614023 .247898 .95169 0 cmyk
f
95.0024 179.706 mo
103.215 181.432 li
103.601 183.85 li
95.187 183.85 li
95.0024 179.706 li
cp
.199557 .566888 .97763 .0466621 cmyk
f
94.5747 199.98 mo
71.7544 199.98 li
73.3511 194.288 74.2758 191.027 76.3261 184.17 cv
77.3938 179.647 78.4791 174.853 79.5336 170.181 cv
94.6701 183.398 li
94.8711 188.923 94.8398 194.457 94.5747 199.98 cv
94.4683 179.129 mo
80.8358 164.418 li
81.5704 161.177 82.3118 157.935 83.0424 154.829 cv
85.5616 155.069 88.5029 155.568 91.7983 156.312 cv
93.1323 163.851 94.0235 171.475 94.4683 179.129 cv
level3{
gsave
clp
[3.82979 42.0426 -42.0426 3.82979 79.6769 151.266 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J
('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J
('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J
('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J('S1J
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~('S1J(Bn=L(^=UQ)$XgU)@1*Y)@:6\)[L?^*!pQa*XZrg*t!)i+:E>m+UWGo+U`Pq+q/i!,7T&$,S#>)
,n>P--4Y_0-k;"4.1_47.M.L<.M7[@/.djB//"*G/J=9J/eaKM0,0cR0GKuV1)-8Z1DQM^2&;kc2]&7i
3#JOn3#SXp3#ejt3Z>("3ub=&4<(L)4WLd.4rq!15T[?65p!N966Ec=6Qj&B6Qs/D6mBDH73f\M7O#bN
7jH%S8L2CX8gVU[9.%m`9IJ-d9dn?g:++Kj:FOco:asur;C^B#;CgK&;_6c+<%Hi,<@m&/="WG5=>&Y8
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.0391061 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.82979 42.0426 -42.0426 3.82979 79.6769 151.266 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~'bqGu'bqGu'bqH!()@]&(Ddo*(`4,.)&X;0)&X>2)B'P6)]Kb:*??1B*ZcCF+!2UJ+<VdL+<_mO+X/*S
+sS<W,:"N[,UF`_,pjrd-R^Ak-n-So.4H\p.4Qhu.k<,#/1`>'/M/P+/hSb/0/"t30JG491,:U?1G^jE
2)R9M2`EZS2`EZS2`EZT3&ru[3]];`4$,Md4?P_h4Ztql5!M7s5X7S#5s[e'6:+"*6:+%,6UO706psI4
77B[87Rfm<84Z<D8P)NH8kM`L91qrP9MJ5U9hnGY:/=Y]:Jakb;,L1f;,U:i;H$Lm;cH^q<)lq!<``@(
~>
<~"9\i1"9\i1"9\i1"9\l3"U,&5"U,)7#6tM?#RC\A#RC\A#RC_C#mgnE#mgqG$47+I$47+I$4@4L$OdFP
$k3XT%1NaU%1NaU%1NaU%1WjX%M''\%hK9`&.fBa&.fEc&J5Te&eYfi',)#m',)#m',)#m'GM5q'bqGu
()@Z$(Ddl)(`4)-)&aD3)B'M4)B'M4)B'M5)]K_9*#oq=*??.@*??.A*Zc@E+!2UJ+<VgN+X&$R+sJ3T
+sJ3T+sJ6V,9nHZ,U=Z^,palb-71)f-RU8h-RU8h-R^Ak-n-So.4Qes.P!#".k<,#.k<,#.kE5&/1iG*
~>
<~@U`eU@U`eU@U`eV@q0%[AS,RfBPD3rC2.O"Ci!s*DJjB2Df9T7EcQ5BF)uGFF`hkNGBe@WG^4R\H[L3g
I!pHmIt3*$JqJ]/KS>,7L51P>LPUeEMMmFQNK0$ZO,oBbP*2#mPa%DsQ'R`&R$jA2S"#q<SXl@DT:_dL
Tq\<WUnsrdVl-GkW2ZbrWiN2%XKAV-Y-5%5Z*CU@Za7!F['d<M[^W`U\@K/]]=bhj]tM.o^V@S"_8=+-
_o'F3`Q#s=aN2KFaiV]Kbfn>VcHab^cd:%ddaQ[pe^i=&f%8R,g"P06g=tE<h;7#FhV[5Jhr*JQioB(Z
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
94.6701 183.398 mo
79.5336 170.181 li
79.6042 169.868 79.6747 169.556 79.7451 169.244 cv
80.1054 167.647 80.4698 166.032 80.8358 164.418 cv
94.4683 179.129 li
94.551 180.551 94.6183 181.975 94.6701 183.398 cv
level3{
gsave
clp
[3.82979 42.0426 -42.0426 3.82979 79.6769 151.266 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.82979 42.0426 -42.0426 3.82979 79.6769 151.266 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
69.1851 200.48 mo
88.5654 200.48 li
87.7231 194.699 85.228 189.058 81.2866 184.027 cv
76.5107 188.632 72.375 194.731 69.1851 200.48 cv
cp
.0614023 .247898 .95169 0 cmyk
f
83.6777 157.029 mo
83.5366 157.875 83.1533 158.516 82.8218 158.46 cv
82.4897 158.405 82.3354 157.675 82.4766 156.829 cv
82.6177 155.982 83.001 155.341 83.3325 155.397 cv
83.6641 155.452 83.8188 156.183 83.6777 157.029 cv
cp
.732753 .46479 .524193 .215946 cmyk
f
92.1543 158.375 mo
92.2813 159.267 92.1143 160.028 91.7813 160.076 cv
91.4482 160.123 91.0752 159.438 90.9487 158.547 cv
90.8218 157.655 90.9888 156.894 91.3218 156.846 cv
91.6548 156.799 92.0273 157.483 92.1543 158.375 cv
cp
f
88.0825 200.261 mo
81.2886 200.261 li
82.7495 195.987 83.146 191.353 82.4336 186.893 cv
85.1523 190.811 87.3267 195.552 88.0825 200.261 cv
cp
.199557 .566888 .97763 .0466621 cmyk
f
95.9956 148.1 mo
95.7944 147.686 95.5454 147.299 95.5811 146.84 cv
92.7188 148.789 90.2085 151.222 88.147 154.004 cv
89.1465 154.069 90.1465 154.135 91.1465 154.2 cv
92.4971 151.842 94.0039 149.948 95.9956 148.1 cv
cp
.732753 .46479 .524193 .215946 cmyk
f
117.468 151.803 mo
119.519 145.394 120.87 138.689 121.012 131.962 cv
113.338 131.585 105.691 131.655 98.0303 132.707 cv
99.0391 138.233 98.8774 143.971 97.5586 149.432 cv
97.6377 149.532 97.7266 149.626 97.8076 149.725 cv
104.191 151.478 110.859 152.194 117.468 151.803 cv
cp
.343969 .18088 .894652 .00390631 cmyk
f
130.237 132.592 mo
127.156 132.328 124.082 132.113 121.012 131.962 cv
120.87 138.689 119.519 145.394 117.468 151.803 cv
110.859 152.194 104.191 151.478 97.8076 149.725 cv
99.1855 151.42 100.798 152.965 102.714 154.006 cv
109.382 156.077 118.413 156.053 126.193 155.108 cv
129.416 148.066 130.88 140.309 130.237 132.592 cv
cp
.836149 .328679 .722316 .187869 cmyk
f
98.6865 147.351 mo
98.9409 146.738 99.3989 146.346 99.7095 146.475 cv
100.02 146.604 100.065 147.205 99.811 147.818 cv
99.5566 148.431 99.0986 148.823 98.7876 148.694 cv
98.4771 148.564 98.4316 147.963 98.6865 147.351 cv
cp
.732753 .46479 .524193 .215946 cmyk
f
115.866 149.29 mo
116.056 148.533 116.341 147.901 116.681 147.907 cv
117.013 147.91 117.273 148.676 117.048 149.582 cv
116.826 150.488 116.239 151.045 115.944 150.893 cv
115.64 150.739 115.683 150.048 115.866 149.29 cv
cp
f
108.557 140.713 mo
112.855 143.445 116.152 145.878 115.92 146.149 cv
115.688 146.42 112.016 144.425 107.717 141.693 cv
103.418 138.961 100.122 136.527 100.353 136.256 cv
100.585 135.986 104.258 137.981 108.557 140.713 cv
cp
.836149 .328679 .722316 .187869 cmyk
f
108.393 140.324 mo
112.713 138.032 116.172 136.087 116.415 136.361 cv
116.648 136.62 113.524 139.031 109.136 141.36 cv
104.754 143.698 100.852 145.024 100.688 144.729 cv
100.513 144.419 104.08 142.625 108.393 140.324 cv
cp
f
98.2715 134.183 mo
121.251 134.666 li
120.887 137.309 li
98.4673 135.749 li
98.2715 134.183 li
cp
f
149.671 156.624 mo
143.039 149.611 135.028 144.039 126.352 139.81 cv
124.359 141.215 123.207 143.538 123.202 145.976 cv
129.607 149.73 135.293 154.707 139.863 160.558 cv
143.435 160.736 146.946 158.941 149.671 156.624 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
134.432 163.113 mo
136.392 175.872 138.352 188.63 140.312 201.39 cv
140.482 201.39 140.474 201.397 140.644 201.397 cv
147.284 201.397 li
144.526 186.722 140.833 172.223 136.243 158.014 cv
135.551 159.605 134.75 161.033 134.432 163.113 cv
cp
.343969 .18088 .894652 .00390631 cmyk
f
151.492 154.376 mo
146.266 154.789 141.233 155.983 136.326 157.826 cv
136.243 158.014 li
140.833 172.223 144.526 186.722 147.284 201.397 cv
171.168 201.397 li
166.995 184.998 161.658 167.905 151.492 154.376 cv
cp
.836149 .328679 .722316 .187869 cmyk
f
171.168 201.397 mo
167.048 194.192 160.655 188.249 156.022 186.322 cv
152.445 190.798 149.913 195.832 148.549 201.397 cv
171.168 201.397 li
cp
.199557 .566888 .97763 .0466621 cmyk
f
155.146 159.708 mo
141.271 175.023 li
142.273 178.839 li
158.426 165.426 li
155.146 159.708 li
cp
f
141.271 175.023 mo
136.702 177.887 li
137.09 180.417 li
142.273 178.839 li
141.271 175.023 li
cp
.0614023 .247898 .95169 0 cmyk
f
156.022 186.322 mo
152.089 190.333 149.471 196.322 148.549 201.397 cv
160.751 201.397 li
160.154 196.331 158.559 191.313 156.022 186.322 cv
cp
f
139.841 159.487 mo
140.145 160.303 140.029 161.099 139.582 161.266 cv
139.134 161.432 138.525 160.906 138.221 160.09 cv
137.917 159.274 138.034 158.478 138.481 158.311 cv
138.929 158.145 139.538 158.671 139.841 159.487 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
152.192 156.234 mo
152.495 156.838 152.462 157.468 152.119 157.64 cv
151.775 157.813 151.251 157.462 150.948 156.859 cv
150.645 156.255 150.678 155.625 151.021 155.453 cv
151.365 155.281 151.889 155.63 152.192 156.234 cv
cp
f
141.694 153.455 mo
140.302 154.19 138.613 154.967 137.12 155.466 cv
133.421 151.696 129.007 148.574 124.661 145.29 cv
124.434 144.415 124.707 143.428 125.35 142.794 cv
131.026 145.475 137.209 149.388 141.694 153.455 cv
cp
.732753 .46479 .524193 .215946 cmyk
f
140.258 132.234 mo
142.897 117.698 142.765 102.243 139.915 87.7461 cv
129.338 82.0703 117.273 79.1997 105.273 79.5044 cv
93.2739 79.8091 81.3697 83.2881 71.0947 89.4937 cv
77.3272 103.673 82.6362 119.41 86.7832 134.334 cv
99.1236 133.993 112.486 134.286 124.781 134.82 cv
129.997 134.467 135.722 133.521 140.258 132.234 cv
.343969 .18088 .894652 .00390631 cmyk
f
105.273 79.5044 mo
93.2739 79.8091 81.3697 83.2881 71.0947 89.4937 cv
71.5893 90.6186 72.0679 91.7691 72.5508 92.9126 cv
89.8125 88.876 107.963 88.6855 125.304 92.3682 cv
127.977 106.151 127.398 120.858 125.063 134.797 cv
130.203 134.43 135.803 133.498 140.258 132.234 cv
142.897 117.698 142.765 102.243 139.915 87.7461 cv
129.338 82.0703 117.273 79.1997 105.273 79.5044 cv
.836149 .328679 .722316 .187869 cmyk
f
105.273 79.5044 mo
100.336 79.6299 95.4165 80.3012 90.6181 81.4702 cv
88.771 85.7505 87.7979 90.795 87.7979 90.795 cv
88.3315 93.6118 89.1987 96.3564 90.2134 99.0385 cv
94.6176 100.139 99.4575 100.058 103.844 98.8857 cv
105.101 95.4727 107.636 89.9677 107.636 89.9677 cv
110.338 86.7886 113.818 82.8389 117.072 80.227 cv
113.169 79.6538 109.218 79.4043 105.273 79.5044 cv
.85919 .688991 .469245 .380224 cmyk
f
75.3194 99.6841 mo
100.342 113.951 li
126.631 99.273 li
127.028 108.501 li
100.683 118.622 li
78.6176 108.501 li
75.3194 99.6841 li
.0614023 .247898 .95169 0 cmyk
f
85.7993 90.5879 mo
86.8257 99.8164 li
83.3687 100.895 li
86.1445 106.631 li
79.1347 109.958 li
72.5508 92.9126 li
76.7407 91.168 81.165 90.4292 85.7993 90.5879 cv
.836149 .328679 .722316 .187869 cmyk
f
117.719 106.121 mo
117.133 109.516 li
127.421 114.887 li
128.102 108.947 li
117.719 106.121 li
cp
f
88.6372 130.93 mo
88.9009 131.741 88.855 132.482 88.5352 132.586 cv
88.2153 132.69 87.7422 132.117 87.479 131.306 cv
87.2153 130.495 87.2612 129.753 87.5811 129.649 cv
87.9009 129.545 88.3735 130.119 88.6372 130.93 cv
cp
.732753 .46479 .524193 .215946 cmyk
f
124.584 131.45 mo
124.463 132.137 124.097 132.648 123.765 132.589 cv
123.434 132.531 123.264 131.926 123.384 131.239 cv
123.505 130.551 123.872 130.041 124.203 130.099 cv
124.535 130.157 124.705 130.762 124.584 131.45 cv
cp
f
91.1528 126.963 mo
94.1099 126.963 97.1099 127.004 100.058 127.219 cv
99.9521 126.18 99.8135 125.113 99.6792 124.078 cv
99.5376 122.986 99.3911 121.858 99.2832 120.76 cv
96.6753 119.666 93.9009 118.635 91.2163 117.637 cv
88.6426 116.68 85.9863 115.693 83.4683 114.647 cv
87.1221 126.976 li
88.3887 126.971 li
89.3037 126.967 90.2261 126.963 91.1528 126.963 cv
cp
100.613 127.763 mo
100.316 127.74 li
96.3716 127.437 92.314 127.455 88.3911 127.471 cv
86.749 127.477 li
82.6895 113.777 li
83.1763 113.982 li
85.8271 115.1 88.6553 116.151 91.3906 117.168 cv
94.1274 118.186 96.957 119.237 99.6147 120.357 cv
99.7524 120.416 li
99.7666 120.564 li
99.8745 121.7 100.027 122.876 100.175 124.013 cv
100.323 125.151 100.476 126.327 100.584 127.467 cv
100.613 127.763 li
cp
.836149 .328679 .722316 .187869 cmyk
f
104.075 127.108 mo
106.152 127.136 108.236 127.142 110.322 127.147 cv
114.661 127.159 119.144 127.171 123.536 127.392 cv
123.754 125.313 123.966 123.224 124.178 121.136 cv
124.398 118.965 124.619 116.794 124.846 114.633 cv
124.846 114.633 li
124.866 114.438 124.866 114.277 124.865 114.112 cv
124.866 113.939 li
117.04 115.549 109.83 117.815 103.427 120.678 cv
104.075 127.108 li
cp
123.983 127.916 mo
123.746 127.903 li
119.292 127.671 114.731 127.659 110.321 127.647 cv
108.158 127.641 105.998 127.635 103.845 127.605 cv
103.622 127.602 li
102.894 120.37 li
103.058 120.296 li
109.62 117.345 117.029 115.02 125.079 113.385 cv
125.404 113.319 li
125.378 113.65 li
125.365 113.821 125.365 113.967 125.365 114.111 cv
125.366 114.292 125.366 114.471 125.343 114.685 cv
125.343 114.686 li
125.116 116.846 124.896 119.016 124.675 121.187 cv
124.455 123.354 124.235 125.522 124.008 127.68 cv
123.983 127.916 li
cp
f
153.404 109.516 mo
156.229 113.497 158.777 118.34 160.336 122.966 cv
158.13 124.836 154.866 125.533 152.007 125.094 cv
149.764 121.04 146.948 117.303 143.668 114.029 cv
146.078 111.348 149.813 109.843 153.404 109.516 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
130.407 79.8745 mo
139.603 81.8941 149.677 85.4047 155.549 90.5249 cv
158.418 96.1968 160.313 103.585 160.266 109.94 cv
155.576 113.073 150.584 115.017 144.777 115.621 cv
134.775 114.515 125.073 111.055 116.165 106.375 cv
116.204 98.5596 117.746 90.7539 120.68 83.5098 cv
123.715 81.9844 127.138 80.7959 130.407 79.8745 cv
.0614023 .247898 .95169 0 cmyk
f
144.777 115.621 mo
150.584 115.017 155.576 113.073 160.266 109.94 cv
160.313 103.585 158.418 96.1968 155.549 90.5249 cv
149.421 85.4047 139.603 81.8941 130.407 79.8745 cv
127.249 80.7652 123.954 81.9116 120.997 83.3638 cv
128.75 84.8506 136.324 87.7675 143.463 91.1958 cv
145.198 99.1475 145.513 107.468 144.635 115.601 cv
144.777 115.621 li
.199557 .566888 .97763 .0466621 cmyk
f
144.25 75.7378 mo
136.855 72.3994 129.159 70.02 121.12 68.9253 cv
118.601 70.8095 116.175 72.8423 113.847 74.9585 cv
111.538 82.316 110.037 89.9273 109.382 97.6103 cv
114.78 100.092 120.636 102.021 126.492 103.019 cv
126.492 103.019 126.603 103.004 126.783 102.98 cv
128.159 95.6919 129.961 88.7138 132.448 82.4365 cv
135.886 79.477 139.93 77.1503 144.25 75.7378 cv
.410468 .223423 .288701 0 cmyk
f
125.989 101.735 mo
120.52 100.759 115.158 99.082 110.075 96.8413 cv
110.835 89.7588 112.333 82.7553 114.535 75.981 cv
120.453 77.0191 126.352 79.0464 131.549 82.0605 cv
129.555 88.5909 127.69 95.123 125.989 101.735 cv
level3{
gsave
clp
[8.42553 28.2553 -28.2553 8.42553 115.479 71.5657 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.42553 28.2553 -28.2553 8.42553 115.479 71.5657 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
144.25 75.7378 mo
139.93 77.1504 135.886 79.4771 132.448 82.4365 cv
129.961 88.7139 128.159 95.6919 126.783 102.98 cv
127.776 102.85 131.135 102.386 132.857 101.911 cv
133.99 97.5308 135.447 92.9951 136.958 88.7305 cv
136.958 88.7305 141.683 85.144 144.364 84.0947 cv
144.715 81.2983 144.606 78.54 144.262 75.7427 cv
144.25 75.7378 li
cp
.68069 .454383 .523583 .190829 cmyk
f
156.067 140.084 mo
155.08 133.52 152.812 127.231 150.377 121.047 cv
150.205 121.102 li
149.134 122.219 148.627 123.803 148.157 125.276 cv
150.614 132.021 150.943 139.524 149.086 146.458 cv
150.45 150.197 152.518 153.688 155.11 156.708 cv
156.758 151.401 156.899 145.614 156.067 140.084 cv
cp
.343969 .18088 .894652 .00390631 cmyk
f
169.903 118.632 mo
163.326 118.104 156.501 118.919 150.377 121.047 cv
152.812 127.231 155.08 133.52 156.067 140.084 cv
156.899 145.614 156.758 151.401 155.11 156.708 cv
155.125 156.726 li
160.164 156.932 165.055 156.456 169.993 155.431 cv
173.373 143.973 173.746 129.943 169.903 118.632 cv
cp
.836149 .328679 .722316 .187869 cmyk
f
154.292 122.85 mo
154.646 123.696 154.556 124.539 154.091 124.734 cv
153.625 124.929 152.961 124.401 152.607 123.556 cv
152.253 122.71 152.344 121.867 152.809 121.672 cv
153.274 121.477 153.938 122.005 154.292 122.85 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
169.965 121.044 mo
170.179 121.925 170.021 122.719 169.612 122.818 cv
169.204 122.917 168.699 122.283 168.486 121.402 cv
168.272 120.521 168.43 119.728 168.839 119.628 cv
169.247 119.529 169.751 120.163 169.965 121.044 cv
cp
f
156.576 154.307 mo
156.779 153.776 157.169 153.353 157.59 153.397 cv
158.005 153.438 158.276 154.11 158.001 154.842 cv
157.727 155.574 157.081 155.902 156.741 155.66 cv
156.395 155.417 156.38 154.84 156.576 154.307 cv
cp
f
168.383 153.329 mo
168.472 152.803 168.781 152.345 169.203 152.313 cv
169.619 152.278 170.003 152.85 169.886 153.572 cv
169.77 154.295 169.224 154.716 168.84 154.552 cv
168.45 154.389 168.302 153.855 168.383 153.329 cv
cp
f
115.198 77.936 mo
115.04 78.5884 114.646 79.0522 114.319 78.9727 cv
113.992 78.8936 113.856 78.3003 114.015 77.6479 cv
114.173 76.9961 114.567 76.5317 114.894 76.6113 cv
115.221 76.6909 115.357 77.2842 115.198 77.936 cv
cp
.68069 .454383 .523583 .190829 cmyk
f
130.582 83.7632 mo
130.372 84.4863 129.94 84.9966 129.618 84.9033 cv
129.294 84.8096 129.202 84.1475 129.412 83.4243 cv
129.621 82.7012 130.053 82.1904 130.375 82.2842 cv
130.699 82.3774 130.791 83.0396 130.582 83.7632 cv
cp
f
110.076 95.5786 mo
110.191 94.9087 110.464 94.355 110.803 94.355 cv
111.137 94.353 111.409 94.9985 111.276 95.7813 cv
111.146 96.564 110.676 97.0845 110.362 96.9731 cv
110.042 96.8623 109.965 96.2495 110.076 95.5786 cv
cp
f
124.673 100.271 mo
124.768 99.6025 125.115 99.0986 125.448 99.146 cv
125.781 99.1934 125.974 99.7739 125.879 100.442 cv
125.784 101.111 125.437 101.615 125.104 101.568 cv
124.771 101.521 124.578 100.94 124.673 100.271 cv
cp
f
132.857 101.911 mo
135.336 101.911 li
136.752 98.0234 138.665 94.0684 141.023 90.0532 cv
137.341 88.4448 li
136.958 88.7305 li
135.47 92.8188 134.117 97.248 132.857 101.911 cv
cp
.199557 .566888 .97763 .0466621 cmyk
f
154.059 118.684 mo
153.573 117.557 153.012 116.558 152.102 115.736 cv
150.594 115.883 149.069 116.342 147.618 116.778 cv
148.556 117.569 149.364 118.516 149.998 119.566 cv
151.412 119.179 152.595 118.769 154.059 118.684 cv
cp
.68069 .454383 .523583 .190829 cmyk
f
44.4985 139.063 mo
52.314 133.542 59.2671 126.81 65.0605 119.194 cv
64.4443 118.977 63.8237 118.78 63.1958 118.622 cv
57.1592 126.135 50.1182 132.841 42.3198 138.504 cv
43.293 146.517 49.022 153.954 56.6377 156.628 cv
56.873 156.514 57.1011 156.387 57.334 156.27 cv
51.415 152.059 46.9678 145.937 44.4985 139.063 cv
cp
.343969 .18088 .894652 .00390631 cmyk
f
79.5352 129.86 mo
75.7178 125.419 70.6382 121.16 65.0605 119.194 cv
59.2671 126.81 52.314 133.542 44.4985 139.063 cv
46.9678 145.937 51.415 152.059 57.334 156.27 cv
67.9946 150.898 76.3926 141.383 79.5352 129.86 cv
cp
.836149 .328679 .722316 .187869 cmyk
f
75.2778 108.921 mo
76.9985 115.098 76.6021 121.97 73.1543 127.626 cv
71.8174 128.502 69.9678 128.516 68.6182 127.659 cv
67.269 126.803 65.9312 125.146 66.7344 123.765 cv
69.0786 119.731 70.0352 114.907 69.4082 110.284 cv
70.272 109.701 71.0176 109.043 71.9956 108.684 cv
72.9736 108.324 74.3066 108.544 75.2778 108.921 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
57.6421 152.649 mo
52.2842 150.938 48.0278 146.298 46.9131 140.957 cv
49.6431 137.878 55.4321 134.82 58.4639 134.089 cv
60.5522 134.376 64.7739 138.164 66.2437 141.139 cv
64.3955 145.449 61.4937 149.843 57.6421 152.649 cv
cp
f
61.8833 141.488 mo
61.5015 139.27 60.1992 137.239 58.3525 135.951 cv
57.2861 136.286 56.4355 137.112 56.1011 138.179 cv
57.6455 139.398 58.9766 140.886 60.0171 142.556 cv
60.6836 142.527 61.4365 141.984 61.8833 141.488 cv
cp
60.5522 145.929 mo
60.0146 145.614 59.4014 145.471 58.7788 145.446 cv
57.8774 147.146 56.6191 148.705 55.0942 149.878 cv
55.9302 150.436 56.9634 150.969 57.9653 150.891 cv
59.3799 149.497 60.4146 147.91 60.5522 145.929 cv
cp
58.9551 143.281 mo
58.3677 142.569 57.6748 142 56.7871 141.749 cv
55.1035 143.496 53.0386 144.874 50.7793 145.758 cv
51.0947 147.272 52.3364 148.518 53.8604 148.787 cv
56.0518 147.632 57.897 145.521 58.9551 143.281 cv
cp
49.4673 144.395 mo
48.5649 143.637 48.0171 142.474 48.0068 141.296 cv
49.9473 140.101 52.1616 139.312 54.4351 139.151 cv
54.9907 139.747 55.3818 140.332 55.6846 141.088 cv
53.5127 141.891 51.3647 143.068 49.4673 144.395 cv
cp
.732753 .46479 .524193 .215946 cmyk
f
79.854 83.6665 mo
79.7949 83.6313 li
71.0947 86.376 62.23 93.8442 60.9366 99.2095 cv
60.6362 103.331 61.4311 107.527 63.2188 111.252 cv
69.4043 111.55 75.604 111.014 81.5669 109.342 cv
81.606 109.299 li
78.373 104.171 76.6572 97.878 75.854 92.2578 cv
76.8149 89.2387 78.1762 86.3535 79.854 83.6665 cv
.0614023 .247898 .95169 0 cmyk
f
78.2119 91.6611 mo
79.022 89.2329 79.981 86.7085 81.1631 84.4384 cv
80.6997 84.166 80.311 83.9351 79.854 83.6665 cv
78.1762 86.3535 76.8149 89.2387 75.854 92.2578 cv
76.6572 97.878 78.373 104.171 81.606 109.299 cv
82.1714 108.691 82.8066 107.99 83.3687 107.386 cv
80.7178 102.543 78.7563 96.2559 78.2119 91.6611 cv
.199557 .566888 .97763 .0466621 cmyk
f
78.1787 77.4492 mo
78.1699 77.4448 li
73.8477 78.7222 69.8154 80.2652 65.6977 82.0967 cv
65.2202 88.6362 66.3252 95.2861 68.893 101.319 cv
73.1182 101.59 77.3091 101.161 81.2739 99.6841 cv
77.9316 92.8491 76.8257 84.937 78.1787 77.4492 cv
.410468 .223423 .288701 0 cmyk
f
71.2295 100.895 mo
70.5771 100.895 69.9072 100.877 69.2334 100.839 cv
66.8193 95.0449 65.7646 88.6943 66.1758 82.4316 cv
70.1885 80.6577 73.832 79.2866 77.5527 78.1523 cv
76.4234 85.3252 77.4907 92.8179 80.584 99.4013 cv
77.7265 100.393 74.583 100.895 71.2295 100.895 cv
level3{
gsave
clp
[18 24.6383 -24.6383 18 63.3005 75.6808 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[18 24.6383 -24.6383 18 63.3005 75.6808 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
83.7979 98.3027 mo
82.4678 92.5635 82.1572 86.7573 82.6059 80.8833 cv
81.2441 79.6704 79.8662 78.1416 78.1787 77.4492 cv
76.8257 84.937 77.9316 92.8491 81.2739 99.6841 cv
81.3775 99.649 li
82.2515 99.3193 83.0195 98.8198 83.7979 98.3027 cv
.68069 .454383 .523583 .190829 cmyk
f
67.0693 83.4189 mo
67.0693 83.9473 66.8652 84.376 66.6128 84.376 cv
66.3604 84.376 66.1563 83.9473 66.1563 83.4189 cv
66.1563 82.8901 66.3604 82.4614 66.6128 82.4614 cv
66.8652 82.4614 67.0693 82.8901 67.0693 83.4189 cv
cp
f
77.4941 79.8271 mo
77.4268 80.4033 77.1016 80.8389 76.7676 80.7998 cv
76.4331 80.7607 76.2173 80.2622 76.2842 79.686 cv
76.3516 79.1099 76.6768 78.6743 77.0107 78.7134 cv
77.3452 78.7524 77.5615 79.251 77.4941 79.8271 cv
cp
f
69.8662 99.9121 mo
69.9893 100.301 69.9512 100.688 69.7231 100.8 cv
69.4985 100.911 69.1426 100.649 68.9966 100.191 cv
68.8491 99.7324 68.9873 99.313 69.2349 99.2729 cv
69.4849 99.2314 69.7412 99.5249 69.8662 99.9121 cv
cp
f
79.9712 98.3843 mo
80.1724 98.7246 80.1558 99.146 79.8906 99.354 cv
79.627 99.5615 79.1714 99.4219 78.9248 99.0073 cv
78.6782 98.5938 78.7725 98.126 79.0806 97.9937 cv
79.3901 97.8594 79.7686 98.0454 79.9712 98.3843 cv
cp
f
72.6309 122.164 mo
71.3721 122.363 69.9976 121.983 68.9287 121.29 cv
70.209 118.489 70.7573 115.357 70.5054 112.288 cv
71.229 112.32 72.0386 112.312 72.7622 112.345 cv
73.478 115.381 73.3735 119.134 72.6309 122.164 cv
cp
.732753 .46479 .524193 .215946 cmyk
f
108.908 63.7778 mo
101.647 63.0556 94.0214 63.2192 86.8022 64.2764 cv
84.5683 66.3364 82.2837 69.0146 80.9648 71.4419 cv
80.7085 74.1382 80.7246 76.8599 81.0122 79.5527 cv
86.9019 79.792 93.4189 80.0747 100.571 79.3867 cv
100.571 79.3867 103.167 78.5054 104.38 77.9082 cv
104.865 80.1114 105.34 82.73 105.502 84.8008 cv
108.164 83.8291 110.62 82.1484 112.599 80.1211 cv
112.338 74.5874 111.09 68.8691 108.908 63.7778 cv
.343969 .18088 .894652 .00390631 cmyk
f
92.9101 80.051 mo
92.8916 79.9685 92.8732 79.8862 92.8547 79.8037 cv
95.243 79.7657 97.7104 79.652 100.261 79.416 cv
100.261 79.416 100.261 79.416 100.261 79.416 cv
97.9202 79.7344 95.4323 79.9517 92.9101 80.051 cv
level3{
gsave
clp
[21.4787 13.1489 -13.1489 21.4787 77.1226 66.4256 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<
+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<
+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<
+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<+YIp<
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~+YIp<+u+6@,;XQE,rL&M-9$AR-TchY.6W7_.QrIc/O,!j/jkEp01Cd!0h73'1.dT.1eX&62GTJ;3)>kA
3)Q1H3)lIM3`hpT4'J?[4^=le5$k,i5[^Sp5[peu6=d8(6>!J-6Y`q56u01:7;KC?7W#^F7WH$L89;NV
89M`[8U/,c8pS;f8q"_p8q+ku97P,%9S(M.9SLk69o%4>:5[OD:5mgK:6+'S:6OE[:R'cc:R:#j:RL5p
:R^Q$:S$l,:nI/3;5!P=;5EtG;Ps:O;5sFS;QKg];Q]sa;6g-f;R6<j;RHHn;RQNr;S)m$;S2s(;SN0-
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.0391061 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[21.4787 13.1489 -13.1489 21.4787 77.1226 66.4256 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~+<VdL+<VdL+<VdM+X&$R+sJ6V,U=Z^,palb-71)f-n$Mn.4H_s/1`A)/M/S-/hSe10JP::0etL?1GgpG
2)[?O2`EZS2`EZS2`NcW3BB2^3]fDc4?Yhj4[)(p5<h@s5X7V$5s[e&6:+"*6UO4.6psF277BX677BX6
7Rfm<7n6'?84Z9C8P)KF8P)KF8P)KG8kM]K91qoN91qoO9MA,S9he>V9he>V9he>V9heAX:/4PZ:/4PZ
:/4PZ:/4PZ:/4S\:JXe`:f'tb:f("d;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f
~>
<~/M/P+/M/P+/M/P,0/,+81,:XA1c.'I2E!KR3BB5`4?P_g4?Pbi5!D1r5sdq+6psI47Ros>84cBF8kVfN
9hnGY:/=Y^:f1+g;cHat<``C+=^#!5>?kE=?!^lF?smDO@U`hWA7T7_AnPdkC2.KuC2.KuCMRa&D/O92
EH-#>F)uGGF`qtRG^+IYH@($fI=6NmIXZ`qIt3'#JqJ`1Knb>;Ll$tGMMmCONK&sZOHG]hPEV5qQ'IZ$
Q^=),R@0M5S"-%?SXl@DT:_dMU8+N[V5C,fW2ZbrWiN2%XKAY/Yd(I<Z*L[AZa@*H['dBQ\[oA`]">Vg
~>
<~F`hhLF`hhLF`hhLF`hkNGB\:WH@($eI=6QnIt*!!JUrE*K7nr4L5(J=LPL\BMMd=MN/`jYOHGZgPEV2o
PE_>tQC!u-S"-">SXuFEStD[LTqeE[VP^5fVPgAlWiE,#XK8P,YHP17Z*CU?Za7$G[C3NQ\@B)[]"5Ja
]=bhk^V@S#_8=(+_SX1-`5Ta:a2l?Dai_cLbg"GZcd:%ddaQ[oe'ldqe^i@)g"P38gt^`AhV[8LiSrnX
jQ,FbkiqBulg4$,n*fc9o(2MHp@n@Wq>0saqYU3hrr<#us8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~zzzzzzzzzzzzzzzzzzz!!**$!<E3%!<N<(!WrN,!s8W-"9\i1"U,&5"pP89#6tJ=#RC\A#mgnE$47.K$
k*OQ%1NdW%hB0^&.oKe&eYfj',2,q'c%Q$(Ddl)(`=20)B0V8*$$%@*ZlIH+<VdM+sS?Y,palb-RU;j.
4H_r.k</%/M/S-0/#"50ekF>1c.'I2E!KR3BB2^3]fDc4[)%o5<qJ"5sdn*6UX=277Kd<84cBF8kViP9
hnGZ~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
89.8078 80.1124 mo
89.3211 80.1124 88.8349 80.1078 88.35 80.0985 cv
88.3233 79.9962 88.2972 79.896 88.2706 79.7938 cv
89.1405 79.8096 90.0219 79.8188 90.9152 79.8188 cv
91.5556 79.8188 92.2023 79.8141 92.8547 79.8037 cv
92.8732 79.8862 92.8916 79.9685 92.9101 80.051 cv
91.8789 80.0916 90.8425 80.1124 89.8078 80.1124 cv
level3{
gsave
clp
[21.4787 13.1489 -13.1489 21.4787 77.1226 66.4256 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[21.4787 13.1489 -13.1489 21.4787 77.1226 66.4256 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
88.2757 80.097 mo
85.8493 80.0477 83.4545 79.8795 81.195 79.5775 cv
81.1884 79.5714 81.1819 79.5654 81.1753 79.5593 cv
83.4246 79.6508 85.7651 79.7473 88.1972 79.7925 cv
88.2236 79.8947 88.2494 79.995 88.2757 80.097 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 400 ]ct
[8.16 0 0 1.92 80.64 319.36 ]ct
snap_to_device
<<
/T 1
/W 17 
/H 4 
/M[17 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~/M8\11,CdG2`Wo^4[;;"6S0rF0f(XD2`Wo^4[25!6q&a_0etRC2`Wo^4[25!6UaHu0f(XD2`Ni\4[)+t
6UaI8~>
<~'c%T&(`=52)]Tn?+!;[N+r;%4)&X>3*#p"@+!;[L+X.^>)&aD4)]Tn>+!;[L,U+KN)&O82)]Kh?+!;^M
+sJ<[~>
<~.k3&#/M8\/0f(R@1c70K2_6O3/M8V/0eb@=1c70L2`N<=/M8\/0/,.<1c7-K2`NcJ/MAb00/54<1G^pJ
2`NcV~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
88.35 80.0985 mo
88.3252 80.098 88.3005 80.0975 88.2757 80.097 cv
88.2494 79.995 88.2236 79.8947 88.1972 79.7925 cv
88.2214 79.7929 88.2465 79.7934 88.2706 79.7938 cv
88.2972 79.896 88.3233 79.9962 88.35 80.0985 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 400 ]ct
[1.92 0 0 1.44 87.36 319.36 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~GBnL_H$k!gH@:9o~>
<~:/4S^:/=bd:fC:l~>
<~Ci=94Df9W:DfB];~>
<~"9\l4"9eu8"U>8<~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
80.9957 79.3955 mo
80.9954 79.3952 80.9952 79.395 80.9948 79.3947 cv
80.9735 79.1949 80.9545 78.9911 80.9376 78.7848 cv
80.9554 78.9885 80.9748 79.1921 80.9957 79.3955 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 400 ]ct
[1.44 0 0 1.92 80.16 319.84 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 4 
/M[3 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~.P*/%/M8S+0.nn3~>
<~'GM8s'c%Q$(D[f(~>
<~.4Qht.k2u!/M&D'~>
<~!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
81.195 79.5775 mo
81.1339 79.5693 81.0731 79.5611 81.0122 79.5527 cv
81.0062 79.5002 81.0005 79.4477 80.9948 79.3947 cv
80.9952 79.395 80.9954 79.3952 80.9957 79.3955 cv
81.0011 79.448 81.0066 79.5003 81.0122 79.5527 cv
81.0665 79.5549 81.1209 79.5571 81.1753 79.5593 cv
81.1819 79.5654 81.1884 79.5714 81.195 79.5775 cv
level3{
gsave
clp
[21.4787 13.1489 -13.1489 21.4787 77.1226 66.4256 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[21.4787 13.1489 -13.1489 21.4787 77.1226 66.4256 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
90.9152 79.8188 mo
90.0219 79.8188 89.1405 79.8096 88.2706 79.7938 cv
88.2465 79.7934 88.2214 79.7929 88.1972 79.7925 cv
85.7651 79.7473 83.4246 79.6508 81.1753 79.5593 cv
81.1209 79.5571 81.0665 79.5549 81.0122 79.5527 cv
81.0066 79.5003 81.0011 79.448 80.9957 79.3955 cv
80.9748 79.1921 80.9554 78.9885 80.9376 78.7848 cv
80.7496 76.4852 80.8316 73.8225 81.0986 71.6514 cv
87.2275 70.5434 93.6041 69.9804 99.8425 69.9804 cv
100.057 69.9804 100.271 69.9811 100.485 69.9824 cv
100.275 72.8749 100.471 76.5234 100.261 79.416 cv
97.7104 79.652 95.243 79.7657 92.8547 79.8037 cv
92.2023 79.8141 91.5556 79.8188 90.9152 79.8188 cv
level3{
gsave
clp
[21.4787 13.1489 -13.1489 21.4787 77.1226 66.4256 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[21.4787 13.1489 -13.1489 21.4787 77.1226 66.4256 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
100.88 80.377 mo
102.193 79.5762 103.374 78.7554 104.38 77.9082 cv
103.167 78.5054 100.571 79.3867 100.571 79.3867 cv
93.4189 80.0747 86.9019 79.792 81.0122 79.5527 cv
80.3945 79.8052 79.5288 80.3018 78.9722 80.6333 cv
85.248 81.0933 92.4414 81.0659 100.88 80.377 cv
cp
.410468 .223423 .288701 0 cmyk
f
100.88 80.3769 mo
92.4414 81.066 85.248 81.0933 78.9721 80.6333 cv
79.0845 84.5498 79.8829 88.6563 81.0864 92.3852 cv
87.5307 93.2266 95.752 93.0751 100.854 91.6684 cv
102.7 90.294 104.235 88.3838 105.466 86.4394 cv
105.45 85.8862 105.519 85.354 105.502 84.8008 cv
105.34 82.73 104.865 80.1114 104.38 77.9082 cv
103.374 78.7553 102.193 79.5761 100.88 80.3769 cv
f
89.0437 92.5463 mo
86.4919 92.5463 83.9299 92.378 81.3486 92.065 cv
80.3975 88.5118 79.7481 84.8701 79.4111 81.1967 cv
82.5008 81.4676 85.6364 81.6079 88.7757 81.6079 cv
92.6591 81.6078 96.5479 81.3932 100.359 80.9458 cv
100.456 84.4214 100.357 87.9278 100.179 91.3999 cv
96.4651 92.1886 92.7648 92.5464 89.0437 92.5463 cv
level3{
gsave
clp
[24.1982 13.9688 -13.9688 24.1982 75.1474 77.4386 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[24.1982 13.9688 -13.9688 24.1982 75.1474 77.4386 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
91.042 74.9282 mo
91.1123 75.7065 91.2832 76.4756 91.5479 77.2104 cv
93.5171 77.3433 95.4424 77.3579 97.4126 77.2505 cv
97.583 76.3892 97.6147 75.5503 97.5596 74.6743 cv
95.415 74.6182 93.1743 74.6953 91.042 74.9282 cv
cp
85.7944 77.1211 mo
84.4478 77.2056 83.0596 77.2002 81.7178 77.0591 cv
81.5986 76.3071 81.5654 75.541 81.6187 74.7817 cv
83.27 74.7358 84.8994 74.7813 86.3701 74.9214 cv
86.2393 75.687 86.0469 76.3862 85.7944 77.1211 cv
cp
.836149 .328679 .722316 .187869 cmyk
f
96.4668 74.6631 mo
94.9136 74.6792 93.3418 74.7627 91.8247 74.9282 cv
91.895 75.7065 92.0659 76.4756 92.3306 77.2104 cv
93.2129 77.27 94.0854 77.2974 94.9585 77.3091 cv
95.7734 77.3066 96.5884 77.2954 97.4131 77.2505 cv
97.583 76.3892 97.6147 75.5503 97.5596 74.6743 cv
97.1987 74.6646 96.832 74.6646 96.4668 74.6631 cv
cp
.550195 0 .358099 0 cmyk
f
82.4014 74.7817 mo
82.3481 75.541 82.3813 76.3071 82.5005 77.0591 cv
83.0894 77.1211 83.689 77.147 84.2886 77.1606 cv
84.7925 77.1563 85.2974 77.1523 85.7944 77.1211 cv
86.0469 76.3862 86.2393 75.687 86.3701 74.9214 cv
85.3838 74.8276 84.3228 74.7798 83.2349 74.77 cv
82.9575 74.7725 82.6807 74.7739 82.4014 74.7817 cv
cp
f
100.88 80.377 mo
101.071 83.8477 101.035 87.6514 100.854 91.6685 cv
102.7 90.2939 104.235 88.3838 105.466 86.4395 cv
105.45 85.8862 105.519 85.354 105.502 84.8008 cv
105.34 82.73 104.865 80.1113 104.38 77.9082 cv
103.374 78.7554 102.193 79.5762 100.88 80.377 cv
cp
.68069 .454383 .523583 .190829 cmyk
f
108.908 63.7778 mo
101.305 69.9082 li
100.571 79.3867 li
100.571 79.3867 103.167 78.5054 104.38 77.9082 cv
104.865 80.1113 105.34 82.73 105.502 84.8008 cv
108.164 83.8291 110.62 82.1484 112.599 80.1211 cv
112.338 74.5874 111.09 68.8691 108.908 63.7778 cv
cp
.836149 .328679 .722316 .187869 cmyk
f
80.3423 82.0698 mo
80.3726 82.4839 80.2622 82.8633 80.0171 82.9292 cv
79.7754 82.9956 79.4702 82.6479 79.4316 82.1396 cv
79.3921 81.6313 79.6406 81.2412 79.8896 81.27 cv
80.1416 81.2974 80.3091 81.6558 80.3423 82.0698 cv
cp
.68069 .454383 .523583 .190829 cmyk
f
82.0244 91.062 mo
82.106 91.4263 81.9727 91.7661 81.7266 91.8213 cv
81.4805 91.8765 81.2148 91.6255 81.1333 91.2612 cv
81.0518 90.897 81.1851 90.5566 81.4312 90.5015 cv
81.6772 90.4468 81.9429 90.6973 82.0244 91.062 cv
cp
f
100.516 81.8018 mo
100.516 82.2837 100.312 82.6738 100.06 82.6738 cv
99.8076 82.6738 99.603 82.2837 99.603 81.8018 cv
99.603 81.3198 99.8076 80.9292 100.06 80.9292 cv
100.312 80.9292 100.516 81.3198 100.516 81.8018 cv
cp
f
100.468 90.4409 mo
100.45 90.8169 100.231 91.1118 99.979 91.0996 cv
99.7271 91.0874 99.5376 90.7725 99.5562 90.3965 cv
99.5742 90.02 99.7935 89.7251 100.045 89.7373 cv
100.297 89.7495 100.487 90.0645 100.468 90.4409 cv
cp
f
89.9365 91.4907 mo
89.9756 91.8076 89.8047 92.0894 89.5542 92.1201 cv
89.3037 92.1509 89.0693 91.9194 89.0303 91.6025 cv
88.9912 91.2856 89.1621 91.0039 89.4126 90.9731 cv
89.6631 90.9419 89.8975 91.1738 89.9365 91.4907 cv
cp
f
89.604 82.3394 mo
89.6523 82.7036 89.4888 83.0254 89.2388 83.0586 cv
88.9883 83.0918 88.7466 82.8237 88.6982 82.4595 cv
88.6499 82.0952 88.8135 81.7734 89.0635 81.7402 cv
89.314 81.707 89.5557 81.9751 89.604 82.3394 cv
cp
f
302.912 248.536 mo
301.708 248.455 300.709 247.999 299.856 247.146 cv
300.803 245.519 301.659 243.839 302.42 242.117 cv
302.786 241.287 303.151 240.448 303.448 239.591 cv
303.696 238.876 303.947 238.761 304.676 238.494 cv
308.229 237.191 311.928 236.289 315.681 235.806 cv
317.032 235.632 318.39 235.513 319.751 235.448 cv
320.428 236.438 321.06 237.222 321.736 238.212 cv
320.5 239.971 318.982 241.683 317.201 242.89 cv
313.713 242.746 310.115 242.717 306.628 242.89 cv
305.369 244.655 304.171 246.771 302.912 248.536 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
339.139 217.122 mo
340.011 214.673 340.959 212.252 341.945 209.847 cv
328.587 218.138 312.796 229.425 307.786 233.953 cv
307.991 234.234 308.751 239.841 308.751 239.841 cv
311.841 239.972 314.824 239.95 317.704 239.777 cv
318.753 236.087 320.117 232.486 321.546 228.921 cv
327.293 225.045 333.391 220.998 339.139 217.122 cv
cp
.0011902 .0288396 .18323 0 cmyk
f
341.945 209.847 mo
340.959 212.252 340.011 214.673 339.139 217.122 cv
333.391 220.998 327.293 225.045 321.546 228.921 cv
320.117 232.486 318.753 236.087 317.704 239.777 cv
319.731 239.656 321.714 239.472 323.613 239.165 cv
325.736 231.059 li
334.292 223.593 343.996 216.669 354.689 210.213 cv
355.654 202.105 li
351.972 203.85 347.143 206.622 341.945 209.847 cv
cp
.0164187 .376043 .514733 0 cmyk
f
311.507 235.683 mo
311.769 235.478 312.104 235.325 312.428 235.4 cv
312.673 235.458 312.873 235.64 313.012 235.851 cv
313.392 236.428 313.324 237.261 312.855 237.77 cv
312.412 238.252 311.21 238.565 310.74 237.934 cv
310.237 237.257 310.978 236.097 311.507 235.683 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
284.977 253.337 mo
284.187 253.255 283.53 252.799 282.971 251.946 cv
283.592 250.319 284.154 248.64 284.653 246.918 cv
284.895 246.088 285.134 245.249 285.329 244.391 cv
285.491 243.677 285.656 243.562 286.135 243.295 cv
288.468 241.992 290.896 241.089 293.36 240.606 cv
294.247 240.433 295.139 240.313 296.032 240.249 cv
296.477 241.239 296.892 242.021 297.336 243.012 cv
296.524 244.771 295.528 246.483 294.358 247.689 cv
292.068 247.547 289.706 247.518 287.417 247.689 cv
286.59 249.456 285.804 251.57 284.977 253.337 cv
cp
.190555 .666773 .67895 .0394903 cmyk
f
308.762 221.923 mo
309.334 219.474 309.957 217.053 310.604 214.647 cv
301.834 222.938 291.466 234.226 288.177 238.754 cv
288.312 239.035 288.811 244.641 288.811 244.641 cv
290.839 244.771 292.798 244.75 294.688 244.578 cv
295.377 240.888 296.273 237.287 297.211 233.722 cv
300.984 229.845 304.988 225.799 308.762 221.923 cv
cp
f
310.604 214.647 mo
309.957 217.053 309.334 219.474 308.762 221.923 cv
304.988 225.799 300.984 229.845 297.211 233.722 cv
296.273 237.287 295.377 240.888 294.688 244.578 cv
296.02 244.457 297.321 244.271 298.568 243.965 cv
299.963 235.858 li
305.58 228.394 311.951 221.47 318.972 215.013 cv
319.605 206.906 li
317.188 208.649 314.017 211.422 310.604 214.647 cv
cp
f
290.62 240.482 mo
290.792 240.278 291.012 240.125 291.225 240.201 cv
291.386 240.258 291.518 240.44 291.608 240.65 cv
291.857 241.229 291.813 242.062 291.506 242.57 cv
291.214 243.053 290.425 243.366 290.116 242.733 cv
289.786 242.058 290.272 240.897 290.62 240.482 cv
cp
f
334.326 351.148 mo
333.773 348.292 333.01 345.453 331.922 342.755 cv
330.834 340.056 328.582 336.626 326.381 334.723 cv
325.1 333.614 321.477 333.088 319.829 335.392 cv
324.463 340.815 327.564 346.733 329.638 353.559 cv
331.536 353.072 333.242 352.781 334.326 351.148 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
340.108 369.563 mo
337.036 368.303 334.626 365.781 332.768 363.096 cv
330.986 360.521 329.011 357.172 328.515 354.038 cv
328.244 352.324 328.616 350.413 329.885 349.229 cv
331.565 347.66 334.046 347.253 336.241 347.937 cv
337.519 348.334 338.562 349.269 339.426 350.29 cv
343.083 354.609 344.094 360.601 343.97 366.259 cv
343.946 367.311 343.863 368.435 343.222 369.268 cv
342.579 370.101 341.082 369.963 340.108 369.563 cv
cp
.0011902 .0288396 .18323 0 cmyk
f
291.065 298.44 mo
290.131 301.146 289.488 303.713 289.138 306.554 cv
285.783 306.341 282.681 305.093 280.104 302.934 cv
279.826 298.592 280.715 294.181 282.651 290.286 cv
286.198 292.074 289.084 294.998 291.065 298.44 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
289.554 338.796 mo
284.472 336.775 280.667 332.284 278.424 327.296 cv
276.181 322.308 275.328 316.816 274.727 311.38 cv
274.385 308.289 274.116 305.172 274.382 302.074 cv
274.647 298.976 275.781 296.067 277.478 293.462 cv
279.2 299.382 283.995 304.315 289.863 306.207 cv
294.73 307.776 294.833 315.057 295.561 320.119 cv
296.289 325.182 296.409 330.362 297.832 335.274 cv
295.997 336.63 293.363 338.311 289.554 338.796 cv
cp
.0011902 .0288396 .18323 0 cmyk
f
288.101 338.11 mo
288.576 338.355 289.054 338.597 289.554 338.796 cv
293.363 338.311 295.997 336.63 297.832 335.274 cv
296.409 330.362 296.289 325.182 295.561 320.119 cv
294.833 315.057 294.73 307.776 289.863 306.207 cv
288.37 305.726 286.947 305.045 285.626 304.204 cv
286.723 314.288 288.863 324.258 292.031 333.895 cv
290.566 334.972 289.034 336.478 288.101 338.11 cv
cp
.0164187 .376043 .514733 0 cmyk
f
301.821 349.972 mo
299.303 345.511 297.249 340.696 295.967 335.736 cv
293.56 334.915 290.675 335.589 288.93 337.439 cv
289.764 342.142 292.433 346.493 296.246 349.366 cv
297.65 350.425 300.067 350.094 301.821 349.972 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
293.812 347.487 mo
290.992 348.323 287.744 347.488 285.676 345.398 cv
284.004 343.707 285.379 340.545 287.008 338.812 cv
288.791 339.444 290.527 340.749 291.727 342.211 cv
292.927 343.674 293.539 345.615 293.812 347.487 cv
cp
.0011902 .0288396 .18323 0 cmyk
f
308.199 354.653 mo
308.932 357.697 309.154 360.86 309.155 364.482 cv
308.406 365.976 306.749 367.03 305.076 366.848 cv
299.936 361.87 296.091 355.591 294.01 348.775 cv
294.427 348.081 294.8 347.603 295.58 347.367 cv
296.36 347.132 297.189 347.109 298.004 347.146 cv
298.985 347.189 300.03 347.343 301.077 347.584 cv
304.619 348.4 307.355 351.15 308.199 354.653 cv
cp
f
302.174 278.657 mo
301.961 278.496 li
296.315 275.926 283.735 277.225 279.303 279.354 cv
279.319 279.478 li
282.175 280.079 285.131 280.093 288.056 280.095 cv
292.804 280.098 297.668 280.067 302.174 278.657 cv
cp
.0164187 .376043 .514733 0 cmyk
f
302.174 278.657 mo
297.668 280.067 292.804 280.098 288.056 280.095 cv
285.131 280.093 282.175 280.079 279.319 279.478 cv
279.777 282.986 280.326 286.51 281.523 289.839 cv
282.735 293.207 284.659 296.396 287.471 298.612 cv
290.282 300.828 294.054 301.967 297.537 301.141 cv
302.981 299.848 306.823 294.649 308.653 289.361 cv
308.92 286.413 305.676 281.242 302.174 278.657 cv
cp
.0011902 .0288396 .18323 0 cmyk
f
302.174 278.657 mo
300.371 279.222 298.511 279.559 296.624 279.768 cv
298.426 282.733 299.875 285.914 300.907 289.228 cv
298.417 292.674 296.97 296.996 296.816 301.261 cv
297.057 301.223 297.299 301.197 297.537 301.141 cv
302.981 299.848 306.823 294.649 308.653 289.361 cv
308.92 286.413 305.676 281.242 302.174 278.657 cv
cp
.0164187 .376043 .514733 0 cmyk
f
298.341 300.03 mo
298.555 297.618 299.067 295.171 300.365 293.126 cv
301.662 291.081 303.856 289.491 306.276 289.416 cv
306.052 291.747 305.241 294.092 303.835 295.965 cv
302.428 297.837 300.518 299.165 298.341 300.03 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
299.861 298.42 mo
302.174 303.479 li
309.759 297.921 li
305.323 290.849 li
299.861 298.42 li
cp
f
283.131 272.685 mo
283.318 274.9 284.047 277.069 285.235 278.95 cv
288.955 279.485 292.857 279.328 296.545 278.601 cv
295.927 276.084 295.684 273.54 295.881 270.955 cv
291.647 271.324 287.218 271.52 283.131 272.685 cv
cp
f
272.214 276.274 mo
272.223 277.345 272.333 278.548 273.152 279.237 cv
275.331 281.07 277.643 277.66 278.748 276.21 cv
280.462 273.961 281.657 271.332 282.34 268.593 cv
283.25 264.938 283.267 261.096 282.688 257.374 cv
282.524 256.322 282.293 255.232 281.629 254.4 cv
278.196 250.103 275.255 259.863 274.547 261.937 cv
272.974 266.54 272.172 271.408 272.214 276.274 cv
cp
.0011902 .0288396 .18323 0 cmyk
f
281.629 254.4 mo
278.312 250.246 275.452 259.227 274.625 261.703 cv
274.836 265.511 274.633 269.341 273.966 273.095 cv
273.321 273.78 272.723 274.608 272.224 275.481 cv
272.221 275.746 272.211 276.01 272.214 276.274 cv
272.223 277.345 272.333 278.548 273.152 279.237 cv
275.331 281.07 277.643 277.66 278.748 276.21 cv
280.462 273.961 281.657 271.332 282.34 268.593 cv
283.25 264.938 283.267 261.096 282.688 257.374 cv
282.524 256.322 282.293 255.232 281.629 254.4 cv
cp
.0164187 .376043 .514733 0 cmyk
f
270.416 279.62 mo
266.426 283.063 263.626 287.858 262.591 293.025 cv
263.319 294.485 264.927 295.17 266.432 294.538 cv
268.436 293.696 273.99 286.899 274.391 284.763 cv
274.597 283.668 274.587 282.483 274.062 281.501 cv
273.537 280.518 271.26 278.893 270.416 279.62 cv
cp
.0011902 .0288396 .18323 0 cmyk
f
274.391 284.763 mo
274.597 283.668 274.587 282.483 274.062 281.501 cv
273.537 280.518 271.26 278.893 270.416 279.62 cv
270.188 279.817 269.978 280.034 269.757 280.24 cv
269.612 280.667 269.545 281.12 269.562 281.559 cv
269.607 282.723 270.07 283.823 270.526 284.896 cv
269.485 287.254 267.935 289.392 266.07 291.171 cv
265.172 292.028 263.705 292.197 262.636 292.843 cv
262.591 293.025 li
263.319 294.485 264.927 295.17 266.432 294.538 cv
268.436 293.696 273.99 286.899 274.391 284.763 cv
cp
.0164187 .376043 .514733 0 cmyk
f
276.676 274.767 mo
276.156 274.388 275.427 274.399 274.836 274.653 cv
274.245 274.907 273.77 275.368 273.344 275.851 cv
272.028 277.34 271.052 279.127 270.51 281.038 cv
270.333 281.659 270.567 282.263 270.772 282.875 cv
270.977 283.487 271.439 284.053 272.068 284.2 cv
272.518 284.305 273.007 284.18 273.376 283.903 cv
273.804 283.583 273.933 283.126 274.176 282.676 cv
274.495 282.085 274.823 281.498 275.147 280.909 cv
275.789 279.741 276.463 278.583 277.112 277.426 cv
277.555 276.639 277.46 275.339 276.676 274.767 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
263.856 292.328 mo
261.429 294.321 259.194 296.55 257.192 298.971 cv
255.905 300.528 256.27 302.715 256.155 304.732 cv
256.455 304.956 256.857 305.089 257.231 305.093 cv
257.567 303.908 258.108 302.786 258.799 301.767 cv
259.259 301.087 259.979 300.864 260.63 300.364 cv
261.082 300.375 261.537 300.526 261.909 300.783 cv
261.744 301.561 261.296 302.359 260.896 303.045 cv
260.395 303.903 260.206 304.832 260.125 305.823 cv
260.414 305.925 260.574 306 260.863 306.102 cv
261.687 305.088 262.418 304.132 263.408 303.279 cv
264.691 302.174 264.433 300.252 264.439 298.558 cv
264.444 297.102 265.607 296.132 266.224 294.813 cv
266.398 294.439 266.574 294.06 266.639 293.652 cv
266.703 293.245 266.642 292.799 266.381 292.479 cv
266.104 292.141 265.642 291.994 265.204 292.011 cv
264.768 292.027 264.195 292.05 263.856 292.328 cv
cp
f
263.815 297.921 mo
263.555 299.115 263.19 300.287 262.728 301.419 cv
263.114 301.628 263.561 301.632 263.999 301.599 cv
264.654 300.818 265.166 299.929 265.341 298.925 cv
264.929 298.441 264.413 298.138 263.815 297.921 cv
cp
258.91 300.384 mo
257.773 300.188 256.862 299.833 255.842 299.294 cv
257.093 297.081 258.859 295.16 260.961 293.729 cv
261.625 294.404 262.172 295.338 262.454 296.241 cv
261.757 297.983 260.613 299.594 258.91 300.384 cv
cp
.0011902 .0288396 .18323 0 cmyk
f
303.244 247.437 mo
299.936 245.193 295.859 244.107 291.873 244.406 cv
287.807 244.712 283.985 246.388 280.257 248.04 cv
276.396 255.052 275.055 263.546 277.23 271.249 cv
278.329 272.137 279.631 272.507 280.991 272.884 cv
287.015 274.55 293.744 273.452 298.926 269.958 cv
299.389 266.686 300.431 263.562 301.96 260.632 cv
303.173 259.002 304.624 256.972 304.925 254.559 cv
305.226 252.146 305.075 249.385 303.244 247.437 cv
cp
f
291.873 244.406 mo
290.172 244.534 288.517 244.909 286.891 245.415 cv
286.583 245.94 286.563 246.656 286.865 247.203 cv
287.282 247.961 288.151 248.388 289.013 248.463 cv
289.873 248.537 290.731 248.307 291.545 248.016 cv
293.54 247.301 295.379 246.183 296.966 244.779 cv
295.296 244.419 293.577 244.278 291.873 244.406 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
291.315 255.52 mo
290.535 255.448 289.752 255.415 288.97 255.396 cv
289.137 254.267 289.331 253.144 289.59 252.045 cv
288.136 251.185 li
286.575 250.949 285.099 251.052 283.557 251.392 cv
283.171 252.801 282.872 254.232 282.641 255.676 cv
281.535 255.813 280.434 255.985 279.343 256.214 cv
279.017 257.627 278.962 259.018 279.322 260.423 cv
280.776 261.282 li
281.225 261.261 281.684 261.24 282.151 261.221 cv
282.12 262.558 282.137 263.895 282.239 265.228 cv
283.693 266.088 li
285.208 266.006 286.686 266.01 288.2 265.928 cv
288.239 264.347 288.294 262.741 288.387 261.135 cv
289.656 261.154 290.903 261.199 292.072 261.282 cv
292.52 259.867 292.688 257.861 292.77 256.38 cv
291.315 255.52 li
cp
.900053 .568688 .238071 .0469062 cmyk
f
291.315 255.52 mo
290.009 255.4 288.697 255.369 287.386 255.378 cv
287.573 253.961 287.812 252.557 288.136 251.185 cv
286.575 250.949 285.099 251.052 283.557 251.392 cv
283.171 252.801 282.872 254.232 282.641 255.676 cv
281.535 255.813 280.434 255.985 279.343 256.214 cv
279.017 257.627 278.962 259.018 279.322 260.423 cv
280.232 260.377 281.188 260.339 282.165 260.311 cv
282.093 261.949 282.113 263.592 282.239 265.228 cv
283.754 265.146 285.231 265.149 286.746 265.067 cv
286.785 263.486 286.839 261.882 286.933 260.274 cv
288.202 260.294 289.449 260.339 290.618 260.423 cv
291.065 259.008 291.233 257.001 291.315 255.52 cv
cp
.689357 .0354314 .0859388 0 cmyk
f
299.055 233.36 mo
297.27 237.006 296.021 240.813 295.326 244.813 cv
294.179 245.516 292.993 246.206 291.682 246.508 cv
290.37 246.809 289.096 246.95 288.042 246.114 cv
288.244 243.56 289.06 241.056 290.4 238.872 cv
292.346 235.705 295.369 233.841 299.055 233.36 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
306.798 215.559 mo
306.505 213.125 305.36 210.7 303.325 209.335 cv
303.282 209.234 li
298.395 210.607 289.325 211.946 284.828 211.673 cv
283.394 211.391 282.031 210.786 280.837 209.943 cv
280.823 209.988 li
278.444 214.572 277.033 220.466 277.732 225.791 cv
278.432 231.115 280.905 236.191 284.668 240.023 cv
286.706 240.53 288.884 240.746 290.981 240.635 cv
292.744 239.073 294.364 237.169 295.683 235.217 cv
295.683 235.217 298.461 234.046 299.972 234.123 cv
303.054 231.29 304.949 226.874 306.008 222.824 cv
306.627 220.452 307.091 217.991 306.798 215.559 cv
cp
.0011902 .0288396 .18323 0 cmyk
f
306.798 215.559 mo
306.505 213.125 305.36 210.7 303.325 209.335 cv
303.282 209.234 li
303.111 209.283 302.923 209.331 302.742 209.379 cv
299.119 212.443 296.858 216.924 295.03 221.355 cv
293.915 224.061 292.908 226.818 292.162 229.649 cv
291.504 232.149 291.049 234.71 290.932 237.295 cv
290.891 238.204 290.681 239.633 290.888 240.637 cv
290.981 240.635 li
292.744 239.073 294.364 237.169 295.683 235.217 cv
295.683 235.217 298.461 234.046 299.972 234.123 cv
303.054 231.29 304.949 226.874 306.008 222.824 cv
306.627 220.452 307.091 217.991 306.798 215.559 cv
cp
.0164187 .376043 .514733 0 cmyk
f
303.282 209.234 mo
300.801 202.965 295.107 197.892 288.617 196.064 cv
284.969 199.982 282.276 204.786 280.837 209.943 cv
282.031 210.786 283.394 211.391 284.828 211.673 cv
289.325 211.946 298.395 210.607 303.282 209.234 cv
cp
.0011902 .0288396 .18323 0 cmyk
f
286.551 226.143 mo
286.34 224.538 286.935 222.849 288.104 221.729 cv
289.273 220.61 290.988 220.09 292.582 220.371 cv
293.623 221.406 294.101 222.928 293.746 224.353 cv
293.393 225.777 292.251 226.98 290.846 227.408 cv
289.441 227.836 287.639 227.129 286.551 226.143 cv
cp
.0164187 .376043 .514733 0 cmyk
f
277.99 223.833 mo
278.062 223.001 278.357 221.797 279.254 221.599 cv
279.777 221.483 280.296 221.803 280.691 222.165 cv
281.926 223.295 282.596 225.012 282.454 226.679 cv
281.509 227.489 280.216 227.882 279.086 227.195 cv
278.154 226.63 277.932 225.049 277.978 224.042 cv
277.99 223.833 li
cp
f
289.279 221.836 mo
288.11 222.955 287.516 224.646 287.726 226.25 cv
288.367 226.831 289.256 227.308 290.166 227.52 cv
290.398 227.505 290.628 227.475 290.846 227.408 cv
292.251 226.98 293.393 225.777 293.746 224.353 cv
294.096 222.946 293.633 221.448 292.62 220.414 cv
291.386 220.479 290.173 220.98 289.279 221.836 cv
cp
.550195 0 .358099 0 cmyk
f
280.284 221.855 mo
280.279 221.855 li
279.383 222.054 279.087 223.258 279.016 224.09 cv
279.002 224.299 li
278.957 225.306 279.18 226.887 280.111 227.452 cv
280.294 227.54 li
281.067 227.554 281.835 227.21 282.454 226.679 cv
282.596 225.012 281.926 223.295 280.691 222.165 cv
280.567 222.052 280.429 221.948 280.284 221.855 cv
cp
f
293.596 231.771 mo
294.102 231.653 294.459 231.172 294.583 230.667 cv
294.887 229.431 293.934 228.26 292.645 228.464 cv
291.485 228.646 291.298 229.823 291.799 230.73 cv
292.136 231.342 292.849 231.946 293.596 231.771 cv
cp
.0164187 .376043 .514733 0 cmyk
f
294.583 230.667 mo
294.766 229.924 294.489 229.212 293.965 228.8 cv
293.791 228.774 293.61 228.766 293.418 228.796 cv
292.259 228.979 292.071 230.155 292.572 231.063 cv
292.719 231.327 292.938 231.587 293.198 231.787 cv
293.328 231.802 293.461 231.803 293.596 231.771 cv
294.102 231.653 294.459 231.172 294.583 230.667 cv
cp
.550195 0 .358099 0 cmyk
f
279.935 231.913 mo
280.383 231.499 280.563 230.818 280.379 230.236 cv
280.194 229.655 279.654 229.202 279.05 229.122 cv
278.857 230.107 279.199 231.229 279.935 231.913 cv
cp
.0164187 .376043 .514733 0 cmyk
f
280.379 230.236 mo
280.246 229.82 279.929 229.476 279.539 229.281 cv
279.428 230.095 279.67 230.96 280.183 231.604 cv
280.438 231.203 280.522 230.691 280.379 230.236 cv
cp
.550195 0 .358099 0 cmyk
f
299.302 228.844 mo
298.896 225.543 299.701 222.063 301.49 219.374 cv
302.861 220.714 303.789 222.839 303.399 224.845 cv
303.01 226.852 301.052 228.23 299.302 228.844 cv
cp
.0011902 .0288396 .18323 0 cmyk
f
288.747 196.105 mo
287.04 201.163 285.832 206.389 285.159 211.685 cv
289.754 211.88 298.508 210.575 303.282 209.234 cv
300.817 203.007 295.184 197.963 288.747 196.105 cv
cp
.0164187 .376043 .514733 0 cmyk
f
296.432 205.202 mo
295.854 205 295.265 204.836 294.672 204.69 cv
294.8 203.951 294.903 203.213 294.931 202.48 cv
294.346 202.286 293.772 202.159 293.159 202.105 cv
293.105 202.854 293.018 203.601 292.915 204.344 cv
292.28 204.249 291.643 204.174 291.002 204.143 cv
290.854 204.756 290.776 205.332 290.629 205.944 cv
291.303 205.982 291.966 206.036 292.626 206.101 cv
292.484 206.84 292.327 207.576 292.138 208.306 cv
292.717 208.372 293.228 208.471 293.807 208.537 cv
293.988 207.809 294.174 207.063 294.346 206.312 cv
294.896 206.395 295.444 206.488 295.998 206.606 cv
296.205 206.149 296.374 205.707 296.432 205.202 cv
cp
.900053 .568688 .238071 .0469062 cmyk
f
303.305 247.512 mo
302.063 247.811 300.948 248.619 300.206 249.67 cv
299.299 250.955 298.907 252.554 298.882 254.126 cv
298.857 255.699 299.179 257.258 299.593 258.775 cv
297.569 262.698 296.315 267.131 296.097 271.555 cv
297.077 271.094 298.026 270.564 298.926 269.958 cv
299.389 266.686 300.431 263.562 301.96 260.632 cv
303.173 259.002 304.624 256.972 304.925 254.559 cv
305.223 252.175 305.072 249.455 303.305 247.512 cv
cp
.0164187 .376043 .514733 0 cmyk
f
301.255 258.839 mo
302.703 257.656 303.705 255.94 304.024 254.098 cv
304.343 252.256 303.976 250.303 303.009 248.702 cv
301.916 249.018 301.117 250.223 300.774 251.308 cv
300.016 253.708 300.187 256.559 301.255 258.839 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
320.114 271.542 mo
318.946 262.378 313.294 253.741 305.461 248.841 cv
303.407 250.088 301.824 252.417 301.537 254.448 cv
303.002 262.928 308.207 270.69 315.495 275.266 cv
316.534 275.918 318.069 275.581 319.038 274.827 cv
320.006 274.072 320.27 272.76 320.114 271.542 cv
cp
.0011902 .0288396 .18323 0 cmyk
f
318.975 273.071 mo
319.104 273.477 319.329 273.881 319.557 274.271 cv
320.093 273.514 320.236 272.501 320.114 271.542 cv
318.946 262.378 313.294 253.741 305.461 248.841 cv
304.897 249.184 304.374 249.612 303.898 250.089 cv
310.859 256.218 316.137 264.241 318.975 273.071 cv
cp
.0164187 .376043 .514733 0 cmyk
f
321.898 276.96 mo
321.357 275.315 320.782 273.459 319.299 272.569 cv
318.555 272.122 317.558 272.138 316.828 272.606 cv
316.098 273.076 315.537 273.929 315.635 274.791 cv
317.015 276.177 318.137 277.818 318.927 279.607 cv
320.074 279.05 321.346 278.109 321.898 276.96 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
329.659 290.679 mo
329.106 285.618 327.237 280.645 323.961 276.748 cv
323.163 275.799 322.105 274.845 320.871 274.959 cv
320.068 275.033 319.365 275.569 318.909 276.232 cv
318.452 276.896 317.985 277.676 318.126 278.469 cv
319.008 283.462 321.563 288.145 325.284 291.588 cv
325.832 292.096 326.733 291.998 327.475 291.905 cv
328.216 291.813 329.181 291.252 329.659 290.679 cv
cp
.0011902 .0288396 .18323 0 cmyk
f
320.871 274.959 mo
320.597 274.984 320.342 275.078 320.097 275.198 cv
323.068 280.397 327.174 285.082 328.993 290.782 cv
329.16 290.834 329.322 290.849 329.481 290.849 cv
329.659 290.679 li
329.106 285.618 327.237 280.645 323.961 276.748 cv
323.163 275.799 322.105 274.845 320.871 274.959 cv
cp
.0164187 .376043 .514733 0 cmyk
f
330.667 292.608 mo
330.153 291.688 329.763 290.547 328.85 290.021 cv
328.279 289.691 327.57 289.612 326.941 289.807 cv
326.313 290.001 325.725 290.39 325.438 290.983 cv
325.899 292.092 326.287 293.23 326.6 294.389 cv
325.68 295.927 325.292 297.816 325.675 299.567 cv
325.94 300.78 326.753 301.854 326.93 303.082 cv
327.326 303.153 327.722 302.883 327.888 302.517 cv
328.054 302.149 328.041 301.729 327.997 301.329 cv
327.913 300.574 327.728 299.83 327.447 299.125 cv
327.666 298.658 328.023 298.395 328.472 298.141 cv
329.931 299.627 331.004 301.582 331.373 303.632 cv
331.911 303.802 332.489 303.874 333.039 303.746 cv
333.488 304.377 333.91 304.912 334.563 305.329 cv
335.213 305.337 335.73 305.18 336.339 304.952 cv
336.696 304.201 336.699 303.361 336.634 302.532 cv
336.781 302.396 336.874 302.432 337.021 302.295 cv
336.958 299.263 335.5 296.38 333.604 294.012 cv
333.248 293.565 332.87 293.123 332.391 292.811 cv
331.912 292.498 331.22 292.463 330.667 292.608 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
326.451 297.683 mo
326.451 297.683 325.758 296.153 325.288 295.459 cv
324.75 296.815 324.645 298.245 325.111 299.628 cv
325.427 299.812 325.755 299.691 326.109 299.602 cv
326.451 297.683 li
cp
327.548 297.233 mo
326.894 296.297 326.428 295.229 326.188 294.111 cv
327.49 292.565 329.399 291.651 331.419 291.578 cv
333.007 292.56 334.22 294.026 335.12 295.662 cv
332.976 297.391 330.189 298.014 327.548 297.233 cv
cp
.0011902 .0288396 .18323 0 cmyk
f
328.275 336.57 mo
329.691 329.889 327.619 323.001 325.33 316.565 cv
323.79 312.234 322.138 307.935 320.095 303.815 cv
317.962 299.515 315.471 295.081 311.18 292.929 cv
305.653 294.983 301.531 299.333 299.861 304.988 cv
303.522 316.422 309.871 326.985 318.249 335.585 cv
319.457 336.824 321.095 337.458 322.782 337.839 cv
324.47 338.221 327.916 338.263 328.275 336.57 cv
cp
f
336.491 346.778 mo
337.553 343.031 337.87 338.159 335.141 335.596 cv
334.112 334.63 332.654 334.235 331.33 334.563 cv
330.006 334.892 328.71 335.961 328.512 337.421 cv
328.053 340.805 329.599 344.41 332.278 346.203 cv
333.27 346.866 335.366 347.104 336.491 346.778 cv
cp
f
287.646 339.068 mo
286.354 342.475 290.272 346.209 293.777 347.494 cv
293.812 347.487 li
293.539 345.615 292.927 343.674 291.727 342.211 cv
290.671 340.925 289.199 339.761 287.646 339.068 cv
cp
.0164187 .376043 .514733 0 cmyk
f
309.149 364.135 mo
309.133 360.661 308.907 357.597 308.199 354.653 cv
307.355 351.15 304.619 348.4 301.077 347.584 cv
300.03 347.343 298.985 347.189 298.004 347.146 cv
297.286 347.113 296.558 347.137 295.86 347.302 cv
296.792 347.406 297.698 347.796 298.552 348.36 cv
299.997 349.317 301.072 350.738 301.993 352.207 cv
304.452 356.126 306.022 360.6 306.553 365.195 cv
307.409 364.904 308.288 364.55 309.149 364.135 cv
cp
f
308.207 383.818 mo
307.33 384.394 306.603 384.191 305.653 383.743 cv
306.835 377.775 306.576 371.527 304.907 365.677 cv
304.566 364.48 305.556 363.282 306.48 362.449 cv
307.006 361.977 307.735 361.602 308.405 361.83 cv
309.781 370.202 309.184 376.802 308.207 383.818 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
320.095 303.815 mo
317.962 299.515 315.471 295.081 311.18 292.928 cv
308.228 294.026 305.694 295.795 303.703 298.052 cv
303.888 299.231 304.415 300.392 304.811 301.526 cv
306.357 305.963 308.141 310.316 310.147 314.563 cv
314.063 322.852 318.835 330.734 324.368 338.042 cv
324.731 338.06 325.105 338.059 325.475 338.035 cv
326.549 338.025 327.446 337.714 328.083 337.006 cv
328.17 336.874 328.241 336.732 328.275 336.57 cv
329.691 329.889 327.619 323.001 325.33 316.565 cv
323.79 312.234 322.138 307.935 320.095 303.815 cv
cp
.0164187 .376043 .514733 0 cmyk
f
336.491 346.778 mo
337.553 343.031 337.87 338.159 335.141 335.596 cv
334.112 334.63 332.654 334.235 331.33 334.563 cv
330.267 334.827 329.232 335.573 328.759 336.611 cv
329.095 336.39 329.424 336.159 329.726 335.89 cv
331.648 339.07 332.966 342.931 333.716 346.571 cv
333.544 346.709 li
334.547 346.957 335.735 346.997 336.491 346.778 cv
cp
f
336.241 347.937 mo
334.879 347.512 333.407 347.51 332.085 347.942 cv
334.061 355.216 336.699 363.359 341.361 369.402 cv
341.497 369.58 341.637 369.736 341.778 369.877 cv
342.358 369.859 342.898 369.687 343.222 369.268 cv
343.863 368.435 343.946 367.311 343.97 366.259 cv
344.094 360.601 343.083 354.609 339.426 350.29 cv
338.562 349.269 337.519 348.334 336.241 347.937 cv
cp
f
355.228 384.33 mo
350.561 379.356 346.263 373.739 342.884 367.815 cv
342.026 367.337 341.109 366.886 340.128 366.87 cv
339.147 366.855 338.091 367.4 337.82 368.343 cv
341.487 374.169 346.086 379.48 351.32 383.952 cv
352.246 384.743 354.047 384.629 355.228 384.33 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
290.025 321.874 mo
284.069 320.265 278.649 316.727 274.781 311.92 cv
274.846 312.373 275.027 312.789 275.093 313.242 cv
279.288 317.886 284.486 321.634 290.406 323.665 cv
290.211 323.097 290.221 322.442 290.025 321.874 cv
cp
.0164187 .376043 .514733 0 cmyk
f
310.03 307.982 mo
309.17 311.548 307.693 314.965 305.687 318.034 cv
305.868 318.489 305.989 318.872 306.171 319.326 cv
308.489 316.758 310.061 313.518 310.632 310.105 cv
310.764 309.322 310.511 308.614 310.03 307.982 cv
cp
f
263.426 89.226 mo
265.358 89.0405 267.665 87.9668 270.072 86.6547 cv
266.017 79.792 li
264.234 81.9936 262.447 83.8809 260.65 85.0185 cv
257.397 81.1733 li
256.341 81.8496 li
242.546 67.6953 li
241.046 68.7939 li
235.934 63.5122 li
234.666 63.8926 li
223.808 52.0201 li
222.347 52.6611 li
208.795 37.5718 li
209.737 36.8095 li
199.217 24.7255 li
197.271 25.7241 195.684 27.1421 194.358 28.8663 cv
194.485 28.9087 205.555 40.1899 205.555 40.1899 cv
206.475 39.4468 li
217.238 51.4312 li
215.02 54.4209 li
221.314 61.4341 li
220.174 63.8926 li
230.609 75.1313 li
232.3 73.9062 li
234.92 76.6524 li
231.666 79.8637 li
250.341 99.9332 li
256.679 97.229 li
260.312 99.0879 li
263.861 97.1446 li
261.707 94.0601 li
265.298 91.7847 li
263.426 89.226 li
.85919 .688991 .469245 .380224 cmyk
f
253.231 75.8521 mo
250.586 72.0308 247.081 68.937 242.853 67.0064 cv
241.895 67.3662 241.111 68.1001 240.466 68.8951 cv
244.274 72.2212 247.847 75.8188 251.145 79.6518 cv
252.456 78.794 253.203 77.4194 253.231 75.8521 cv
258.155 88.6631 mo
252.834 82.4555 247.016 76.4966 241.139 70.8124 cv
238.701 71.4638 236.673 73.1338 235.474 75.354 cv
240.292 82.2734 246.208 88.4262 252.935 93.5112 cv
255.1 92.3838 256.702 90.6255 258.155 88.6631 cv
245.661 99.5298 mo
240.975 95.8208 237.079 91.1167 234.31 85.8208 cv
235.233 84.2959 236.363 83.2212 237.893 82.3051 cv
242 86.352 246.341 90.4361 250.448 94.4829 cv
249.256 96.3252 247.604 98.5107 245.661 99.5298 cv
.0614023 .247898 .95169 0 cmyk
f
245.584 98.626 mo
241.158 95.0644 237.422 90.5483 234.755 85.5332 cv
235.52 84.3398 236.445 83.4248 237.696 82.6245 cv
239.663 84.5591 241.682 86.5009 243.699 88.4439 cv
245.711 90.3794 247.723 92.3149 249.683 94.2431 cv
248.244 96.4058 246.898 97.8452 245.584 98.626 cv
252.853 92.6147 mo
246.333 87.6441 240.643 81.7266 235.932 75.0176 cv
237.049 73.106 238.825 71.6831 240.873 71.0601 cv
247.396 77.3789 252.806 83.0493 257.392 88.3765 cv
256.248 89.8896 254.819 91.5146 252.853 92.6147 cv
251.096 78.6748 mo
247.981 75.0864 244.601 71.6792 241.035 68.5367 cv
241.592 67.9194 242.145 67.4921 242.714 67.2393 cv
246.576 69.0474 249.989 71.9639 252.604 75.6919 cv
252.54 76.8975 252.012 77.9385 251.096 78.6748 cv
level3{
gsave
clp
[18.6962 21.1679 -21.1679 18.6962 234.156 70.5715 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[18.6962 21.1679 -21.1679 18.6962 234.156 70.5715 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
204.919 36.771 mo
205.03 37.9419 206.538 37.5 206.92 36.7441 cv
207.028 36.5308 207.047 36.2637 206.93 36.0552 cv
206.463 35.23 204.833 35.8735 204.919 36.771 cv
cp
202.514 34.189 mo
202.632 35.4258 204.225 34.959 204.628 34.1606 cv
204.741 33.9355 204.762 33.6533 204.637 33.4331 cv
204.145 32.562 202.423 33.2412 202.514 34.189 cv
cp
200.108 31.6074 mo
200.233 32.9097 201.91 32.4185 202.335 31.5776 cv
202.455 31.3398 202.476 31.043 202.345 30.811 cv
201.826 29.8936 200.013 30.6089 200.108 31.6074 cv
cp
200.053 28.1895 mo
200.19 28.4326 200.168 28.7446 200.042 28.9941 cv
199.596 29.8774 197.834 30.3936 197.703 29.0254 cv
197.603 27.9766 199.508 27.2251 200.053 28.1895 cv
cp
.907713 .796078 .509636 .614374 cmyk
f
236.825 70.0776 mo
230.631 64.3589 224.487 58.6025 218.294 52.8838 cv
217.771 53.355 217.475 54.0571 216.951 54.5278 cv
222.596 60.3965 228.24 66.2646 233.884 72.1333 cv
234.729 71.4775 235.98 70.7334 236.825 70.0776 cv
cp
.68069 .454383 .523583 .190829 cmyk
f
231.543 71.5796 mo
228.786 68.604 225.954 65.4531 223.197 62.478 cv
222.803 62.8438 222.431 63.3135 222.036 63.6792 cv
224.643 66.8047 227.249 69.9302 229.855 73.0557 cv
230.558 72.5923 231.063 72.2705 231.543 71.5796 cv
cp
f
256.484 87.8286 mo
256.372 87.8735 256.297 87.9604 256.242 88.0586 cv
256.214 88.1221 li
256.178 88.2754 li
256.188 88.3989 li
256.208 88.4731 li
256.243 88.5845 256.301 88.689 256.402 88.7593 cv
256.712 88.9717 257.178 88.8481 257.23 88.4448 cv
257.281 88.0474 256.873 87.6748 256.484 87.8286 cv
cp
f
252.91 91.9165 mo
252.798 91.9614 252.723 92.0483 252.668 92.146 cv
252.64 92.21 li
252.604 92.3633 li
252.614 92.4868 li
252.634 92.561 li
252.669 92.6724 252.727 92.7769 252.828 92.8467 cv
253.138 93.0596 253.604 92.936 253.656 92.5327 cv
253.707 92.1353 253.299 91.7627 252.91 91.9165 cv
cp
f
236.4 74.8364 mo
236.288 74.8813 236.213 74.9683 236.159 75.0659 cv
236.13 75.1299 li
236.095 75.2832 li
236.104 75.4067 li
236.124 75.481 li
236.159 75.5923 236.217 75.6968 236.318 75.7666 cv
236.628 75.9795 237.095 75.856 237.146 75.4526 cv
237.197 75.0552 236.789 74.6826 236.4 74.8364 cv
cp
f
240.773 71.2876 mo
240.66 71.332 240.586 71.4194 240.531 71.5171 cv
240.502 71.5806 li
240.467 71.7339 li
240.478 71.8574 li
240.496 71.9316 li
240.532 72.043 240.59 72.1479 240.691 72.2178 cv
241.001 72.4307 241.467 72.3071 241.519 71.9038 cv
241.569 71.5059 241.162 71.1333 240.773 71.2876 cv
cp
f
237.458 83.0122 mo
237.345 83.0566 237.271 83.144 237.216 83.2417 cv
237.187 83.3057 li
237.151 83.4585 li
237.162 83.582 li
237.181 83.6563 li
237.217 83.7676 237.274 83.8726 237.376 83.9424 cv
237.686 84.1553 238.151 84.0317 238.203 83.6284 cv
238.254 83.2305 237.847 82.8579 237.458 83.0122 cv
cp
f
241.629 68.2603 mo
241.517 68.3047 241.441 68.3921 241.387 68.4897 cv
241.357 68.5537 li
241.322 68.7065 li
241.333 68.8301 li
241.352 68.9043 li
241.388 69.0156 241.445 69.1206 241.547 69.1904 cv
241.856 69.4033 242.322 69.2798 242.374 68.8765 cv
242.426 68.4785 242.018 68.106 241.629 68.2603 cv
cp
f
251.072 77.8301 mo
250.959 77.8745 250.885 77.9619 250.83 78.0596 cv
250.801 78.1235 li
250.766 78.2764 li
250.776 78.3999 li
250.795 78.4741 li
250.831 78.5854 250.889 78.6904 250.99 78.7603 cv
251.3 78.9731 251.766 78.8496 251.817 78.4463 cv
251.868 78.0483 251.461 77.6758 251.072 77.8301 cv
cp
f
248.933 94.2139 mo
248.82 94.2588 248.745 94.3457 248.691 94.4438 cv
248.662 94.5073 li
248.627 94.6606 li
248.637 94.7842 li
248.656 94.8584 li
248.691 94.9697 248.749 95.0742 248.851 95.1445 cv
249.16 95.3569 249.627 95.2334 249.679 94.8301 cv
249.729 94.4326 249.321 94.0601 248.933 94.2139 cv
cp
f
307.17 130.353 mo
307.23 132.556 308.307 134.71 310.033 136.081 cv
313.833 139.097 317.723 142.001 321.542 144.994 cv
322.202 151.976 321.719 159.115 319.956 165.904 cv
318.918 165.299 317.93 164.477 317.247 163.489 cv
316.005 162.991 314.496 162.922 313.186 163.198 cv
311.9 165.879 310.128 168.403 308.116 170.592 cv
309.574 172.469 311.932 173.54 314.298 173.311 cv
315.202 172.168 315.929 170.955 316.417 169.583 cv
317.577 170.832 319.089 171.664 320.73 172.124 cv
320.634 172.387 320.581 172.714 320.484 172.977 cv
322.681 173.642 324.941 174.021 327.228 173.825 cv
327.842 172.878 328.183 171.791 328.199 170.662 cv
328.742 170.536 329.205 170.258 329.603 169.867 cv
330.993 171.852 332.967 173.506 335.144 174.573 cv
336.528 173.945 337.673 173.004 338.602 171.801 cv
336.104 169.657 333.857 167.246 332.215 164.394 cv
331.223 164.491 330.082 164.889 329.19 165.334 cv
331.673 151.974 331.191 137.749 327.129 124.532 cv
325.957 124.278 324.46 124.574 323.41 125.152 cv
323.474 126.109 323.353 126.942 323.416 127.899 cv
322.378 127.188 321.333 126.522 320.296 125.811 cv
320.388 123.51 318.196 121.544 315.955 121.018 cv
313.714 120.491 311.272 121.426 309.706 123.112 cv
308.14 124.799 307.107 128.052 307.17 130.353 cv
.85919 .688991 .469245 .380224 cmyk
f
285.13 111.241 mo
284.239 112.775 283.7 114.125 283.286 115.85 cv
283.809 116.564 284.344 117.406 284.866 118.119 cv
282.961 121.589 281.201 125.22 279.295 128.69 cv
282.472 132.401 286.681 135.595 291.111 137.651 cv
292.283 136.093 293.717 134.467 294.888 132.909 cv
296.222 133.201 297.621 134.215 297.857 135.56 cv
293.148 145.693 287.501 155.458 280.88 164.459 cv
282.465 163.414 284.405 162.345 285.99 161.299 cv
286.521 161.644 287.499 161.895 287.807 162.448 cv
289.307 165.151 291.482 167.541 294.022 169.305 cv
293.341 170.557 292.436 171.623 291.187 172.31 cv
288.397 171.157 285.923 169.051 284.456 166.412 cv
283.196 167.637 281.996 168.762 280.509 169.699 cv
278.565 169.685 276.728 169.697 274.784 169.683 cv
274.247 171.288 273.518 172.88 272.981 174.486 cv
270.659 174.721 268.566 174.371 266.308 173.786 cv
267.506 171.64 268.108 169.029 267.922 166.578 cv
267.135 166.455 266.197 166.53 265.41 166.407 cv
264.157 168.845 262.396 171.107 260.649 173.22 cv
258.548 173.129 256.589 172.32 255.008 170.934 cv
258.111 167.822 261.309 164.201 263.694 160.51 cv
264.455 160.619 265.485 160.459 266.127 160.883 cv
268.073 162.169 270.416 162.893 272.664 163.518 cv
276.173 158.088 278.969 152.274 281.212 146.211 cv
271.854 143.927 263.315 139.47 255.864 133.363 cv
260.261 121.815 267.273 111.272 276.225 102.752 cv
280.21 104.054 283.523 107.367 285.13 111.241 cv
f
305.391 98.0806 mo
301.16 96.873 291.39 96.728 291.39 96.728 cv
291.145 96.1802 280.096 98.6465 274.556 101.022 cv
278.794 101.859 283.028 102.417 287.258 102.658 cv
292.593 102.263 299.471 100.602 305.391 98.0806 cv
cp
.302678 .695705 1 .225376 cmyk
f
274.556 101.022 mo
274.467 101.06 li
277.246 106.258 280.241 111.078 284.776 114.912 cv
286.635 115.389 288.787 115.353 290.484 115.341 cv
290.535 115.321 li
289.176 111.158 288.043 106.926 287.128 102.648 cv
282.941 102.403 278.751 101.851 274.556 101.022 cv
cp
.0614023 .247898 .95169 0 cmyk
f
305.558 98.1279 mo
305.391 98.0805 li
299.471 100.602 292.593 102.263 287.258 102.658 cv
287.128 102.648 li
288.043 106.926 289.176 111.158 290.535 115.321 cv
296.986 112.986 301.989 107.918 306.513 102.891 cv
306.618 101.437 306.222 99.4317 305.558 98.1279 cv
.199557 .566888 .97763 .0466621 cmyk
f
301.595 102.273 mo
302.379 101.886 303.568 101.447 304.356 102.049 cv
304.659 102.281 304.866 102.589 305.193 102.807 cv
305.661 103.118 306.134 103.39 306.548 103.775 cv
307.186 104.371 307.68 105.17 307.723 106.042 cv
307.758 106.748 307.493 107.447 307.077 108.019 cv
306.661 108.59 306.102 109.043 305.506 109.422 cv
304.282 110.203 302.877 110.69 301.436 110.856 cv
300.702 110.941 299.957 110.943 299.223 110.858 cv
298.896 110.82 298.529 110.688 298.201 110.706 cv
297.937 110.72 297.709 110.853 297.437 110.843 cv
295.649 110.772 296.941 107.661 297.293 106.846 cv
297.536 106.282 297.802 105.697 298.165 105.198 cv
299.058 103.972 300.232 102.947 301.595 102.273 cv
.85919 .688991 .469245 .380224 cmyk
f
275.594 95.5708 mo
276.676 96.98 277.483 98.5996 277.957 100.312 cv
286.4 102.146 295.531 101.154 303.472 97.7495 cv
304.362 94.812 304.754 91.4673 304.794 88.3979 cv
296.184 87.751 287.426 88.7168 279.308 91.6602 cv
278.538 91.9395 277.762 92.2402 277.108 92.7339 cv
276.455 93.228 275.68 94.7563 275.594 95.5708 cv
cp
f
307.204 88.2583 mo
300.22 91.9555 292.466 94.4825 285.145 96.2275 cv
281.145 96.3472 277.029 96.4272 273.041 95.7817 cv
268.19 90.4712 264.677 83.7739 262.171 77.0327 cv
264.656 70.8481 268.317 65.1382 272.9 60.2988 cv
286.122 59.0962 299.626 59.9956 312.445 63.4454 cv
311.958 71.6103 310.174 80.6372 307.204 88.2583 cv
.0160525 .0600595 .744472 0 cmyk
f
gsave
282.436 77.6646 mo
275.948 77.6645 269.132 77.224 263.228 76.0611 cv
264.331 73.5883 265.904 70.9908 267.616 68.4683 cv
269.93 68.504 273.252 68.7694 274.336 68.8618 cv
272.309 72.626 li
286.433 73.5322 li
286.514 73.4326 li
286.536 73.4048 288.683 70.7593 289.608 69.7076 cv
290.282 69.7705 293.484 70.0656 296.753 70.5452 cv
294.77 73.0506 292.689 75.4317 290.193 77.4605 cv
287.72 77.59 285.107 77.6646 282.436 77.6646 cv
286.209 73.02 mo
273.113 72.1797 li
275.131 68.4336 li
274.756 68.3999 li
274.709 68.3956 270.711 68.0279 267.944 67.9873 cv
268.99 66.4669 270.078 64.9782 271.136 63.5662 cv
272.445 63.6534 273.752 63.7596 275.059 63.8848 cv
275.155 64.1001 275.249 64.3155 275.342 64.5312 cv
275.493 64.3422 275.642 64.1505 275.788 63.9568 cv
277.381 64.1183 278.97 64.3078 280.557 64.5256 cv
280.415 64.8141 280.267 65.1065 280.111 65.4048 cv
280.594 65.4214 281.077 65.4428 281.561 65.469 cv
280.431 67.0813 279.415 68.8404 278.709 70.479 cv
280.079 70.6939 283.312 70.7559 283.312 70.7559 cv
283.327 70.7447 li
283.327 70.7447 li
285.238 69.3171 286.575 67.8919 287.909 66.1061 cv
291.435 66.6313 294.92 67.4531 298.24 68.6309 cv
297.86 69.1278 297.479 69.622 297.094 70.1123 cv
293.315 69.5494 289.584 69.2067 289.528 69.2017 cv
289.403 69.1905 li
289.32 69.2837 li
288.535 70.1646 286.625 72.5082 286.209 73.02 cv
clp
263.228 63.5662 mo
298.24 63.5662 li
298.24 77.6646 li
263.228 77.6646 li
cp
level3{
gsave
clp
[33.1461 -18.0624 18.0624 33.1461 262.673 79.5922 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%
!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%
!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%
!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%!ru@%
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!ru@%!ruF'!ruI(!ruO*!s)X,!ruU,!ruX-!rua0!s)p4!s)s5!s*!6!s3-9!s33;!s*0;!s3??!s3B@
!s3HB!s3KC!s<TE!s<WF!s<`I!sElL!sEoM!s<oN!s<uP!sF,S!sF/T"9a>W!sOAY"9jS]"9jY_"9shc
"9skd"9sqf"9jnf":(+j":(.k":(1l":1=o":1Cq":1Fr"ULRt"::Y""::\#"UUn'":Cq)":Ct*"U_+,
":M+-":M.."Uh:0"UhC3":VF5":VL7":VO8":_[;":_^<":_a=":_d>":hm@":hsB":i!C":r-F":r3H
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.0391061 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[33.1461 -18.0624 18.0624 33.1461 262.673 79.5922 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W."9\i1"9\i0!s8Z/"9\i1"9\f/!s8Z/
"9\i1"9\f/!s8Z/"9\i1"9\i1"9\f/!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
~>
<~zzzzzzzzzzzz!!!$#!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<N<(!WiE)!WiE)!WrN,!s8W-!s8W-!Wi
E)!s8W-!s8W-!s8W-"9\i1"9\i1"9\i1"U,&5"U,&5"U,&5"U,&5"U5/8"pP89"pP8:#6tJ=#6tJ=#6t
J=#6tJ>#RC\A#RC\A#RC_C#mgnE#mgnE#mgqG$47+I$47+I$47+I$47.K$O[=M$O[=M$OdFP$k*OQ$k*
OQ$k*OQ$k3XT%1NaU%1NaU%1WjX%LrsY~>
<~<E3%!<E3%!<E3%"='&L+=BJ^/>$>-7>?b?;>[1Q??!UcD?XR;O@q0%[A7T7_AS#IcB4tsmBkhBtC27U$
D/O6/DJsH4E,fl;EH6)?EcZ;CF*)PJG'A.TG^4R[H?spbI!g?jIXZcrJ:N0#JUrE)K7ei1KnbA<LkpnE
MMmFPNK&pXNfT6_OH>QdOcklkPEV2pPa%DtQ'R`&Q^F/.R@0J3R[T\7S=Q4BSt;RHTV8*SUSFW\Unji`
V5:&dVP^8hVl-JlW2Q\qX/i>'Xf\b/YHY78Yd(I=ZEpmDZa@*H['d<L[C3NP[^W`U\@K/\\[oAa]=bei
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
grestore
272.9 60.2988 mo
272.034 61.2138 271.212 62.1689 270.414 63.1435 cv
270.414 63.269 270.408 63.3965 270.413 63.5201 cv
282.224 64.2426 293.939 66.52 305.161 70.2744 cv
307.835 68.4199 310.295 66.2944 312.414 63.8452 cv
312.423 63.7129 312.438 63.5771 312.445 63.4454 cv
299.626 59.9956 286.122 59.0962 272.9 60.2988 cv
.0614023 .247898 .95169 0 cmyk
f
285.145 96.2275 mo
292.466 94.4825 300.22 91.9555 307.204 88.2583 cv
310.174 80.6372 311.958 71.6103 312.445 63.4454 cv
312.33 63.414 312.213 63.3867 312.097 63.3559 cv
305.798 69.1162 298.942 74.2666 291.645 78.6933 cv
290.294 84.8603 288.078 90.6694 285.136 96.228 cv
285.145 96.2275 li
.199557 .566888 .97763 .0466621 cmyk
f
262.185 77 mo
262.171 77.0327 li
264.677 83.7739 268.19 90.4712 273.041 95.7817 cv
277.029 96.4272 281.146 96.3472 285.146 96.2275 cv
285.351 96.1763 li
288.472 90.6138 290.816 84.5728 292.346 78.4043 cv
282.275 78.6597 272.188 78.1851 262.185 77 cv
cp
.0614023 .247898 .95169 0 cmyk
f
289.528 69.2017 mo
289.403 69.1905 li
289.32 69.2837 li
288.535 70.1646 286.625 72.5082 286.209 73.02 cv
273.113 72.1797 li
275.131 68.4336 li
274.756 68.3999 li
274.702 68.395 269.501 67.9165 266.858 67.9917 cv
266.552 68.4717 li
268.754 68.4102 273.07 68.7539 274.336 68.8618 cv
272.309 72.626 li
286.433 73.5322 li
286.514 73.4326 li
286.536 73.4048 288.683 70.7593 289.608 69.7076 cv
290.684 69.8081 298.205 70.5005 302.157 71.5908 cv
302.681 71.1963 li
298.407 70.0171 289.614 69.2095 289.528 69.2017 cv
.199557 .566888 .97763 .0466621 cmyk
f
291.563 88.1582 mo
290.892 90.7803 289.765 93.2847 288.244 95.5234 cv
289.273 96.6597 290.625 97.5396 292.04 98.1279 cv
292.212 98.0967 li
294.244 95.7813 295.687 93.0493 296.465 90.0664 cv
294.958 89.1519 293.289 88.5156 291.563 88.1582 cv
cp
.0614023 .247898 .95169 0 cmyk
f
300.145 86.0234 mo
297.342 86.8623 294.452 87.6621 291.567 88.1421 cv
291.563 88.1582 li
293.289 88.5156 294.958 89.1519 296.465 90.0664 cv
296.45 90.1172 li
299.321 89.6221 302.107 88.6577 304.673 87.2769 cv
303.31 86.4399 301.718 86.146 300.145 86.0234 cv
cp
.0160525 .0600595 .744472 0 cmyk
f
296.45 90.1172 mo
295.669 93.0801 294.232 95.7944 292.212 98.0967 cv
295.468 97.5527 298.565 96.5361 300.793 95.4546 cv
302.771 93.1641 304.172 90.2905 304.76 87.3218 cv
304.673 87.2769 li
302.107 88.6577 299.321 89.6221 296.45 90.1172 cv
cp
.199557 .566888 .97763 .0466621 cmyk
f
291.243 92.1113 mo
291.141 92.3477 291.033 92.5815 290.923 92.8145 cv
291.268 93.0044 291.619 93.1938 291.974 93.3838 cv
292.536 93.6846 293.104 93.998 293.666 94.3208 cv
293.79 94.1016 293.914 93.8818 294.029 93.6577 cv
293.132 93.082 292.174 92.5728 291.243 92.1113 cv
cp
291.807 90.707 mo
291.72 90.9473 291.623 91.1841 291.528 91.4214 cv
292.464 91.8848 293.433 92.394 294.351 92.9766 cv
294.456 92.749 294.575 92.5288 294.672 92.2964 cv
293.858 91.7188 292.897 91.188 291.807 90.707 cv
cp
294.937 91.562 mo
295.061 91.2241 295.194 90.8911 295.3 90.5444 cv
294.35 90.0366 293.334 89.6357 292.264 89.3457 cv
292.198 89.5664 292.116 89.7803 292.045 89.9985 cv
293.138 90.4756 294.105 90.9902 294.937 91.562 cv
cp
292.231 96.1108 mo
291.436 95.6973 290.62 95.2725 289.86 94.8047 cv
289.744 95.0005 289.638 95.2012 289.517 95.3945 cv
290.185 96.0049 290.982 96.5371 291.871 96.9648 cv
292.069 96.7227 292.242 96.4653 292.428 96.2153 cv
292.231 96.1108 li
cp
293.283 94.96 mo
293.148 95.1772 293.021 95.3984 292.876 95.6104 cv
292.774 95.5576 292.677 95.5029 292.574 95.4502 cv
291.786 95.0405 290.979 94.6201 290.236 94.1621 cv
290.36 93.938 290.476 93.71 290.592 93.4824 cv
290.93 93.6685 291.274 93.854 291.622 94.04 cv
292.176 94.3364 292.733 94.644 293.283 94.96 cv
cp
.68069 .454383 .523583 .190829 cmyk
f
291.014 79.6802 mo
290.956 79.5513 290.86 79.46 290.751 79.3901 cv
290.559 79.0977 290.214 79.2017 289.972 79.4375 cv
289.896 79.4878 li
289.846 79.5884 li
289.777 79.6997 li
289.774 79.7031 li
289.599 80.0474 289.759 80.5635 290.166 80.6133 cv
290.349 80.6851 li
290.884 80.7388 291.219 80.1328 291.014 79.6802 cv
cp
f
264.209 78.0376 mo
263.944 77.8701 263.551 77.9844 263.495 78.3032 cv
263.448 78.4033 263.422 78.5127 263.445 78.6265 cv
263.517 78.9741 264.005 79.3096 264.327 79.0459 cv
264.632 78.7964 264.513 78.2295 264.209 78.0376 cv
cp
f
273.412 94.2456 mo
273.226 94.3696 li
273.145 94.417 li
272.682 94.8267 273.351 95.4595 273.807 95.1235 cv
274.24 94.8042 273.956 94.0796 273.412 94.2456 cv
cp
f
284.328 94.7729 mo
284.142 94.897 li
284.061 94.9443 li
283.598 95.354 284.267 95.9868 284.724 95.6509 cv
285.156 95.3315 284.872 94.6069 284.328 94.7729 cv
cp
f
286.612 93.8091 mo
286.988 93.0723 287.351 92.3276 287.7 91.5771 cv
283.989 87.1182 279.931 82.8984 275.405 79.2749 cv
272.346 81.8726 269.696 84.9487 267.567 88.3511 cv
268.048 89.1455 268.547 89.9248 269.066 90.6904 cv
270.863 88.5039 273.047 86.6484 275.413 85.0854 cv
279.163 87.9541 282.866 90.9316 286.612 93.8091 cv
cp
.160586 .877501 .751583 .0439765 cmyk
f
311.522 71.8105 mo
310.396 71.164 309.175 70.6411 307.952 70.1909 cv
306.327 71.9087 305.23 74.1269 304.891 76.4687 cv
304.736 77.5323 304.741 78.6152 304.889 79.6792 cv
306.027 80.1577 307.245 80.4458 308.479 80.5083 cv
309.027 77.4121 310.027 74.5767 311.522 71.8105 cv
.410468 .223423 .288701 0 cmyk
f
313.51 71.3433 mo
311.929 70.6807 310.464 69.9644 308.884 69.3013 cv
308.554 69.5777 308.248 69.8789 307.952 70.1909 cv
309.175 70.6411 310.396 71.164 311.522 71.8105 cv
310.027 74.5767 309.027 77.4121 308.479 80.5083 cv
307.245 80.4458 306.027 80.1577 304.889 79.6792 cv
305.125 81.3848 305.733 83.039 306.684 84.4751 cv
307.444 84.4634 308.548 84.166 309.309 84.1542 cv
313.434 81.6636 315.009 76.8135 313.51 71.3433 cv
.68069 .454383 .523583 .190829 cmyk
f
313.056 71.9008 mo
313.729 74.0151 313.721 76.3413 313.033 78.4512 cv
312.345 80.5611 310.98 82.4438 309.188 83.7544 cv
309.029 80.5288 309.511 77.1812 310.745 74.1962 cv
311.141 73.2397 312.043 72.1157 313.056 71.9008 cv
.907713 .796078 .509636 .614374 cmyk
f
308.753 76.833 mo
307.6 76.7041 306.471 76.4858 305.374 76.1054 cv
305.461 74.3887 306.194 72.7119 307.396 71.4825 cv
308.495 71.8496 309.505 72.102 310.604 72.4688 cv
309.97 73.9248 309.388 75.3769 308.753 76.833 cv
level3{
gsave
clp
[-.443638 8.46081 -8.46081 -.443638 308.186 70.5412 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.443638 8.46081 -8.46081 -.443638 308.186 70.5412 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
310.486 62.9395 mo
309.345 64.6147 307.75 66.2974 305.934 67.9834 cv
300.04 66.855 li
304.381 61.7168 li
310.486 62.9395 li
cp
.199557 .566888 .97763 .0466621 cmyk
f
322.837 32.0024 mo
318.568 35.7349 314.236 39.4512 309.968 43.1841 cv
309.209 42.2549 308.575 41.48 307.817 40.5513 cv
304.8 43.4717 301.805 46.4146 298.838 49.3867 cv
302.223 54.7139 304.469 60.7842 305.396 67.0332 cv
308.961 63.4512 311.964 59.0967 313.909 54.438 cv
313.539 52.708 313.043 50.9038 312.672 49.1738 cv
315.022 45.8926 317.726 43.0571 320.978 40.666 cv
321.906 40.5913 322.665 40.5044 323.594 40.4302 cv
325.241 38.833 326.873 37.1807 328.493 35.5093 cv
327.075 33.6992 325.101 32.4248 322.837 32.0024 cv
cp
.264317 .900908 .795804 .209659 cmyk
f
305.748 40.2349 mo
302.569 43.1729 299.431 46.1357 296.341 49.1069 cv
297.123 49.1172 297.905 49.1284 298.688 49.1392 cv
298.838 49.3867 li
301.805 46.4146 304.8 43.4717 307.817 40.5513 cv
307.813 40.5474 li
307.145 40.3745 306.438 40.2808 305.748 40.2349 cv
cp
.160586 .877501 .751583 .0439765 cmyk
f
296.341 49.1069 mo
296.329 49.1177 li
296.195 55.2095 297.476 61.3276 300.04 66.855 cv
301.729 67.1904 303.493 67.3076 305.214 67.2222 cv
305.396 67.0332 li
304.454 60.6885 302.159 54.5244 298.688 49.1392 cv
297.905 49.1284 297.123 49.1172 296.341 49.1069 cv
cp
f
303.767 63.7871 mo
299.743 63.5229 li
299.857 63.833 299.973 64.1426 300.095 64.4492 cv
303.967 64.7251 li
303.902 64.4121 303.838 64.0991 303.767 63.7871 cv
cp
303.642 63.2813 mo
303.566 62.9673 303.492 62.6523 303.409 62.3394 cv
299.237 62.0894 li
299.338 62.3999 299.453 62.7051 299.562 63.0132 cv
303.642 63.2813 li
cp
299.044 51.6538 mo
298.75 51.1387 298.452 50.6255 298.138 50.124 cv
297.313 50.1133 li
297.314 50.6191 297.337 51.125 297.358 51.6309 cv
299.044 51.6538 li
cp
302.842 60.3823 mo
302.742 60.0645 302.639 59.7485 302.532 59.4331 cv
298.44 59.2368 li
298.515 59.5435 298.582 59.8516 298.664 60.1563 cv
302.842 60.3823 li
cp
300.309 64.9629 mo
300.448 65.2998 300.58 65.6396 300.729 65.9722 cv
301.83 66.1611 302.971 66.2559 304.129 66.2559 cv
304.267 66.2554 li
304.208 65.9121 304.133 65.5723 304.066 65.23 cv
300.309 64.9629 li
cp
303.275 61.834 mo
303.188 61.5166 303.088 61.2031 302.993 60.8877 cv
298.812 60.6611 li
298.898 60.9697 298.991 61.2764 299.086 61.583 cv
303.275 61.834 li
cp
300.556 54.5591 mo
300.404 54.2402 300.254 53.9219 300.095 53.6074 cv
297.489 53.5522 li
297.518 53.8599 297.545 54.168 297.581 54.4751 cv
300.556 54.5591 li
cp
297.448 53.0547 mo
299.83 53.105 li
299.664 52.7871 299.502 52.4673 299.329 52.1543 cv
297.373 52.1279 li
297.391 52.4375 297.424 52.7456 297.448 53.0547 cv
cp
301.818 57.4717 mo
301.694 57.1523 301.563 56.8359 301.431 56.5195 cv
297.85 56.394 li
297.901 56.7017 297.965 57.0073 298.023 57.3135 cv
301.818 57.4717 li
cp
302.354 58.9282 mo
302.242 58.6113 302.138 58.2915 302.019 57.9775 cv
298.117 57.8149 li
298.181 58.1226 298.248 58.4282 298.318 58.7344 cv
302.354 58.9282 li
cp
297.772 55.8945 mo
297.726 55.5884 297.688 55.2808 297.648 54.9736 cv
300.79 55.0625 li
300.937 55.3799 301.086 55.6943 301.225 56.0156 cv
297.772 55.8945 li
cp
.85919 .688991 .469245 .380224 cmyk
f
311.442 55.0293 mo
311.413 55.4116 311.69 55.8433 312.073 55.8267 cv
312.379 55.8135 312.604 55.54 312.758 55.2759 cv
312.907 55.021 313.035 54.7417 313.04 54.4458 cv
313.046 54.1504 312.903 53.8369 312.636 53.7124 cv
312.013 53.4224 311.478 54.5615 311.442 55.0293 cv
cp
f
301.739 49.9204 mo
301.946 49.6777 302.124 49.3877 302.137 49.0688 cv
302.185 47.918 300.749 48.4072 300.413 49.0728 cv
300.248 49.397 300.327 49.8481 300.567 50.1216 cv
300.939 50.5435 301.438 50.2725 301.739 49.9204 cv
cp
f
306.145 63.9702 mo
306.269 64.0156 306.41 63.9829 306.523 63.915 cv
306.636 63.8472 306.726 63.748 306.813 63.6499 cv
306.978 63.4678 307.145 63.2808 307.241 63.0552 cv
307.338 62.8296 307.353 62.5547 307.218 62.3496 cv
306.466 61.2036 305.147 63.603 306.145 63.9702 cv
cp
f
333.65 16.7109 mo
324.851 24.4497 316.237 32.4009 307.817 40.5513 cv
308.575 41.48 309.209 42.2549 309.968 43.1841 cv
314.236 39.4512 318.568 35.7349 322.837 32.0024 cv
325.101 32.4248 327.075 33.6992 328.493 35.5093 cv
331.666 32.2354 334.772 28.8569 337.712 25.4585 cv
336.945 22.3789 335.437 19.3467 333.65 16.7109 cv
cp
.199557 .566888 .97763 .0466621 cmyk
f
333.502 16.4858 mo
323.976 23.897 314.696 31.9624 305.748 40.2349 cv
306.438 40.2808 307.145 40.3745 307.813 40.5474 cv
307.817 40.5513 li
316.237 32.4009 324.851 24.4497 333.65 16.7109 cv
333.502 16.4858 li
cp
.0614023 .247898 .95169 0 cmyk
f
283.694 33.0796 mo
280.478 36.4306 277.196 39.7675 273.98 43.1187 cv
273.022 42.2847 272.224 41.5889 271.267 40.7549 cv
269.062 43.3769 266.883 46.0195 264.739 48.6879 cv
269.296 53.4707 272.934 58.9204 275.342 64.5312 cv
277.916 61.3155 279.76 57.4058 280.51 53.2227 cv
279.733 51.6699 278.817 50.0498 278.04 48.4966 cv
279.515 45.5503 281.437 43.0048 283.997 40.8579 cv
284.875 40.791 285.587 40.7129 286.465 40.646 cv
287.668 39.2124 288.844 37.729 290.002 36.228 cv
288.195 34.603 285.98 33.459 283.694 33.0796 cv
.264317 .900908 .795804 .209659 cmyk
f
269.192 40.4712 mo
266.837 43.1089 264.524 45.769 262.262 48.4365 cv
263.02 48.4458 263.776 48.4556 264.534 48.4653 cv
264.739 48.688 li
266.883 46.0195 269.062 43.377 271.267 40.7549 cv
271.263 40.7515 li
270.574 40.5962 269.871 40.5122 269.192 40.4712 cv
cp
.160586 .877501 .751583 .0439765 cmyk
f
262.262 48.4365 mo
262.253 48.4463 li
263.599 53.9155 266.315 59.4087 270.129 64.3711 cv
271.841 64.6729 273.571 64.7773 275.212 64.7012 cv
275.342 64.5313 li
272.896 58.8345 269.189 53.3003 264.534 48.4653 cv
263.776 48.4556 263.02 48.4458 262.262 48.4365 cv
cp
f
272.983 61.6172 mo
269.036 61.3799 li
269.222 61.6582 269.407 61.936 269.6 62.2114 cv
273.404 62.459 li
273.266 62.1777 273.128 61.897 272.983 61.6172 cv
cp
272.74 61.1631 mo
272.591 60.8809 272.443 60.5981 272.288 60.3174 cv
268.2 60.0923 li
268.373 60.3716 268.559 60.6455 268.737 60.9219 cv
272.74 61.1631 li
cp
265.487 50.7231 mo
265.078 50.2607 264.667 49.7998 264.242 49.3501 cv
263.443 49.3398 li
263.567 49.7944 263.712 50.2485 263.854 50.7026 cv
265.487 50.7231 li
cp
271.267 58.5601 mo
271.093 58.2749 270.917 57.9912 270.737 57.708 cv
266.741 57.5317 li
266.887 57.8066 267.026 58.0835 267.179 58.3569 cv
271.267 58.5601 li
cp
269.931 62.6724 mo
270.146 62.9746 270.356 63.2803 270.581 63.5791 cv
271.688 63.748 272.813 63.8335 273.931 63.8335 cv
274.063 63.833 li
273.924 63.5249 273.769 63.2192 273.621 62.9126 cv
269.931 62.6724 li
cp
272.037 59.8638 mo
271.875 59.5786 271.702 59.2969 271.534 59.0137 cv
267.443 58.8101 li
267.603 59.0874 267.767 59.3628 267.932 59.6377 cv
272.037 59.8638 li
cp
267.649 53.3315 mo
267.426 53.0454 267.204 52.7593 266.975 52.4771 cv
264.446 52.4277 li
264.549 52.7041 264.649 52.9805 264.758 53.2563 cv
267.649 53.3315 li
cp
264.286 51.981 mo
266.597 52.0259 li
266.36 51.7407 266.126 51.4536 265.884 51.1729 cv
263.989 51.1489 li
264.081 51.4268 264.188 51.7036 264.286 51.981 cv
cp
269.574 55.9468 mo
269.376 55.6602 269.173 55.376 268.969 55.0918 cv
265.482 54.9795 li
265.606 55.2554 265.741 55.5298 265.872 55.8047 cv
269.574 55.9468 li
cp
270.443 57.2544 mo
270.259 56.9697 270.08 56.6831 269.89 56.4009 cv
266.085 56.2549 li
266.22 56.5308 266.359 56.8057 266.502 57.0806 cv
270.443 57.2544 li
cp
265.287 54.5308 mo
265.167 54.2559 265.057 53.9795 264.943 53.7041 cv
267.998 53.7837 li
268.216 54.0684 268.437 54.3511 268.648 54.6392 cv
265.287 54.5308 li
cp
.85919 .688991 .469245 .380224 cmyk
f
278.271 53.7539 mo
278.335 54.0972 278.708 54.4849 279.073 54.4697 cv
279.365 54.458 279.516 54.2124 279.601 53.9756 cv
279.684 53.7466 279.738 53.4956 279.672 53.23 cv
279.606 52.9648 279.393 52.6831 279.104 52.5713 cv
278.433 52.3111 278.192 53.3339 278.271 53.7539 cv
f
267.669 49.167 mo
267.811 48.9487 267.911 48.6885 267.847 48.4023 cv
267.613 47.3691 266.348 47.8086 266.184 48.4058 cv
266.104 48.6973 266.289 49.1021 266.587 49.3477 cv
267.048 49.7261 267.463 49.4829 267.669 49.167 cv
cp
f
275.323 61.7813 mo
275.453 61.8223 275.582 61.793 275.675 61.7319 cv
275.768 61.6709 275.83 61.5815 275.892 61.4937 cv
276.005 61.3301 276.121 61.1621 276.159 60.96 cv
276.198 60.7573 276.146 60.5103 275.967 60.3262 cv
274.963 59.2974 274.271 61.4517 275.323 61.7813 cv
cp
f
290.429 19.3506 mo
283.809 26.2983 277.421 33.4375 271.267 40.7549 cv
272.224 41.5889 273.022 42.2847 273.979 43.1187 cv
277.196 39.7676 280.478 36.4307 283.694 33.0796 cv
285.98 33.459 288.195 34.603 290.002 36.228 cv
292.272 33.2886 294.452 30.2554 296.467 27.2041 cv
294.98 24.4395 292.791 21.7168 290.429 19.3506 cv
cp
.199557 .566888 .97763 .0466621 cmyk
f
290.23 19.1484 mo
282.83 25.8022 275.827 33.0435 269.192 40.4712 cv
269.871 40.5122 270.574 40.5962 271.263 40.7515 cv
271.267 40.7549 li
277.421 33.4375 283.809 26.2983 290.429 19.3506 cv
290.23 19.1484 li
cp
.0614023 .247898 .95169 0 cmyk
f
327.133 96.9648 mo
320.542 64.5977 li
316.972 67.0625 312.865 71.1655 310.486 74.7935 cv
310.872 79.8418 312.189 84.77 314.48 89.2847 cv
316.229 89.9297 317.875 90.7837 319.622 91.4287 cv
323.148 104.139 326.519 116.949 330.045 129.659 cv
332.777 131.371 335.516 132.838 338.429 134.098 cv
332.456 100.693 li
327.133 96.9648 li
cp
352.529 126.688 mo
351.689 128.851 350.531 131.205 348.893 132.847 cv
346.666 97.7783 li
348.998 94.3208 li
343.083 64.3438 li
345.588 65.5547 349.043 67.2578 350.308 68.7515 cv
351.461 74.3364 352.053 77.894 351.973 83.5962 cv
351.449 84.2124 351 84.7378 350.477 85.354 cv
352.666 98.6338 353.244 115.08 352.529 126.688 cv
cp
.907713 .796078 .509636 .614374 cmyk
f
344.176 64.8887 mo
346.498 65.3628 348.674 66.5278 350.354 68.1978 cv
351.563 73.2651 352.22 78.499 352.139 83.7075 cv
350.844 85.0464 349.194 86.0542 347.418 86.6138 cv
346.313 79.4199 345.28 72.0825 344.176 64.8887 cv
cp
.302678 .695705 1 .225376 cmyk
f
348.998 94.3208 mo
344.334 62.5503 li
343.57 58.2969 342.695 54.0269 341.932 49.7734 cv
335.394 48.0342 328.275 48.644 322.073 51.3467 cv
329.71 96.3096 li
334.781 99.5103 li
340.445 134.938 li
340.558 135.477 li
342.269 136.148 344.302 136.468 346.131 136.293 cv
347.26 135.434 348.234 134.727 348.919 133.483 cv
348.893 132.847 li
346.666 97.7783 li
348.998 94.3208 li
cp
.199557 .566888 .97763 .0466621 cmyk
f
338.459 79.0254 mo
348.105 88.2412 li
346.778 79.2007 li
335.854 69.0688 li
327.821 85.1899 li
329.385 94.3926 li
338.459 79.0254 li
cp
.264317 .900908 .795804 .209659 cmyk
f
344.577 64.2104 mo
332.73 53.2227 li
325.021 68.6978 li
326.597 77.9785 li
335.336 63.1792 li
345.909 73.2803 li
344.577 64.2104 li
cp
f
334.781 99.5103 mo
329.71 96.3096 li
322.073 51.3467 li
321.264 52.5396 319.83 54.2495 319.021 55.4424 cv
319.511 58.7881 320.094 61.126 320.542 64.5977 cv
327.133 96.9648 li
332.456 100.693 li
338.429 134.098 li
339.094 134.385 339.759 134.673 340.445 134.938 cv
334.781 99.5103 li
cp
.0614023 .247898 .95169 0 cmyk
f
331.896 130.776 mo
328.476 117.532 325.115 104.139 321.688 90.9116 cv
321.003 91.0972 320.317 91.2827 319.633 91.4683 cv
323.155 104.165 326.521 116.962 330.045 129.659 cv
330.661 130.045 331.277 130.414 331.896 130.776 cv
cp
.68069 .454383 .523583 .190829 cmyk
f
325.666 89.7627 mo
326.061 89.2275 326.105 88.8784 326.138 88.332 cv
321.821 67.0034 li
321.395 66.1196 320.985 65.353 320.461 64.6567 cv
316.91 67.1274 312.848 71.1929 310.486 74.7935 cv
310.872 79.8418 312.189 84.77 314.48 89.2847 cv
316.229 89.9297 317.875 90.7837 319.622 91.4287 cv
321.936 91.187 324.757 90.335 325.666 89.7627 cv
cp
.0614023 .247898 .95169 0 cmyk
f
326.105 88.3071 mo
325.929 82.6099 324.407 71.3711 321.821 67.0034 cv
318.339 69.0112 315.208 71.7632 312.776 74.9644 cv
313.354 79.2085 314.323 83.3999 315.669 87.4663 cv
318.771 89.1152 322.712 89.2153 326.105 88.3071 cv
cp
.199557 .566888 .97763 .0466621 cmyk
f
325.021 53.3032 mo
325.104 53.9829 324.845 54.5337 324.439 54.5337 cv
324.034 54.5337 323.638 53.9829 323.554 53.3032 cv
323.469 52.6235 323.729 52.0723 324.135 52.0723 cv
324.54 52.0723 324.937 52.6235 325.021 53.3032 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
341.699 51.7813 mo
341.783 52.4609 341.522 53.0117 341.117 53.0117 cv
340.712 53.0117 340.315 52.4609 340.231 51.7813 cv
340.147 51.1016 340.407 50.5508 340.813 50.5508 cv
341.218 50.5508 341.615 51.1016 341.699 51.7813 cv
cp
f
328.902 75.7515 mo
328.986 76.4312 328.726 76.9819 328.32 76.9819 cv
327.915 76.9819 327.519 76.4312 327.435 75.7515 cv
327.351 75.0718 327.61 74.5205 328.016 74.5205 cv
328.421 74.5205 328.818 75.0718 328.902 75.7515 cv
cp
f
331.777 94.8047 mo
331.861 95.4844 331.601 96.0352 331.195 96.0352 cv
330.79 96.0352 330.394 95.4844 330.31 94.8047 cv
330.226 94.125 330.485 93.5742 330.891 93.5742 cv
331.296 93.5742 331.693 94.125 331.777 94.8047 cv
cp
f
346.222 134.415 mo
346.217 135.025 345.923 135.481 345.565 135.434 cv
345.208 135.387 344.921 134.854 344.926 134.245 cv
344.931 133.635 345.225 133.178 345.582 133.226 cv
345.94 133.272 346.227 133.805 346.222 134.415 cv
cp
f
315.093 75.7256 mo
315.191 76.3276 314.979 76.8271 314.618 76.8413 cv
314.258 76.8555 313.885 76.3789 313.786 75.7769 cv
313.688 75.1753 313.9 74.6758 314.261 74.6616 cv
314.622 74.6475 314.994 75.1235 315.093 75.7256 cv
cp
f
317.279 85.9976 mo
317.378 86.5996 317.165 87.0991 316.805 87.1133 cv
316.444 87.1274 316.071 86.6509 315.973 86.0493 cv
315.874 85.4473 316.087 84.9478 316.447 84.9336 cv
316.809 84.9194 317.181 85.396 317.279 85.9976 cv
cp
f
325.111 86.5884 mo
325.21 87.1899 324.997 87.6895 324.637 87.7036 cv
324.275 87.7178 323.903 87.2417 323.805 86.6396 cv
323.706 86.0376 323.919 85.5381 324.279 85.5239 cv
324.64 85.5098 325.013 85.9863 325.111 86.5884 cv
cp
f
322.19 69.7651 mo
322.289 70.3672 322.077 70.8667 321.717 70.8809 cv
321.355 70.895 320.983 70.4185 320.885 69.8164 cv
320.786 69.2148 320.998 68.7153 321.359 68.7012 cv
321.72 68.687 322.092 69.1631 322.19 69.7651 cv
cp
f
349.99 69.2793 mo
350.075 69.7988 349.892 70.2295 349.58 70.2417 cv
349.27 70.2539 348.948 69.8428 348.863 69.3237 cv
348.777 68.8042 348.961 68.373 349.272 68.3608 cv
349.583 68.3486 349.904 68.7598 349.99 69.2793 cv
cp
.907713 .796078 .509636 .614374 cmyk
f
351.628 82.6206 mo
351.595 83.146 351.319 83.5244 351.013 83.4663 cv
350.707 83.4087 350.486 82.9355 350.521 82.4106 cv
350.554 81.8853 350.829 81.5063 351.136 81.5645 cv
351.441 81.6226 351.662 82.0952 351.628 82.6206 cv
cp
f
348.101 92.9766 mo
348.185 93.6563 347.924 94.207 347.519 94.207 cv
347.113 94.207 346.717 93.6563 346.633 92.9766 cv
346.549 92.2969 346.809 91.7456 347.214 91.7456 cv
347.619 91.7456 348.017 92.2969 348.101 92.9766 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
345.312 72.8125 mo
345.396 73.4922 345.135 74.043 344.729 74.043 cv
344.324 74.043 343.928 73.4922 343.844 72.8125 cv
343.76 72.1328 344.021 71.5815 344.426 71.5815 cv
344.831 71.5815 345.228 72.1328 345.312 72.8125 cv
cp
f
268.64 106.588 mo
272.717 108.373 276.826 110.761 280.237 113.62 cv
279.059 120.788 276.148 127.646 271.848 133.5 cv
264.57 135.543 256.647 135.21 249.566 132.562 cv
253.572 122.614 260.493 113.563 268.64 106.588 cv
.0614023 .247898 .95169 0 cmyk
f
275.316 123.78 mo
273.589 122.549 271.685 121.678 269.689 120.957 cv
269.438 121.196 269.415 121.499 269.378 121.844 cv
271.145 122.798 272.912 123.752 274.68 124.706 cv
274.902 124.377 275.093 124.108 275.316 123.78 cv
276.445 120.894 mo
274.876 119.776 273.147 118.985 271.336 118.331 cv
271.108 118.548 271.087 118.823 271.054 119.136 cv
272.658 120.002 274.263 120.869 275.867 121.735 cv
276.069 121.437 276.242 121.192 276.445 120.894 cv
272.676 127.831 mo
271.071 126.965 269.467 126.099 267.862 125.233 cv
267.895 124.92 267.917 124.645 268.145 124.428 cv
269.956 125.083 271.685 125.873 273.254 126.991 cv
273.051 127.289 272.878 127.534 272.676 127.831 cv
.68069 .454383 .523583 .190829 cmyk
f
258.294 171.76 mo
260.926 169.37 263.02 166.396 264.402 163.121 cv
264.394 163.1 li
263.118 162.313 261.693 161.769 260.218 161.506 cv
257.931 165.523 254.535 168.922 250.438 171.064 cv
251.997 172.129 253.71 172.967 255.514 173.524 cv
256.551 173.157 257.479 172.5 258.294 171.76 cv
cp
.0614023 .247898 .95169 0 cmyk
f
258.294 171.76 mo
257.479 172.5 256.551 173.157 255.514 173.524 cv
253.71 172.967 251.997 172.129 250.438 171.064 cv
250.421 171.075 li
250.387 172.063 250.423 172.984 251.088 173.716 cv
252.222 174.56 254.276 175.28 256.119 175.605 cv
259.407 173.05 262.253 169.923 264.073 166.178 cv
264.291 165.728 264.77 164.641 264.77 164.641 cv
264.77 164.641 264.62 163.579 264.402 163.121 cv
263.02 166.396 260.926 169.37 258.294 171.76 cv
cp
.199557 .566888 .97763 .0466621 cmyk
f
272.757 165.071 mo
271.83 169.171 270.576 173.198 268.985 177.089 cv
266.586 177.139 264.179 176.569 261.964 175.613 cv
262.131 176.352 262.367 177.103 262.719 177.772 cv
265.05 178.656 267.585 178.927 270.061 178.636 cv
271.998 174.813 273.473 170.751 274.146 166.52 cv
273.797 165.982 273.258 165.489 272.757 165.071 cv
cp
f
272.757 165.071 mo
272.655 164.985 li
271.005 164.855 269.38 164.601 267.802 164.1 cv
266.798 168.306 264.77 172.264 261.942 175.535 cv
261.964 175.613 li
264.179 176.569 266.586 177.139 268.985 177.089 cv
270.576 173.198 271.83 169.171 272.757 165.071 cv
cp
.0614023 .247898 .95169 0 cmyk
f
293.803 171.87 mo
295.211 171.025 296.405 169.923 297.433 168.67 cv
294.23 167.27 291.282 165.162 288.787 162.717 cv
288.163 163.649 287.479 164.533 286.692 165.32 cv
288.531 168.001 290.977 170.264 293.803 171.87 cv
cp
.199557 .566888 .97763 .0466621 cmyk
f
297.433 168.67 mo
296.405 169.923 295.211 171.025 293.803 171.87 cv
290.977 170.264 288.531 168.001 286.692 165.32 cv
286.405 165.607 286.107 165.882 285.791 166.14 cv
287.589 169.422 290.454 172.108 293.846 173.692 cv
295.389 172.923 297 171.892 297.703 170.318 cv
297.627 169.783 297.612 169.253 297.535 168.718 cv
297.433 168.67 li
cp
.302678 .695705 1 .225376 cmyk
f
320.752 122.558 mo
318.111 115.377 313.833 108.087 308.69 102.423 cv
306.528 103.121 304.46 104.057 302.516 105.206 cv
304.065 115.285 306.529 125.222 309.856 134.861 cv
309.961 134.863 310.063 134.874 310.169 134.874 cv
314.331 131.324 317.934 127.247 320.752 122.558 cv
.199557 .566888 .97763 .0466621 cmyk
f
297.051 109.311 mo
296.226 116.438 296.619 123.705 298.21 130.702 cv
301.562 133.393 305.571 134.794 309.856 134.861 cv
306.529 125.222 304.065 115.285 302.516 105.206 cv
300.555 106.366 298.722 107.742 297.051 109.311 cv
.0614023 .247898 .95169 0 cmyk
f
307.548 133.491 mo
304.565 133.001 301.69 131.886 299.112 130.308 cv
297.159 123.836 296.682 116.924 297.725 110.246 cv
298.979 108.955 300.51 107.897 302.191 107.258 cv
303.909 115.987 305.83 124.762 307.548 133.491 cv
level3{
gsave
clp
[19.6468 21.1256 -21.1256 19.6468 289.791 107.104 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[19.6468 21.1256 -21.1256 19.6468 289.791 107.104 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
315.468 136.565 mo
317.289 135.858 318.798 134.472 319.87 132.838 cv
320.735 131.521 321.325 130.047 321.757 128.528 cv
321.711 128.475 li
321.229 128.621 320.889 128.822 320.407 128.968 cv
319.4 131.743 317.239 134.079 314.551 135.299 cv
311.862 136.519 309.663 135.95 306.912 134.879 cv
306.786 135.246 306.608 135.649 306.482 136.016 cv
306.506 136.029 li
307.882 136.496 309.285 136.897 310.728 137.065 cv
312.321 137.25 313.972 137.146 315.468 136.565 cv
cp
.0614023 .247898 .95169 0 cmyk
f
327.982 135.704 mo
325.936 133.294 323.805 130.937 321.757 128.528 cv
321.325 130.047 320.735 131.521 319.87 132.838 cv
318.798 134.472 317.289 135.858 315.468 136.565 cv
313.972 137.146 312.321 137.25 310.728 137.065 cv
309.285 136.897 307.882 136.496 306.506 136.029 cv
309.65 137.753 312.733 139.464 315.482 141.768 cv
316.731 142.814 318.254 143.852 319.299 145.103 cv
321.688 145.063 324.044 144.007 325.665 142.252 cv
327.287 140.497 328.132 138.089 327.982 135.704 cv
cp
.199557 .566888 .97763 .0466621 cmyk
f
314.55 113.928 mo
313.61 114.515 312.583 114.961 311.514 115.249 cv
311.559 115.484 311.613 115.657 311.799 115.809 cv
312.903 115.732 313.931 115.394 314.819 114.734 cv
314.822 114.436 314.804 114.083 314.55 113.928 cv
cp
313.827 112.531 mo
312.888 113.117 311.86 113.564 310.791 113.852 cv
310.836 114.087 310.891 114.259 311.076 114.411 cv
312.181 114.335 313.208 113.997 314.097 113.336 cv
314.1 113.038 314.081 112.686 313.827 112.531 cv
cp
313.518 111.841 mo
312.629 112.501 311.602 112.84 310.497 112.916 cv
310.312 112.765 310.256 112.592 310.212 112.356 cv
311.281 112.069 312.308 111.623 313.247 111.036 cv
313.502 111.191 313.52 111.543 313.518 111.841 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
300.261 120.788 mo
300.21 120.557 300.152 120.301 300.102 120.069 cv
299.341 120.297 298.624 120.583 297.863 120.811 cv
297.774 121.143 297.781 121.5 297.883 121.828 cv
298.675 121.613 299.55 121.199 300.261 120.788 cv
cp
299.89 119.118 mo
299.844 118.907 299.791 118.672 299.744 118.46 cv
299.049 118.669 298.394 118.931 297.697 119.139 cv
297.617 119.443 297.623 119.769 297.716 120.069 cv
298.439 119.873 299.24 119.494 299.89 119.118 cv
cp
297.556 118.46 mo
297.463 118.161 297.457 117.834 297.538 117.531 cv
298.233 117.323 298.889 117.061 299.584 116.853 cv
299.631 117.064 299.684 117.298 299.729 117.51 cv
299.08 117.885 298.279 118.265 297.556 118.46 cv
cp
.68069 .454383 .523583 .190829 cmyk
f
284.468 59.6997 mo
287.133 58.0937 290.159 57.0913 293.256 56.7895 cv
293.154 57.4502 292.725 58.124 292.237 58.5816 cv
291.75 59.0391 291.161 59.373 290.563 59.6723 cv
289.605 60.1528 288.588 60.559 287.52 60.6504 cv
286.451 60.7417 285.271 60.4096 284.468 59.6997 cv
.85919 .688991 .469245 .380224 cmyk
f
291.091 54.7432 mo
291.665 55.6098 292.239 56.4766 292.814 57.3438 cv
292.653 57.9209 292.174 58.3393 291.687 58.6904 cv
289.817 60.041 287.369 60.5605 285.111 60.0854 cv
285.227 59.4937 285.314 58.9493 285.43 58.3575 cv
287.422 57.5825 289.624 56.2984 291.091 54.7432 cv
f
285.268 54.69 mo
284.693 50.9673 283.13 47.2919 280.775 44.3378 cv
278.729 44.2261 276.714 44.2358 274.814 44.3818 cv
274.198 45.0103 273.794 45.8012 273.452 46.6118 cv
274.297 49.0303 275.894 52.1631 277.394 54.2393 cv
276.757 55.5884 276.291 57.1079 275.959 58.5625 cv
276.523 59.6089 277.167 60.6084 278.023 61.4341 cv
278.042 61.4297 li
280.853 59.6718 283.324 57.375 285.268 54.69 cv
.0614023 .247898 .95169 0 cmyk
f
290.847 45.8291 mo
287.668 45.0439 284.18 44.5234 280.775 44.3379 cv
283.13 47.292 284.693 50.9673 285.268 54.6899 cv
283.324 57.375 280.853 59.6719 278.042 61.4297 cv
280.359 60.9453 282.64 60.2578 284.686 59.0664 cv
285.446 59.0659 286.255 58.981 287.016 58.9805 cv
289.558 56.8521 291.848 54.2583 293.763 51.5518 cv
293.211 49.4541 292.156 47.5591 290.847 45.8291 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
283.339 54.2646 mo
281.373 53.9101 279.347 53.8994 277.377 54.2325 cv
277.103 53.7149 276.668 53.1577 276.395 52.6401 cv
278.497 52.5107 280.758 52.5796 282.839 52.9053 cv
282.979 53.3423 283.199 53.8276 283.339 54.2646 cv
.68069 .454383 .523583 .190829 cmyk
f
286.762 58.0205 mo
286.145 58.1084 285.558 57.998 284.996 57.7256 cv
285.159 56.6909 285.685 55.7173 286.458 55.0112 cv
287.092 55.0479 287.778 55.0591 288.412 55.0957 cv
288.075 56.1284 287.542 57.2646 286.762 58.0205 cv
cp
f
289.036 49.3657 mo
287.99 48.4326 287.118 47.3037 286.479 46.0557 cv
290.188 43.7192 294.299 42.0918 298.599 41.2388 cv
295.555 43.8276 292.081 46.7769 289.036 49.3657 cv
cp
.0614023 .247898 .95169 0 cmyk
f
283.958 60.4721 mo
283.354 61.5683 282.988 62.6826 282.692 63.8022 cv
284.935 64.9229 287.515 65.2549 289.959 64.6968 cv
290.921 64.4771 291.871 64.0854 292.766 63.5756 cv
292.172 62.3159 291.468 61.1573 290.503 60.1069 cv
288.395 60.7636 286.127 60.8843 283.958 60.4721 cv
.410468 .223423 .288701 0 cmyk
f
296.32 60.5176 mo
295.673 59.0327 294.622 57.747 293.344 56.752 cv
292.28 57.9859 290.876 58.9219 289.328 59.4282 cv
287.78 59.9346 286.031 60.0268 284.444 59.6601 cv
284.261 59.9292 284.108 60.2007 283.958 60.4721 cv
286.127 60.8843 288.395 60.7636 290.503 60.1069 cv
291.468 61.1573 292.172 62.3159 292.766 63.5756 cv
294.144 62.791 295.39 61.7202 296.32 60.5176 cv
.68069 .454383 .523583 .190829 cmyk
f
283.327 70.7447 mo
285.654 69.0059 287.131 67.2709 288.786 64.8833 cv
288.625 64.3105 288.342 63.7866 287.931 63.3603 cv
285.817 65.6675 284.625 67.8984 283.327 70.7447 cv
f
287.844 63.2641 mo
286.704 62.8257 285.077 62.6103 283.748 62.6992 cv
281.813 64.8496 279.853 67.8228 278.709 70.479 cv
280.079 70.6939 283.312 70.7559 283.312 70.7559 cv
283.327 70.7447 li
284.625 67.8984 285.817 65.6675 287.931 63.3603 cv
287.844 63.2641 li
.410468 .223423 .288701 0 cmyk
f
282.81 70.0688 mo
282.113 70.0512 280.415 69.998 279.241 69.8843 cv
280.332 67.5605 282.025 64.9902 283.784 63.0005 cv
283.907 62.9956 284.034 62.9926 284.161 62.9926 cv
285.091 62.9926 286.091 63.1294 286.907 63.3598 cv
285.145 65.3999 284.031 67.4179 282.81 70.0688 cv
level3{
gsave
clp
[7.6664 0 0 7.6664 279.241 66.5309 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.6664 0 0 7.6664 279.241 66.5309 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
276.689 52.0805 mo
275.626 50.3399 274.694 48.4776 273.908 46.5957 cv
274.186 45.8925 274.557 45.226 275.008 44.6206 cv
275.161 44.611 275.315 44.6066 275.469 44.6066 cv
276.045 44.6066 276.624 44.6693 277.19 44.7617 cv
279.039 46.7534 280.465 49.3623 281.143 51.9941 cv
279.643 52.0288 278.188 52.0464 276.689 52.0805 cv
level3{
gsave
clp
[11.0276 10.7107 -10.7107 11.0276 273.017 44.6108 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[11.0276 10.7107 -10.7107 11.0276 273.017 44.6108 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
276.232 58.4043 mo
276.661 57.1201 277.09 55.8359 277.519 54.5513 cv
278.319 54.4479 279.109 54.3743 279.901 54.3743 cv
280.392 54.3743 280.884 54.4026 281.38 54.4697 cv
280.058 56.2089 278.243 57.5503 276.232 58.4043 cv
level3{
gsave
clp
[3.82374 3.31672 -3.31672 3.82374 276.938 54.8163 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.82374 3.31672 -3.31672 3.82374 276.938 54.8163 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
287.617 63.0986 mo
287.439 63.0745 287.261 63.0486 287.082 63.0217 cv
286.398 62.8424 285.625 62.7287 284.876 62.6922 cv
284.558 62.6518 284.235 62.6163 283.904 62.5889 cv
283.971 62.1079 284.106 61.2529 284.274 60.7979 cv
284.916 60.9439 285.598 61.0084 286.279 61.0084 cv
286.852 61.0084 287.425 60.9626 287.974 60.8814 cv
287.853 61.5523 287.737 62.4282 287.617 63.0986 cv
level3{
gsave
clp
[4.10725e-13 3.99274 -3.99274 4.10725e-13 285.939 59.6887 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.10725e-13 3.99274 -3.99274 4.10725e-13 285.939 59.6887 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
287.082 63.0217 mo
286.363 62.9137 285.636 62.789 284.876 62.6922 cv
285.625 62.7287 286.398 62.8424 287.082 63.0217 cv
level3{
gsave
clp
[4.10725e-13 3.99274 -3.99274 4.10725e-13 285.939 59.6887 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.10725e-13 3.99274 -3.99274 4.10725e-13 285.939 59.6887 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
286.38 97.1025 mo
286.717 98.2471 286.694 99.4971 286.255 100.606 cv
283.842 100.639 281.373 100.316 279.016 99.7959 cv
278.666 98.8374 278.316 97.8789 277.968 96.9199 cv
280.667 97.2925 283.661 97.2959 286.38 97.1025 cv
cp
.68069 .454383 .523583 .190829 cmyk
f
286.871 103.755 mo
286.816 103.467 286.553 102.808 286.152 103.144 cv
285.927 103.333 285.963 103.732 286.074 104.075 cv
286.111 104.397 286.219 104.715 286.503 104.731 cv
286.946 104.756 286.922 104.026 286.871 103.755 cv
cp
f
276.065 101.757 mo
275.928 101.667 275.789 101.815 275.813 101.952 cv
275.831 102.065 275.862 102.173 275.9 102.276 cv
275.999 102.663 276.271 103.349 276.632 103.041 cv
277.054 102.681 276.353 101.946 276.065 101.757 cv
cp
f
284.443 113.482 mo
284.324 113.579 li
284.206 113.855 284.436 114.189 284.676 114.406 cv
284.802 114.564 284.944 114.701 285.115 114.712 cv
285.251 114.652 li
285.467 114.264 284.876 113.442 284.443 113.482 cv
cp
f
289.412 113.556 mo
289.349 113.472 289.204 113.442 289.147 113.556 cv
289.093 113.697 li
289.028 113.783 li
289.061 113.914 li
289.082 114 li
289.149 114.323 289.268 114.604 289.502 114.867 cv
289.595 114.971 289.747 114.88 289.756 114.761 cv
289.791 114.312 289.685 113.917 289.412 113.556 cv
cp
f
316.312 165.163 mo
315.08 164.578 313.651 164.242 312.325 164.339 cv
310.28 167.517 307.463 170.722 304.503 173.071 cv
304.524 173.154 li
306.306 173.754 308.163 174.129 310.04 174.247 cv
312.798 171.731 314.976 168.628 316.312 165.163 cv
cp
.0614023 .247898 .95169 0 cmyk
f
310.04 174.247 mo
308.163 174.129 306.306 173.754 304.524 173.154 cv
304.732 174.173 305.158 175.147 305.771 175.988 cv
307.446 176.222 309.12 176.654 310.795 176.888 cv
313.824 173.764 316.066 169.739 316.951 165.478 cv
316.75 165.36 316.527 165.266 316.312 165.163 cv
314.976 168.628 312.798 171.731 310.04 174.247 cv
cp
.199557 .566888 .97763 .0466621 cmyk
f
327.63 165.229 mo
327.5 165.04 li
325.505 164.661 323.532 164.734 321.558 165.208 cv
320.973 169.086 319.55 172.77 317.413 176.059 cv
317.425 176.076 li
319.716 176.47 322.04 176.666 324.365 176.632 cv
326.197 173.105 327.272 169.193 327.63 165.229 cv
cp
.0614023 .247898 .95169 0 cmyk
f
327.63 165.229 mo
327.272 169.193 326.197 173.105 324.365 176.632 cv
322.04 176.666 319.716 176.47 317.425 176.076 cv
317.752 176.665 318.297 177.119 318.62 177.711 cv
320.997 178.201 323.416 178.483 325.842 178.553 cv
327.51 174.841 328.491 170.572 328.444 166.504 cv
328.121 166.068 327.921 165.658 327.63 165.229 cv
cp
.199557 .566888 .97763 .0466621 cmyk
f
259.214 133.29 mo
256.371 133.277 253.298 132.897 250.562 132.125 cv
254.645 122.827 260.679 114.392 268.159 107.525 cv
269.811 108.019 271.846 108.714 273.207 109.772 cv
270.772 118.714 265.858 126.83 259.214 133.29 cv
level3{
gsave
clp
[2.45057 28.8998 -28.8998 2.45057 260.815 108.333 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.45057 28.8998 -28.8998 2.45057 260.815 108.333 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
279.836 134.418 mo
279.094 133.894 278.645 133.516 277.903 132.991 cv
272.828 135.455 267.561 137.063 261.964 137.776 cv
261.568 138.204 261.173 138.632 260.777 139.06 cv
267.364 139.655 274.286 138.017 279.836 134.418 cv
.199557 .566888 .97763 .0466621 cmyk
f
278.485 148.592 mo
282.735 147.981 286.502 145.195 288.547 141.419 cv
286.187 138.564 283.097 136.15 279.859 134.35 cv
273.652 137.415 267.209 138.943 260.674 139.011 cv
264.783 144.309 271.848 147.647 278.485 148.592 cv
.0614023 .247898 .95169 0 cmyk
f
285.813 147.296 mo
283.915 153.294 280.865 158.865 277.44 164.143 cv
276.397 163.562 275.276 163.286 274.084 163.245 cv
277.197 159.025 279.593 154.276 281.136 149.264 cv
282.656 148.926 284.438 148.031 285.813 147.296 cv
cp
.68069 .454383 .523583 .190829 cmyk
f
326.36 143.964 mo
327.262 150.48 326.642 157.128 325.29 163.566 cv
324.15 163.483 323.014 163.471 321.874 163.387 cv
323.131 157.611 323.496 151.641 322.954 145.754 cv
323.981 145.587 325.596 144.669 326.36 143.964 cv
cp
f
274.647 146.842 mo
270.337 145.303 266.291 143.029 262.735 140.148 cv
267.6 139.92 271.742 138.983 276.417 137.62 cv
276.805 140.802 276.195 144.036 274.647 146.842 cv
level3{
gsave
clp
[13.7953 0 0 13.7953 262.735 142.231 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[13.7953 0 0 13.7953 262.735 142.231 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
150.769 250.625 mo
150.382 249.754 149.997 248.882 149.61 248.011 cv
160.378 241.422 170.95 234.684 181.718 228.095 cv
183.528 229.242 184.583 230.955 185.448 232.456 cv
192.561 228.741 199.835 225.05 206.948 221.335 cv
208.834 222.145 209.81 224.491 209.709 226.541 cv
201.422 231.233 192.955 236.511 184.667 241.203 cv
185.229 242.222 185.47 243.562 186.032 244.581 cv
176.098 249.184 165.905 254.253 155.971 258.854 cv
152.946 257.688 152.082 253.59 150.769 250.625 cv
.85919 .688991 .469245 .380224 cmyk
f
207.156 221.938 mo
208.286 222.896 208.939 224.389 208.875 225.868 cv
208.423 226.164 207.771 226.026 207.355 225.682 cv
206.888 225.293 206.563 224.736 206.455 224.139 cv
206.348 223.54 206.854 222.466 207.156 221.938 cv
cp
.907713 .796078 .509636 .614374 cmyk
f
204.777 225.236 mo
204.751 224.649 204.745 224.082 204.719 223.494 cv
190.595 230.947 176.47 238.399 162.346 245.852 cv
162.489 246.422 162.827 246.837 163.278 247.213 cv
176.979 240.111 191.078 232.338 204.777 225.236 cv
cp
.68069 .454383 .523583 .190829 cmyk
f
184.294 232.583 mo
182.775 233.315 181.396 233.718 179.716 233.864 cv
179.219 232.881 178.972 231.815 178.676 230.754 cv
179.678 230.141 180.679 229.527 181.68 228.913 cv
182.948 229.664 183.853 231.177 184.294 232.583 cv
cp
f
183.518 243.017 mo
179.904 244.783 176.35 246.662 172.736 248.429 cv
172.224 247.632 171.742 246.959 171.229 246.162 cv
175.185 244.455 179.141 242.747 183.096 241.04 cv
183.216 241.73 183.397 242.326 183.518 243.017 cv
cp
f
201.089 319.911 mo
196.15 316.115 193.451 309.423 194.202 303.239 cv
193.191 303.29 192.181 303.34 191.17 303.39 cv
191.31 305.76 191.311 308.17 191.834 310.486 cv
192.357 312.803 193.286 315.069 194.838 316.866 cv
196.391 318.662 198.716 319.814 201.089 319.911 cv
cp
f
120.543 259.719 mo
121.201 259.029 121.86 258.341 122.519 257.652 cv
114.625 247.8 106.968 237.875 99.0752 228.022 cv
96.9829 228.487 95.4092 229.74 94.0859 230.859 cv
88.6558 224.951 83.0664 219.01 77.6357 213.102 cv
75.5874 213.223 73.8735 215.1 73.2725 217.062 cv
79.4756 224.288 85.6499 232.126 91.853 239.352 cv
90.9785 240.12 90.2974 241.299 89.4229 242.067 cv
97.205 249.767 105.073 257.994 112.855 265.694 cv
116.098 265.623 118.301 262.062 120.543 259.719 cv
.85919 .688991 .469245 .380224 cmyk
f
77.2358 213.599 mo
75.8481 214.115 74.7266 215.299 74.2852 216.712 cv
74.6104 217.144 75.27 217.235 75.7783 217.052 cv
76.3501 216.846 76.8442 216.433 77.1489 215.906 cv
77.4531 215.38 77.3413 214.197 77.2358 213.599 cv
cp
.907713 .796078 .509636 .614374 cmyk
f
78.354 217.509 mo
78.5781 216.965 78.7759 216.434 79.0005 215.89 cv
89.7573 227.693 100.515 239.496 111.272 251.3 cv
110.944 251.787 110.485 252.063 109.933 252.264 cv
99.4556 240.934 88.8311 228.838 78.354 217.509 cv
cp
.68069 .454383 .523583 .190829 cmyk
f
95.1294 231.37 mo
96.3086 232.575 97.4702 233.422 99.001 234.129 cv
99.8018 233.373 100.396 232.454 101.034 231.556 cv
100.3 230.64 99.5664 229.723 98.833 228.806 cv
97.3853 229.081 96.021 230.197 95.1294 231.37 cv
cp
f
92.3188 241.448 mo
95.1187 244.336 97.8237 247.31 100.624 250.197 cv
101.376 249.622 102.058 249.152 102.81 248.577 cv
99.6685 245.629 96.5273 242.681 93.3857 239.731 cv
93.0386 240.341 92.666 240.84 92.3188 241.448 cv
cp
f
208.104 318.541 mo
210.981 311.457 212.074 303.668 211.311 296.062 cv
209.088 296.812 206.837 297.877 204.646 298.282 cv
205.372 303.982 204.714 309.854 202.745 315.252 cv
202.131 316.936 201.079 318.813 199.296 318.987 cv
197.341 319.179 195.119 316.898 194.275 315.124 cv
192.567 311.534 192.196 308.005 191.613 304.073 cv
190.862 304.22 190.153 304.018 189.402 304.164 cv
189.5 307.837 189.329 311.743 190.29 315.289 cv
191.25 318.836 193.165 322.254 196.21 324.309 cv
197.946 325.48 200.083 326.096 202.166 326.049 cv
203.146 325.586 204.044 324.917 204.793 324.134 cv
206.301 322.559 207.285 320.561 208.104 318.541 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
213.647 295.426 mo
212.875 295.569 212.095 295.797 211.311 296.062 cv
212.074 303.668 210.981 311.457 208.104 318.541 cv
207.285 320.561 206.301 322.559 204.793 324.134 cv
204.044 324.917 203.146 325.586 202.166 326.049 cv
203.736 326.013 205.277 325.611 206.586 324.727 cv
209.01 323.089 210.299 320.243 211.231 317.471 cv
213.606 310.409 214.437 302.834 213.647 295.426 cv
cp
.68069 .454383 .523583 .190829 cmyk
f
169.903 276.965 mo
172.203 282.011 175.237 286.721 178.882 290.899 cv
177.961 293.853 176.439 296.589 174.284 298.809 cv
170.32 295.655 166.881 291.892 164.428 287.46 cv
165.376 283.723 167.343 279.848 169.903 276.965 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
176.296 254.425 mo
173.071 252.324 169.531 250.103 165.708 249.653 cv
165.663 249.649 li
163.325 255.659 161.3 261.787 159.599 268.007 cv
162.48 269.432 165.542 270.315 168.582 270.099 cv
171.718 265.189 174.332 259.91 176.296 254.425 cv
.0746166 .874205 .873228 .00671397 cmyk
f
168.93 268.133 mo
167.654 267.573 166.328 267.135 165.013 266.863 cv
165.263 265.526 165.49 264.174 165.695 262.808 cv
165.695 262.808 li
165.695 262.808 li
165.695 262.808 li
165.695 262.808 li
164.869 262.428 164.036 262.056 163.197 261.694 cv
164.337 258.065 165.591 254.464 166.945 250.929 cv
169.81 251.477 172.504 253.02 175.393 254.875 cv
173.692 259.446 171.523 263.897 168.93 268.133 cv
level3{
gsave
clp
[-9.69318 16.1456 -16.1456 -9.69318 174.162 249.166 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn
!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn
!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn
!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn!-`qn
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!-`qn!-s+q!.0=u!ITS$!I]V$!J#n)!eH.-!JH7/!euR4!JcR5!Jl[7!fN$<!f`3?!g&NE"HefH"I,&L
"dG8P"dYGS"dkSU#+Cq["e;"]#+h:a#+qCc#,.Rf#GRdi#Gn$m#c=9q#cXR!#caX"$*:!($*L0+$*^B/
$*gN2$+$Z4$FHo8$Fd/<$Fm;?$G!MD$G3SD$b`nI$bj+N$Ga1P$c0CS%)TXW%)fj\%E6'_%EH9c%`lQh
%a)Zi%a)`k&'`/r&'i8t&CAT$&(/T%&Ceu+&Co,.&D,;1&_PS6&_YY7&_be:'&;.A'&D:D'AhOH'Aq[K
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.0391061 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-9.69318 16.1456 -16.1456 -9.69318 174.162 249.166 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzz!!!$#!<E3%!<E3%!<E3%!<E0#!!!$#!<E3%!<E3%!<N<)!s8W-!sA`0"9\i1"9\i1"9er4"U,
&5"U,&5"U,&5"U,&5"pP89"pP89#6tJ=#6tJ=#6tJ=#RC\A#RC\A#RC\A#RC\A#RC\B#mgnE#mgnE#mg
nE#mgnE#mgnF$47+I$47+I$47+I$47+J$O[=M$O[@O$k*OQ$k*RS%1NaU%1NaU%1NdW%LrsY%Ls![%hB
0]%hB0]%hB0]%hB0]%hK9`&.fBa&.fBa&.oKd&J5Te&J>]h&eYfi~>
<~G'8%PG'8%PG'8%QG^+LZH?spbH[C-fI!g?kIXcluJ:N3&JqJ`0KnY89L5(J=LPL\BMMmCON/`gWO-#Hb
OHG]hPEV2oPE_;sQ'R`&Q^F/.R@9S6S"-">SXuFET:_dLTqS0RU8"EYV5:#bVPg>jWMukrWiE,#XK8P+
Y-+t3Yct@:Z*L[AZa7!F['d?O\$riV\@B&Z\[oAa]=bei]tM+n^;%Fu^qdb%_84"*_o'F2`5KX6`l?'>
a2c9BaiVZHaiV]Kbfn>Vc-=PZcd0tbd*^7he'umseCE+#f%8O*f@\a.f\+s2g"P07gYCT>gtgfBh;7#F
~>
<~It)rtIt)rtIt)ruJ:N3%JqAW-KS5#3KS5#3KnY89LPLY?LPL\AM2@+IMMd=MMi3OQN/`gVNK0$[OH>Qc
OHGZfOckolPa.N!Q'IW"Q'Rc(R$jA1R@9S5R[]e9S=H+>SXl=BSt;OFT:_dLTqS3TU8"BVUSO`_VP^5f
Vl-JlWMuntWiE)"X/rD)Xf\_.Y-5%5Z*L^BZa-mBZEpmE[C3QS\@B&Z\[f8^]=Y_g]tM.o^:q@s^qde'
_Sa:/_o'C0`5KX7a2c9BaN2KFb0%oNbKS2Tc-FV\cd:%cd*^:ie'ldpe'umte^i@)f\+s3g=tB;gtgfC
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!**$!<E3%!<E3%!<E3%
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
153.135 249.818 mo
152.124 254.07 151.71 258.464 151.91 262.83 cv
154.175 264.73 156.802 266.623 159.599 268.007 cv
161.3 261.787 163.325 255.659 165.663 249.649 cv
161.519 249.167 157.266 249.232 153.135 249.818 cv
.288853 .994049 .580804 .17908 cmyk
f
174.543 256.568 mo
174.259 257.273 173.819 257.762 173.561 257.657 cv
173.302 257.554 173.323 256.897 173.607 256.191 cv
173.891 255.486 174.331 254.998 174.589 255.103 cv
174.848 255.206 174.827 255.862 174.543 256.568 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
163.933 329.512 mo
162.593 330.131 161.253 330.751 159.914 331.371 cv
157.61 336.896 155.981 342.778 155.149 348.707 cv
156.627 350.574 158.146 352.53 160.002 354.023 cv
155.127 361.604 152.512 370.048 152.353 379.059 cv
155.9 379.635 li
168.917 380.383 181.403 380.423 193.27 379.635 cv
193.335 377.18 192.757 374.902 191.656 372.707 cv
188.025 372.046 184.259 371.199 180.503 370.611 cv
180.343 369.484 179.218 367.521 179.127 366.211 cv
179.127 366.211 180.115 365.306 180.066 364.422 cv
179.841 360.322 178.73 356.737 178.427 352.643 cv
178.07 347.841 177.009 343.187 174.941 338.837 cv
172.874 334.488 168.526 330.955 163.933 329.512 cv
cp
f
155.125 306.145 mo
152.427 308.67 150.368 311.982 149.423 315.449 cv
149.513 315.339 149.409 316.22 149.409 316.22 cv
151.399 320.54 154.939 324.617 158.53 327.746 cv
158.772 327.723 li
160.935 325.154 162.771 322.281 164.118 319.267 cv
161.671 314.546 158.631 310.141 155.125 306.145 cv
.302678 .695705 1 .225376 cmyk
f
164.238 303.969 mo
161.407 304.016 158.122 305.017 155.419 305.86 cv
155.318 305.951 155.225 306.052 155.125 306.145 cv
158.631 310.141 161.671 314.546 164.118 319.267 cv
164.057 319.402 163.982 319.534 163.919 319.67 cv
167.329 318.765 170.8 318.098 174.304 317.684 cv
171.461 312.908 167.955 308.089 164.238 303.969 cv
.0160525 .0600595 .744472 0 cmyk
f
163.919 319.67 mo
162.591 322.536 160.837 325.271 158.772 327.723 cv
162.504 327.368 164.543 327.263 168.099 325.844 cv
170.077 324.525 172.875 320.607 174.407 317.854 cv
174.304 317.684 li
170.8 318.098 167.329 318.765 163.919 319.67 cv
cp
.302678 .695705 1 .225376 cmyk
f
173.198 330.005 mo
172.848 326.661 172.054 323.253 170.948 320.078 cv
168.746 320.459 166.64 321.015 164.541 321.782 cv
163.712 323.055 162.895 324.253 162.065 325.524 cv
162.375 327.446 162.685 329.367 162.995 331.289 cv
166.401 331.879 170.08 331.494 173.198 330.005 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
159.482 353.764 mo
160.102 354.483 160.746 355.001 161.652 355.317 cv
163.699 354.497 165.812 353.752 167.859 352.931 cv
170.741 352.979 175.168 353.407 178.819 353.647 cv
179.54 353.227 180.13 352.863 180.84 352.446 cv
175.473 351.303 166.922 350.602 166.922 350.602 cv
164.332 351.364 161.833 352.433 159.482 353.764 cv
cp
.302678 .695705 1 .225376 cmyk
f
167.188 334.641 mo
169.043 331.774 171.452 329.101 173.926 326.749 cv
173.601 326.044 173.274 325.339 172.949 324.635 cv
172.133 325.132 166.589 328.533 164.208 330.509 cv
161.97 338.085 160.365 345.847 159.414 353.688 cv
159.482 353.764 li
161.768 352.469 164.196 351.429 166.711 350.67 cv
166.237 345.341 166.716 339.9 167.188 334.641 cv
cp
f
188.33 327.509 mo
188.398 327.424 li
188.053 326.62 187.756 325.952 187.412 325.148 cv
182.768 323.89 177.786 323.672 173.059 324.567 cv
172.949 324.635 li
173.274 325.339 173.601 326.044 173.926 326.749 cv
173.853 326.822 li
178.681 326.411 183.563 326.638 188.33 327.509 cv
cp
.0160525 .0600595 .744472 0 cmyk
f
166.711 350.67 mo
166.922 350.602 li
166.922 350.602 175.473 351.303 180.84 352.446 cv
180.92 352.399 li
180.5 347.416 180.322 342.372 180.724 337.194 cv
176.284 336.028 171.741 335.268 167.162 334.938 cv
166.699 340.105 166.247 345.441 166.711 350.67 cv
cp
.0614023 .247898 .95169 0 cmyk
f
188.33 327.509 mo
183.563 326.638 178.681 326.411 173.853 326.822 cv
171.404 329.157 169.024 331.803 167.188 334.641 cv
167.18 334.739 167.171 334.839 167.162 334.938 cv
171.741 335.268 176.284 336.028 180.724 337.194 cv
180.722 336.987 li
182.796 333.52 185.332 330.297 188.33 327.509 cv
cp
.199557 .566888 .97763 .0466621 cmyk
f
152.536 353.876 mo
159.414 355.317 li
158.772 356.581 li
160.078 358.208 li
158.958 358.639 li
156.733 357.808 154.593 356.22 152.536 353.876 cv
cp
.0160525 .0600595 .744472 0 cmyk
f
180.758 356.794 mo
176.831 355.69 172.586 355.056 168.507 355.103 cv
168.507 355.103 168.376 355.149 168.159 355.229 cv
168.576 357.806 168.825 360.409 168.914 363.019 cv
168.971 362.866 169.015 362.709 169.076 362.558 cv
174.485 362.349 179.532 362.639 184.589 362.98 cv
184.767 362.839 li
183.847 360.611 182.396 358.563 180.758 356.794 cv
cp
.0614023 .247898 .95169 0 cmyk
f
158.958 358.639 mo
156.688 357.275 154.405 355.751 152.536 353.876 cv
151.638 355.021 150.74 356.166 149.842 357.312 cv
151.982 359.999 154.097 362.86 156.237 365.548 cv
160.178 365.642 164.124 365.766 168.069 365.891 cv
168.274 364.912 168.564 363.954 168.914 363.019 cv
168.825 360.409 168.576 357.806 168.159 355.229 cv
166.792 355.724 161.628 357.597 158.958 358.639 cv
cp
.302678 .695705 1 .225376 cmyk
f
184.589 362.98 mo
179.532 362.639 174.485 362.349 169.076 362.558 cv
168.64 363.635 168.308 364.753 168.069 365.891 cv
168.553 365.905 169.036 365.917 169.52 365.933 cv
169.695 365.312 169.91 364.703 170.206 364.13 cv
173.462 363.795 176.827 363.952 180.066 364.422 cv
179.814 365.021 179.485 365.627 179.127 366.211 cv
179.552 366.222 179.977 366.237 180.401 366.248 cv
181.812 365.103 183.182 364.112 184.589 362.98 cv
cp
f
191.656 372.707 mo
185.292 373.378 178.694 373.348 171.894 372.707 cv
171.894 380.192 li
179.409 380.4 186.583 380.264 193.27 379.635 cv
193.255 377.145 192.792 374.81 191.656 372.707 cv
cp
.68069 .454383 .523583 .190829 cmyk
f
168.479 336.521 mo
168.463 337.043 168.225 337.444 167.947 337.418 cv
167.67 337.391 167.456 336.976 167.471 336.49 cv
167.485 336.005 167.724 335.603 168.002 335.593 cv
168.281 335.583 168.495 335.999 168.479 336.521 cv
cp
f
180.478 338.524 mo
180.433 338.959 180.169 339.303 179.89 339.292 cv
179.612 339.282 179.425 338.892 179.475 338.419 cv
179.524 337.947 179.788 337.604 180.062 337.651 cv
180.337 337.699 180.523 338.09 180.478 338.524 cv
cp
f
168.171 349.113 mo
168.171 349.577 167.945 349.953 167.667 349.953 cv
167.388 349.953 167.163 349.577 167.163 349.113 cv
167.163 348.648 167.388 348.272 167.667 348.272 cv
167.945 348.272 168.171 348.648 168.171 349.113 cv
cp
f
180.32 350.461 mo
180.341 350.93 180.186 351.345 179.911 351.395 cv
179.638 351.445 179.337 351.051 179.312 350.509 cv
179.286 349.966 179.548 349.546 179.824 349.569 cv
180.103 349.593 180.296 349.992 180.32 350.461 cv
cp
f
163.5 318.16 mo
165.404 315.558 167.496 313.1 169.751 310.794 cv
168.01 308.401 166.153 306.092 164.238 303.969 cv
164.201 303.971 li
162.389 306.372 160.771 308.918 159.408 311.599 cv
160.901 313.703 162.267 315.894 163.5 318.16 cv
cp
.0696727 .617151 .575494 .00128176 cmyk
f
138.643 262.532 mo
124.33 258.864 li
123.601 260.323 li
127.981 262.065 132.306 264.416 136.594 267.159 cv
126.492 271.064 li
107.404 263.167 li
108.382 272.114 110.691 283.257 114.23 291.532 cv
117.702 292.887 121.263 293.416 124.823 293.909 cv
124.682 298.723 124.955 304.51 125.373 309.233 cv
128.952 313.479 132.932 317.144 137.608 320.14 cv
139.317 320.654 140.884 320.889 142.412 320.985 cv
140.34 315.425 139.018 309.423 138.643 302.864 cv
143.009 301.973 147.69 301.788 152.649 302.221 cv
153.549 299.288 154.742 296.407 156.219 293.719 cv
158.599 293.295 161.229 293.31 163.744 293.204 cv
161.292 292.527 158.99 291.559 156.905 290.172 cv
164.238 267.159 li
164.973 266.803 li
165.277 265.442 165.386 264.169 165.695 262.808 cv
138.643 262.532 li
.302678 .695705 1 .225376 cmyk
f
115.337 266.476 mo
117.389 266.384 119.221 268.021 119.93 269.948 cv
120.638 271.876 120.437 274.017 120.021 276.027 cv
119.693 277.612 119.215 279.217 118.209 280.484 cv
117.203 281.752 115.565 282.625 113.973 282.333 cv
112.43 282.051 111.235 280.741 110.652 279.285 cv
110.069 277.828 109.992 276.227 109.922 274.659 cv
109.791 271.713 113.294 268.604 115.337 266.476 cv
f
136.594 267.159 mo
132.306 264.416 127.981 262.065 123.601 260.323 cv
118.336 261.005 112.132 261.773 107.404 263.167 cv
126.492 271.064 li
136.594 267.159 li
.0160525 .0600595 .744472 0 cmyk
f
124.33 258.864 mo
138.643 262.532 li
165.695 262.808 li
160.924 260.619 155.936 258.658 150.804 257.56 cv
142.782 257.058 133.464 257.393 124.33 258.864 cv
f
137.866 291.083 mo
134.965 291.972 131.701 292.418 128.668 292.518 cv
127.426 285.432 126.699 278.256 126.492 271.064 cv
129.562 269.202 133.044 267.698 136.594 267.159 cv
138.139 274.928 138.457 283.292 137.866 291.083 cv
cp
.0614023 .247898 .95169 0 cmyk
f
164.963 266.853 mo
164.973 266.803 li
164.238 267.159 li
156.905 290.172 li
158.99 291.559 161.292 292.527 163.744 293.204 cv
168.151 286.381 171.373 278.373 172.932 270.401 cv
170.608 268.746 167.758 267.422 164.963 266.853 cv
f
165.695 262.808 mo
157.221 261.43 147.641 261.55 138.643 262.532 cv
139.872 271.31 140.661 279.963 140.97 288.479 cv
147.209 288.236 153.054 288.377 158.174 289.226 cv
161.752 281.127 164.268 272.327 165.695 262.808 cv
f
135.844 237.928 mo
135.761 237.891 li
132.445 238.661 129.532 239.822 126.47 241.309 cv
126.566 247.218 127.75 253.107 129.945 258.595 cv
132.487 258.981 135.093 259.057 137.648 258.752 cv
135.841 251.983 135.229 244.905 135.844 237.928 cv
cp
.199557 .566888 .97763 .0466621 cmyk
f
148.206 235.789 mo
146.632 237.776 144.523 239.506 142.327 240.772 cv
140.134 239.864 138.035 238.839 135.844 237.928 cv
135.229 244.905 135.841 251.983 137.648 258.752 cv
138.214 258.685 138.781 258.62 139.341 258.512 cv
139.766 256.726 140.404 254.806 140.83 253.02 cv
142.308 252.84 143.958 252.569 145.437 252.389 cv
147.362 247.271 148.677 241.595 149.152 236.147 cv
148.775 236.077 148.583 235.859 148.206 235.789 cv
cp
.0614023 .247898 .95169 0 cmyk
f
148.206 235.789 mo
145.788 236.139 li
144.641 237.933 142.999 239.226 141.086 240.244 cv
142.327 240.772 li
144.616 239.432 146.601 237.795 148.206 235.789 cv
cp
.199557 .566888 .97763 .0466621 cmyk
f
143.645 252.631 mo
145.584 257.403 li
143.544 258.02 141.503 258.226 139.463 258.02 cv
140.83 253.02 li
143.645 252.631 li
cp
.85919 .688991 .469245 .380224 cmyk
f
141.675 246.738 mo
141.675 246.433 141.682 246.048 141.682 245.742 cv
139.87 244.228 138.025 243.066 135.757 242.407 cv
132.756 243.013 129.579 243.927 126.703 245.235 cv
126.785 246.07 126.883 246.904 127.008 247.734 cv
130.045 246.966 133.166 246.148 136.176 245.396 cv
138.015 245.843 139.836 246.292 141.675 246.738 cv
cp
.550195 0 .358099 0 cmyk
f
138.643 302.864 mo
136.55 301.759 li
136.55 301.759 142.451 300.161 147.669 300.255 cv
152.886 300.349 153.144 300.702 153.144 300.702 cv
159.164 303.866 li
138.643 302.864 li
.0160525 .0600595 .744472 0 cmyk
f
138.643 302.864 mo
139.018 309.423 140.34 315.425 142.412 320.985 cv
144.415 321.112 146.348 320.994 148.425 320.892 cv
153.078 315.981 156.654 310.147 159.164 303.866 cv
157.192 303.034 154.786 302.328 152.649 302.221 cv
147.69 301.788 143.009 301.973 138.643 302.864 cv
.0614023 .247898 .95169 0 cmyk
f
141.47 265.189 mo
141.572 265.929 141.355 266.569 140.987 266.62 cv
140.619 266.67 140.239 266.111 140.137 265.372 cv
140.036 264.633 140.252 263.993 140.621 263.942 cv
140.989 263.892 141.369 264.45 141.47 265.189 cv
.68069 .454383 .523583 .190829 cmyk
f
164.706 265.816 mo
164.542 266.54 164.115 267.059 163.753 266.977 cv
163.391 266.895 163.23 266.241 163.395 265.519 cv
163.559 264.796 163.985 264.276 164.348 264.358 cv
164.71 264.441 164.871 265.094 164.706 265.816 cv
f
142.995 285.763 mo
142.96 286.636 142.535 287.279 142.172 287.211 cv
141.805 287.144 141.621 286.475 141.651 285.706 cv
141.685 284.938 141.924 284.287 142.296 284.25 cv
142.664 284.213 143.033 284.89 142.995 285.763 cv
f
158.512 286.914 mo
158.329 287.601 157.817 288.004 157.481 287.851 cv
157.141 287.696 157.062 287.136 157.212 286.565 cv
157.367 285.997 157.715 285.55 158.087 285.587 cv
158.455 285.622 158.697 286.228 158.512 286.914 cv
f
128.278 272.757 mo
128.35 273.381 128.233 273.965 127.88 274.088 cv
127.533 274.213 127.036 273.703 126.942 272.917 cv
126.847 272.132 127.21 271.52 127.576 271.558 cv
127.949 271.595 128.2 272.134 128.278 272.757 cv
cp
f
137.647 289.6 mo
137.689 290.241 137.423 290.78 137.053 290.805 cv
136.682 290.829 136.347 290.329 136.305 289.688 cv
136.263 289.047 136.529 288.508 136.899 288.483 cv
137.27 288.459 137.605 288.959 137.647 289.6 cv
cp
f
172.188 272.274 mo
172.015 272.879 171.584 273.285 171.228 273.182 cv
170.871 273.079 170.722 272.507 170.896 271.902 cv
171.069 271.299 171.5 270.892 171.857 270.995 cv
172.214 271.098 172.362 271.671 172.188 272.274 cv
cp
f
152.029 275.516 mo
154.225 273.835 156.086 271.681 157.38 269.326 cv
155.899 268.06 154.414 266.738 152.933 265.471 cv
151.271 266.641 149.467 267.887 147.805 269.057 cv
148.487 271.548 150.189 273.834 152.029 275.516 cv
158.147 271.179 mo
158.851 271.806 159.638 272.378 160.342 273.005 cv
157.761 276.868 154.653 280.482 150.786 283.169 cv
147.857 280.593 145.389 277.536 143.473 274.11 cv
144.743 273.318 145.7 272.548 146.97 271.756 cv
148.159 274.102 149.69 276.066 151.655 277.778 cv
154.083 275.959 156.411 273.624 158.147 271.179 cv
.160586 .877501 .751583 .0439765 cmyk
f
157.151 287.288 mo
154.116 286.896 150.741 286.704 146.9 286.704 cv
145.588 286.704 144.2 286.728 142.759 286.772 cv
142.758 286.764 142.758 286.755 142.758 286.747 cv
142.887 286.492 142.979 286.15 142.995 285.763 cv
143.02 285.182 142.865 284.688 142.651 284.434 cv
142.353 278.619 141.831 272.644 141.091 266.589 cv
141.395 266.443 141.562 265.857 141.47 265.189 cv
141.381 264.54 141.077 264.03 140.755 263.95 cv
140.711 263.617 140.666 263.282 140.621 262.948 cv
144.74 262.534 148.78 262.325 152.646 262.325 cv
157.126 262.325 161.331 262.607 165.162 263.166 cv
165.032 263.978 164.894 264.786 164.748 265.59 cv
164.834 264.962 164.672 264.433 164.348 264.358 cv
164.322 264.353 164.297 264.35 164.271 264.35 cv
163.927 264.35 163.547 264.846 163.395 265.519 cv
163.23 266.241 163.391 266.895 163.753 266.977 cv
163.778 266.982 163.804 266.985 163.83 266.985 cv
164.173 266.985 164.553 266.49 164.706 265.818 cv
163.347 273.176 161.288 280.165 158.562 286.659 cv
158.634 286.084 158.408 285.618 158.087 285.587 cv
158.072 285.585 158.058 285.585 158.044 285.585 cv
157.688 285.585 157.361 286.019 157.212 286.565 cv
157.145 286.82 157.124 287.073 157.151 287.288 cv
146.97 271.756 mo
145.7 272.548 144.743 273.318 143.473 274.11 cv
145.389 277.536 147.857 280.593 150.786 283.169 cv
154.653 280.482 157.761 276.868 160.342 273.005 cv
159.638 272.378 158.851 271.806 158.147 271.179 cv
156.411 273.624 154.083 275.959 151.655 277.778 cv
149.69 276.066 148.159 274.102 146.97 271.756 cv
152.933 265.471 mo
151.271 266.641 149.467 267.887 147.805 269.057 cv
148.487 271.548 150.189 273.834 152.029 275.516 cv
154.225 273.835 156.086 271.681 157.38 269.326 cv
155.899 268.06 154.414 266.738 152.933 265.471 cv
level3{
gsave
clp
[-22.4689 30.93 -30.93 -22.4689 166.176 252.136 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-22.4689 30.93 -30.93 -22.4689 166.176 252.136 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
141.091 266.589 mo
140.983 265.711 140.871 264.832 140.755 263.95 cv
141.077 264.03 141.381 264.54 141.47 265.189 cv
141.562 265.857 141.395 266.443 141.091 266.589 cv
level3{
gsave
clp
[-22.4689 30.93 -30.93 -22.4689 166.176 252.136 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-22.4689 30.93 -30.93 -22.4689 166.176 252.136 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
163.83 266.985 mo
163.804 266.985 163.778 266.982 163.753 266.977 cv
163.391 266.895 163.23 266.241 163.395 265.519 cv
163.547 264.846 163.927 264.35 164.271 264.35 cv
164.297 264.35 164.322 264.353 164.348 264.358 cv
164.672 264.433 164.834 264.962 164.748 265.59 cv
164.734 265.666 164.72 265.742 164.706 265.818 cv
164.553 266.49 164.173 266.985 163.83 266.985 cv
level3{
gsave
clp
[-22.4689 30.93 -30.93 -22.4689 166.176 252.136 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-22.4689 30.93 -30.93 -22.4689 166.176 252.136 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
142.758 286.747 mo
142.726 285.979 142.69 285.208 142.651 284.434 cv
142.865 284.688 143.02 285.182 142.995 285.763 cv
142.979 286.15 142.887 286.492 142.758 286.747 cv
level3{
gsave
clp
[-22.4689 30.93 -30.93 -22.4689 166.176 252.136 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-22.4689 30.93 -30.93 -22.4689 166.176 252.136 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
158.231 287.438 mo
157.876 287.385 157.516 287.335 157.151 287.288 cv
157.124 287.073 157.145 286.82 157.212 286.565 cv
157.361 286.019 157.688 285.585 158.044 285.585 cv
158.058 285.585 158.072 285.585 158.087 285.587 cv
158.408 285.618 158.634 286.084 158.562 286.659 cv
158.453 286.92 158.342 287.179 158.231 287.438 cv
level3{
gsave
clp
[-22.4689 30.93 -30.93 -22.4689 166.176 252.136 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-22.4689 30.93 -30.93 -22.4689 166.176 252.136 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
150.786 283.169 mo
147.857 280.593 145.389 277.536 143.473 274.11 cv
144.743 273.318 145.7 272.548 146.97 271.756 cv
148.159 274.102 149.69 276.066 151.655 277.778 cv
154.083 275.959 156.411 273.624 158.147 271.179 cv
158.851 271.806 159.638 272.378 160.342 273.005 cv
157.761 276.868 154.653 280.482 150.786 283.169 cv
152.029 275.516 mo
150.189 273.834 148.487 271.548 147.805 269.057 cv
149.467 267.887 151.271 266.641 152.933 265.471 cv
154.414 266.738 155.899 268.06 157.38 269.326 cv
156.086 271.681 154.225 273.835 152.029 275.516 cv
level3{
gsave
clp
[-22.4689 30.93 -30.93 -22.4689 166.176 252.136 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\
$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\
$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\
$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\$9Ci\
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~$9Ci\$Tq/a$pRJe%73kk%Rj:r%n9It%SB_$%not'&5H:,%oHI0&6)a3&lr3:&Qr?=&mS]B&melE&n,,I
'4YMP'4t_S'P_(W'l7C\'lR[a(3+$g(Na?k(O'Wp(O9lu)16?&)M)l.)hW54*//M8)i8_<*/o%@*KPIG
*Kb[K*gM'P+.%EW+.@]\+J")b+J=>f+JOSk+Jjkq+fC.u+fpS'+g-h,,-[+0,.!C6,INa<,e90B,J'6E
,e]ZM-,?)T,f?2V-,lJ[--)eb--N(f-I&Im-IAdt-ISt"-If7)-e>O.-J5[2-ec$9.,DE@.,MZF.H%uL
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.0391061 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-22.4689 30.93 -30.93 -22.4689 166.176 252.136 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~#mgnE#mgnE#mgnF$47.K$O[@O$k*RS%1NdW%LrsY%LrsY%Ls![%hB0]%hB0]%hB3_&J5Te&J5Te&J5Te
&J5Te&J>]h&eYfi&ebol',2,p'GM5q'GV>t'c%Q#()@Z$()@Z$(Ddo*)&X;0)B'M4)]K_8)]K_8)]K_8
*#oq<*#oq=*??.A*Zc@D*Zc@E+!2RH+!2RH+!2RH+!2RI+<VdL+<VdL+<VdM+X&!P+X&$R+sJ6V,9nEX
,9nEX,9nHZ,U=W\,U=W\,U=W\,U=W\,UF`_,pai`,pai`,pai`,pjrc-71&d-71&d-7:/g-RU8h-R^Ak
~>
<~3B9)[3B9)[3B9)\4$,Pe4[)(p5X@_'6UX@377B[984cEG91qrP9heAY:f("e;c?Xp<E<.%=BSd1>?kE=
?!^lF?t!JQ@UiqZAS,RgBkhBuCM[j*DJsH4E,fo>FEDYKGB\:VH$O^_I!pKpJUrE)K7ei1KnbA=M2I4L
N/`jXO,oBbP*;,qQ'R`&Q^F20S"#q=St;RITV8'RUSO]^V5C,gWN*##XKAV-YHP17Z*L^B['[6L\%&uZ
\[f;`]=bhk^;%J"_SX4.`5KX6`l?'?b0.uPbg"DXcd:%ddF-Ile'umte^i='f@\a/g"P39gtgfBh;7#G
~>
<~91qoN91qoN91qoO9he>V9heAX:JXe`;,U:i;GpFl<)cgr<)cjt<`W:'=BJ[-=BJ[.>$G38>?kE<>[:W@
?!^iD?=.)K@U`eU@U`eU@U`eV@q9+]AS,RgBP;'mBk_<sCMRa'DJj?0Df9T6EH6)@FEDVHF`hhLF`hhL
G'A1UH$O^^H?smaH[L6jIXcitJ:W9'JqAT,KS5&6L51P?LkpkDM2I1KN/`gWNfK0]OH>TeP*;,pPa%H!
QC!u,R@9V8S=Q4ASXl@DSt;UKU8+KYUSO``Vl6PnWiN2$X/rG+YHY78Yd(L>Za@-K[^W`U\@T;b]tV4q
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!"!<E3%!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!
WiE)!WiH+!s8W-!s8W-!s8Z/"9\i1"9\i1"9\i1"9er4"U,&5"U5/8"pYA<#6tJ=#7(S@#RLeD#mgnE#
mq"H~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
140.687 304.862 mo
140.795 305.483 140.586 306.039 140.22 306.103 cv
139.854 306.166 139.47 305.715 139.362 305.094 cv
139.253 304.473 139.462 303.917 139.829 303.854 cv
140.195 303.789 140.579 304.241 140.687 304.862 cv
.68069 .454383 .523583 .190829 cmyk
f
157.687 306.109 mo
157.448 306.622 156.98 306.909 156.644 306.752 cv
156.308 306.594 156.23 306.051 156.469 305.538 cv
156.709 305.026 157.177 304.738 157.513 304.896 cv
157.85 305.054 157.928 305.597 157.687 306.109 cv
f
143.609 318.332 mo
143.761 318.878 143.593 319.401 143.235 319.501 cv
142.877 319.601 142.464 319.238 142.313 318.692 cv
142.161 318.146 142.328 317.623 142.686 317.523 cv
143.043 317.424 143.457 317.786 143.609 318.332 cv
cp
f
148.272 318.17 mo
148.583 317.779 149.071 317.651 149.361 317.883 cv
149.652 318.114 149.635 318.618 149.324 319.009 cv
149.014 319.398 148.526 319.526 148.235 319.295 cv
147.945 319.063 147.961 318.56 148.272 318.17 cv
cp
f
150.563 317.347 mo
145.957 315.211 142.452 310.432 140.684 305.509 cv
140.724 305.318 140.728 305.095 140.687 304.862 cv
140.614 304.443 140.415 304.1 140.181 303.942 cv
140.136 303.783 140.093 303.623 140.051 303.464 cv
142.536 302.996 145.185 302.758 147.85 302.758 cv
151.466 302.758 155.112 303.197 158.421 304.098 cv
157.309 308.894 153.948 313.772 150.563 317.347 cv
157.314 304.853 mo
157.011 304.853 156.665 305.121 156.469 305.538 cv
156.23 306.051 156.308 306.594 156.644 306.752 cv
156.706 306.781 156.773 306.795 156.842 306.795 cv
157.146 306.795 157.492 306.527 157.687 306.109 cv
157.928 305.597 157.85 305.054 157.513 304.896 cv
157.451 304.867 157.384 304.853 157.314 304.853 cv
level3{
gsave
clp
[-11.7194 15.5936 -15.5936 -11.7194 153.902 299.186 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-11.7194 15.5936 -15.5936 -11.7194 153.902 299.186 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
140.684 305.509 mo
140.496 304.987 140.329 304.464 140.181 303.942 cv
140.415 304.1 140.614 304.443 140.687 304.862 cv
140.728 305.095 140.724 305.318 140.684 305.509 cv
level3{
gsave
clp
[-11.7194 15.5936 -15.5936 -11.7194 153.902 299.186 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-11.7194 15.5936 -15.5936 -11.7194 153.902 299.186 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
156.842 306.795 mo
156.773 306.795 156.706 306.781 156.644 306.752 cv
156.308 306.594 156.23 306.051 156.469 305.538 cv
156.665 305.121 157.011 304.853 157.314 304.853 cv
157.384 304.853 157.451 304.867 157.513 304.896 cv
157.85 305.054 157.928 305.597 157.687 306.109 cv
157.492 306.527 157.146 306.795 156.842 306.795 cv
level3{
gsave
clp
[-11.7194 15.5936 -15.5936 -11.7194 153.902 299.186 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-11.7194 15.5936 -15.5936 -11.7194 153.902 299.186 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
86.4897 358.931 mo
90.8901 350.272 95.2905 341.613 99.6914 332.955 cv
105.903 332.184 111.989 333.319 117.735 335.802 cv
118.903 336.307 118.979 338.114 119.754 339.124 cv
117.191 346.96 114.456 354.935 111.893 362.771 cv
113.13 368.29 114.071 373.925 115.308 379.443 cv
108.794 381.575 92.0425 382.389 85.0562 381.681 cv
81.1807 375.163 87.375 366.462 86.4897 358.931 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
128.178 303.192 mo
129.152 303.709 129.907 304.566 130.506 305.491 cv
131.593 307.166 132.239 309.125 132.361 311.118 cv
132.417 312.035 132.313 313.068 131.617 313.668 cv
130.761 314.403 129.437 314.13 128.429 313.622 cv
125.908 312.353 124.009 309.642 123.297 306.928 cv
122.544 304.059 125.494 301.77 128.178 303.192 cv
cp
.302678 .695705 1 .225376 cmyk
f
111.185 318.82 mo
112.604 320.711 114.073 323.077 115.491 324.952 cv
117.718 325.856 120.024 326.539 122.423 326.576 cv
122.091 324.175 121.551 321.834 120.655 319.534 cv
117.485 319.76 114.289 319.499 111.185 318.82 cv
cp
.199557 .566888 .97763 .0466621 cmyk
f
127.081 303.667 mo
124.507 308.85 122.384 314.256 120.751 319.808 cv
121.585 322.02 122.104 324.27 122.423 326.576 cv
122.567 326.581 li
126.476 322.507 129.551 317.832 131.054 312.39 cv
130.163 309.556 128.782 306.117 127.081 303.667 cv
cp
.0614023 .247898 .95169 0 cmyk
f
127.033 303.593 mo
127.033 303.593 120.152 301.914 117.107 302.262 cv
113.308 306.85 111.153 312.771 111.118 318.729 cv
111.185 318.82 li
114.289 319.499 117.485 319.76 120.655 319.534 cv
120.691 319.625 120.717 319.717 120.751 319.808 cv
122.384 314.256 124.507 308.85 127.081 303.667 cv
127.033 303.593 li
cp
.0160525 .0600595 .744472 0 cmyk
f
112.937 320.728 mo
111.951 322.893 110.777 324.448 110.137 326.127 cv
111.788 327.719 113.483 329.294 115.134 330.887 cv
116.593 328.942 117.906 327.189 119.364 325.246 cv
119.192 324.048 119.116 322.881 118.943 321.684 cv
117.228 320.981 114.789 320.65 112.937 320.728 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
85.1782 352.199 mo
86.1313 353.147 86.6479 353.339 87.6416 354.356 cv
91.4644 354.135 96.9292 354.231 100.752 354.01 cv
102.301 355.408 103.738 356.889 105.287 358.287 cv
105.946 358.202 106.109 358.267 106.769 358.181 cv
106.802 358.14 li
105.15 355.868 103.402 353.748 101.35 351.771 cv
96.6641 352.008 89.8633 351.963 85.1782 352.199 cv
cp
.199557 .566888 .97763 .0466621 cmyk
f
112.639 333.06 mo
111.619 329.833 110.481 326.731 108.751 323.822 cv
101.838 323.59 94.9038 324.007 88.0654 325.048 cv
90.2646 328.208 91.9434 331.732 93.269 335.348 cv
99.7563 335.311 106.238 334.587 112.573 333.19 cv
112.639 333.06 li
cp
f
93.269 335.348 mo
93.3159 335.468 li
91.772 341.267 87.6714 347.324 85.0562 352.079 cv
85.1782 352.199 li
89.8335 351.964 96.5728 352.007 101.255 351.775 cv
105.532 345.926 109.412 339.696 112.573 333.19 cv
106.238 334.587 99.7563 335.311 93.269 335.348 cv
cp
.0160525 .0600595 .744472 0 cmyk
f
110.155 321.363 mo
104.113 319.657 95.3613 320.202 90.2041 321.614 cv
89.1436 322.454 88.3584 323.637 87.9961 324.94 cv
88.0654 325.048 li
94.9038 324.007 101.838 323.59 108.751 323.822 cv
108.858 324.021 li
109.261 323.134 109.716 322.271 110.221 321.437 cv
110.155 321.363 li
cp
f
110.221 321.437 mo
109.716 322.271 109.261 323.134 108.858 324.021 cv
110.524 326.873 111.642 329.905 112.639 333.06 cv
109.466 339.613 105.561 345.886 101.255 351.775 cv
101.35 351.771 li
103.402 353.748 105.15 355.868 106.802 358.14 cv
112.432 351.42 116.803 343.603 119.169 335.162 cv
117.026 330.084 113.975 325.471 110.221 321.437 cv
cp
.0614023 .247898 .95169 0 cmyk
f
97.749 365.399 mo
98.3652 362.412 99.0181 359.492 99.6416 356.517 cv
95.4028 355.48 90.4463 355.909 86.7188 356.688 cv
85.1025 359.245 83.4863 361.802 81.8706 364.358 cv
81.9194 364.463 81.9692 364.561 82.0181 364.664 cv
87.2661 364.269 92.5615 364.511 97.749 365.399 cv
cp
.0160525 .0600595 .744472 0 cmyk
f
82.0181 364.664 mo
82.7451 366.202 83.4839 367.577 84.6221 368.87 cv
89.4858 368.797 94.4312 368.976 99.2954 368.905 cv
98.7559 367.733 98.2168 366.562 97.6772 365.39 cv
92.5127 364.511 87.2417 364.271 82.0181 364.664 cv
cp
.199557 .566888 .97763 .0466621 cmyk
f
112.28 367.899 mo
115.234 364.576 117.991 361.309 120.944 357.985 cv
120.061 356.372 118.689 355.005 117.205 353.917 cv
114.249 356.693 111.26 359.506 108.304 362.282 cv
105.485 360.306 102.839 358.575 100.02 356.6 cv
99.896 356.566 99.7661 356.548 99.6416 356.517 cv
99.0181 359.492 98.3652 362.412 97.749 365.399 cv
97.6772 365.39 li
98.2168 366.562 98.7559 367.733 99.2954 368.905 cv
99.3701 368.905 li
103.685 368.841 107.977 368.229 112.28 367.899 cv
cp
.0614023 .247898 .95169 0 cmyk
f
88.2192 375.983 mo
90.7061 375.497 93.2124 375.354 95.7329 375.441 cv
95.8335 372.593 95.7954 369.697 95.5981 367.144 cv
92.5947 366.914 89.0215 367.193 86.0195 367.443 cv
84.5684 369.536 83.1172 371.629 81.666 373.722 cv
78.9409 374.105 75.6587 374.693 72.9336 375.077 cv
72.2578 376.919 71.6904 378.553 71.9033 380.504 cv
77.3306 381.208 82.6772 381.66 88.1064 381.771 cv
87.917 379.847 87.9526 377.899 88.2192 375.983 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
117.205 353.917 mo
108.304 362.282 li
107.408 361.657 li
114.289 355.532 li
114.75 354.151 li
117.205 353.917 li
cp
.0160525 .0600595 .744472 0 cmyk
f
72.9336 375.077 mo
88.2192 375.983 li
88.1064 381.771 li
82.1997 381.748 76.7041 381.4 71.9033 380.504 cv
71.8403 378.627 72.1372 376.81 72.9336 375.077 cv
cp
.68069 .454383 .523583 .190829 cmyk
f
109.474 336.44 mo
109.08 337.11 108.451 337.417 108.163 337.187 cv
107.871 336.953 107.975 336.338 108.316 335.757 cv
108.659 335.178 109.148 334.789 109.493 334.933 cv
109.834 335.073 109.87 335.771 109.474 336.44 cv
cp
f
94.5645 337.551 mo
94.396 338.194 93.9678 338.641 93.6084 338.547 cv
93.249 338.453 93.0942 337.854 93.2627 337.21 cv
93.4312 336.565 93.8589 336.12 94.2188 336.214 cv
94.5781 336.308 94.7329 336.906 94.5645 337.551 cv
cp
f
87.4282 349.739 mo
87.8018 349.249 88.2979 348.938 88.6313 349.106 cv
88.9614 349.271 88.9546 349.953 88.501 350.551 cv
88.0488 351.15 87.395 351.342 87.1465 351.069 cv
86.894 350.794 87.0586 350.231 87.4282 349.739 cv
cp
f
100.802 349.131 mo
101.118 348.649 101.583 348.341 101.925 348.491 cv
102.264 348.639 102.311 349.279 101.93 349.864 cv
101.55 350.45 100.945 350.667 100.673 350.417 cv
100.397 350.165 100.49 349.615 100.802 349.131 cv
cp
f
121.369 317.866 mo
122.22 315.182 123.184 312.535 124.259 309.933 cv
121.86 307.504 119.572 304.994 117.604 302.228 cv
117.432 302.235 117.262 302.244 117.107 302.262 cv
115.659 304.01 114.454 305.954 113.51 308.018 cv
115.514 311.734 118.188 315.089 121.369 317.866 cv
cp
.0696727 .617151 .575494 .00128176 cmyk
f
123.954 262.706 mo
121.932 257.769 118.639 253.071 114.393 249.84 cv
114.246 249.83 114.086 249.825 113.926 249.82 cv
110.781 252.329 107.946 255.215 105.631 258.505 cv
107.751 264.416 110.449 270.119 113.665 275.513 cv
117.873 272.086 121.567 267.571 123.954 262.706 cv
.0746166 .874205 .873228 .00671397 cmyk
f
114.235 273.168 mo
111.438 268.33 109.059 263.243 107.149 258.02 cv
109.132 255.296 111.58 252.736 114.437 250.399 cv
117.998 253.244 121.022 257.333 123.021 262.011 cv
120.937 266.097 117.856 270.006 114.235 273.168 cv
level3{
gsave
clp
[-2.89088 20.9412 -20.9412 -2.89088 116.908 246.811 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.89088 20.9412 -20.9412 -2.89088 116.908 246.811 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
105.746 258.355 mo
101.067 258.767 96.4277 259.612 91.9043 260.879 cv
93.5776 266.937 97.166 272.001 100.756 277.174 cv
104.855 277.67 109.136 276.955 113.506 275.648 cv
113.665 275.513 li
110.449 270.119 107.751 264.416 105.631 258.505 cv
105.746 258.355 li
cp
.288853 .994049 .580804 .17908 cmyk
f
113.926 249.82 mo
110.669 249.726 104.994 250.589 104.994 250.589 cv
99.7163 252.483 95.0498 256.042 91.8271 260.63 cv
91.9043 260.879 li
96.4277 259.612 101.067 258.767 105.746 258.355 cv
108.041 255.129 110.83 252.29 113.926 249.82 cv
cp
.0696727 .617151 .575494 .00128176 cmyk
f
102.166 284.021 mo
102.761 283.989 103.664 283.897 104.259 283.866 cv
106.716 280.065 108.339 275.483 108.478 270.96 cv
106.961 269.02 105.239 266.919 103.286 265.417 cv
100.778 265.629 98.2705 265.84 95.7632 266.051 cv
95.457 269.604 94.2588 273.236 92.8984 276.533 cv
93.7861 278.031 94.8081 279.354 96.1426 280.474 cv
95.5605 282.413 94.1934 284.248 93.0576 285.925 cv
95.1387 287.634 97.0957 288.99 99.7314 289.538 cv
100.616 287.536 101.282 286.023 102.166 284.021 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
70.2173 280.749 mo
77.4395 284.594 li
77.5625 284.659 77.6992 284.746 77.8428 284.836 cv
78.3413 285.153 78.9077 285.507 79.3228 285.267 cv
79.4707 285.162 li
76.5806 283.7 73.8267 282.191 71.2788 280.675 cv
71.2764 280.677 li
71.23 280.733 li
71.1567 280.729 li
70.9702 280.712 70.7329 280.724 70.5054 280.736 cv
70.4092 280.741 70.312 280.746 70.2173 280.749 cv
cp
79.0156 285.624 mo
78.5679 285.624 78.0952 285.324 77.6953 285.07 cv
77.5571 284.983 77.4277 284.9 77.3101 284.837 cv
69.353 280.603 li
69.6035 280.484 li
69.6919 280.429 li
69.792 280.362 li
70.0845 280.2 li
70.0049 280.476 li
70.1567 280.473 70.3252 280.47 70.4902 280.461 cv
70.6982 280.45 70.9106 280.439 71.1016 280.448 cv
71.1333 280.404 li
71.2085 280.311 li
71.312 280.372 li
73.9399 281.939 76.7891 283.501 79.7827 285.011 cv
79.9683 285.104 li
79.8096 285.239 li
79.6846 285.346 79.5776 285.438 79.4634 285.504 cv
79.3198 285.588 79.1689 285.624 79.0156 285.624 cv
cp
.749721 .679194 .670497 .901457 cmyk
f
83.6919 298.359 mo
86.7163 293.582 89.4116 288.637 91.7026 283.477 cv
91.6401 283.459 li
92.0142 281.986 92.562 280.548 92.9355 279.074 cv
83.2451 272.61 72.376 267.688 61.2031 264.395 cv
61.1157 264.419 li
60.9878 271.981 59.6006 279.521 57.0005 286.623 cv
65.4229 291.43 74.4302 295.485 83.6919 298.359 cv
cp
.0614023 .247898 .95169 0 cmyk
f
57.0005 286.623 mo
59.6006 279.521 60.9878 271.981 61.1157 264.419 cv
56.9595 265.518 51.8237 267.338 48.3408 269.831 cv
47.8306 276.387 48.2363 283.197 49.4888 289.652 cv
49.5884 289.701 li
52.2544 289.219 54.8164 288.173 57.063 286.658 cv
57.0005 286.623 li
cp
.199557 .566888 .97763 .0466621 cmyk
f
83.6919 298.359 mo
74.4531 295.492 65.4678 291.449 57.063 286.658 cv
54.8164 288.173 52.2544 289.219 49.5884 289.701 cv
57.8691 293.737 66.1499 297.773 74.4307 301.81 cv
75.5591 301.434 76.5083 301.17 77.6362 300.794 cv
80.9937 302.996 84.6436 304.575 88.522 305.614 cv
91.6357 304.601 94.1392 303.414 96.9565 301.806 cv
92.8267 300.294 88.9717 298.044 85.624 295.192 cv
84.9941 296.255 84.3545 297.313 83.6919 298.359 cv
cp
.302678 .695705 1 .225376 cmyk
f
102.785 289.226 mo
99.2188 286.748 95.9175 284.496 91.7026 283.477 cv
89.9131 287.507 87.8706 291.402 85.624 295.192 cv
88.9717 298.044 92.8267 300.294 96.9565 301.806 cv
97.2109 301.666 li
97.2109 301.666 102.395 294.071 102.785 289.226 cv
cp
.0614023 .247898 .95169 0 cmyk
f
64.7852 265.511 mo
68.5015 264.475 72.2925 264.483 76.1255 264.918 cv
76.4346 270.641 74.7388 276.406 71.1689 280.89 cv
70.7764 280.858 70.2192 280.938 69.8262 280.906 cv
71.022 276.792 71.7402 272.735 72.353 268.495 cv
69.9624 267.417 67.2651 266.354 64.7852 265.511 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
76.127 265.027 mo
76.4067 270.673 74.7354 276.35 71.2407 280.79 cv
74.0088 282.442 76.8423 283.981 79.7202 285.434 cv
80.2065 285.02 80.6553 284.397 81.0298 283.957 cv
81.5444 283.352 82.0278 282.72 82.4775 282.064 cv
83.3779 280.755 84.1445 279.353 84.7627 277.889 cv
85.6157 275.868 86.1865 273.728 86.4341 271.548 cv
83.1235 269.203 79.6631 267.016 76.127 265.027 cv
cp
.68069 .454383 .523583 .190829 cmyk
f
83.4268 272.497 mo
82.8188 272.131 82.3027 271.59 81.6948 271.225 cv
81.3931 274.622 80.1621 277.933 78.1704 280.701 cv
78.5796 280.917 78.9146 281.249 79.3242 281.465 cv
81.6265 278.906 83.1572 275.776 83.4268 272.497 cv
cp
75.7471 279.735 mo
75.248 279.494 74.7656 279.203 74.2666 278.962 cv
76.2842 275.917 77.4795 272.332 77.6934 268.686 cv
78.2095 268.953 78.7109 269.263 79.2275 269.53 cv
79.2773 273.059 77.8521 276.903 75.7471 279.735 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
50.7642 271.246 mo
52.2207 272.125 53.6768 273.004 55.1333 273.883 cv
56.0576 273.076 56.8696 272.045 57.5283 270.943 cv
58.0991 268.608 57.9761 265.985 57.666 263.657 cv
55.6689 262.671 53.5293 261.743 51.4307 260.836 cv
52.1587 262.102 52.0986 269.45 50.7642 271.246 cv
cp
.68069 .454383 .523583 .190829 cmyk
f
100.629 291.313 mo
100.343 291.974 99.834 292.389 99.4932 292.24 cv
99.1523 292.092 99.1089 291.437 99.396 290.777 cv
99.6831 290.117 100.192 289.703 100.532 289.851 cv
100.873 289.999 100.917 290.654 100.629 291.313 cv
cp
f
88.5259 294.282 mo
88.062 294.932 87.3745 295.137 87.1328 294.858 cv
86.8853 294.577 87.0693 294.012 87.4326 293.499 cv
87.8013 292.99 88.2778 292.635 88.6235 292.778 cv
88.9644 292.918 88.9912 293.635 88.5259 294.282 cv
cp
f
55.1333 273.883 mo
53.6768 273.004 52.2207 272.125 50.7642 271.246 cv
52.0986 269.45 52.8447 267.218 52.7002 264.986 cv
52.606 263.528 52.1587 262.102 51.4307 260.836 cv
50.6333 260.491 49.8413 260.148 49.0664 259.809 cv
46.4966 261.492 44.4741 263.997 43.3701 266.865 cv
42.2661 269.732 42.0864 272.947 42.8633 275.919 cv
45.3555 276.999 47.8828 278.355 50.3745 279.436 cv
53.0879 277.958 55.3682 275.806 56.7671 273.052 cv
57.1025 272.391 57.3481 271.681 57.5283 270.943 cv
56.8696 272.045 56.0576 273.076 55.1333 273.883 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
43.561 274.897 mo
42.8647 269.912 45.0615 264.627 49.0864 261.604 cv
50.2461 262.044 50.7178 263.532 50.8594 264.765 cv
51.1162 267.005 50.5337 269.331 49.2515 271.186 cv
47.9692 273.04 45.7476 274.348 43.561 274.897 cv
cp
.907713 .796078 .509636 .614374 cmyk
f
46.4409 273.707 mo
47.5522 273.053 48.5459 272.206 49.2515 271.186 cv
50.5337 269.331 51.1162 267.005 50.8594 264.765 cv
50.835 264.553 50.7964 264.333 50.751 264.113 cv
48.1895 266.62 46.6255 270.128 46.4409 273.707 cv
cp
.550195 0 .358099 0 cmyk
f
103.707 282.593 mo
101.83 280.925 100.215 278.923 99.145 276.651 cv
100.877 273.398 102.226 269.942 103.156 266.376 cv
104.66 267.817 106.468 269.738 107.972 271.179 cv
107.738 275.234 105.854 279.144 103.707 282.593 cv
cp
.68069 .454383 .523583 .190829 cmyk
f
113.439 252.417 mo
113.997 251.85 114.603 251.47 114.917 251.674 cv
115.228 251.871 115.063 252.681 114.403 253.355 cv
113.745 254.032 112.94 254.218 112.734 253.913 cv
112.522 253.604 112.887 252.988 113.439 252.417 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
114.624 270.659 mo
115.226 270.094 115.92 269.854 116.175 270.125 cv
116.429 270.396 116.148 271.073 115.546 271.64 cv
114.944 272.206 114.25 272.445 113.995 272.175 cv
113.741 271.904 114.022 271.226 114.624 270.659 cv
cp
f
62.9229 266.611 mo
62.9521 267.243 62.6729 267.742 62.3018 267.727 cv
61.9307 267.711 61.606 267.24 61.5791 266.675 cv
61.5527 266.109 61.832 265.61 62.1997 265.561 cv
62.5679 265.51 62.8931 265.98 62.9229 266.611 cv
cp
.68069 .454383 .523583 .190829 cmyk
f
83.1499 295.199 mo
83.4424 294.589 83.9858 294.278 84.3013 294.472 cv
84.6191 294.666 84.6216 295.24 84.3618 295.782 cv
84.1006 296.323 83.6504 296.68 83.2998 296.553 cv
82.9517 296.427 82.856 295.809 83.1499 295.199 cv
cp
f
192.947 280.677 mo
190.526 281.99 187.957 283.587 186.167 285.587 cv
187.204 292.071 189.896 298.632 193.234 304.202 cv
195.252 303.607 197.236 302.926 199.173 302.147 cv
198.571 295.548 196.61 287.281 192.947 280.677 cv
cp
.0614023 .247898 .95169 0 cmyk
f
194.004 302.235 mo
191.016 296.986 188.889 291.341 187.939 286.13 cv
189.212 284.883 190.831 283.808 192.273 282.958 cv
194.802 288.06 196.666 294.629 197.397 301.062 cv
196.295 301.478 195.161 301.87 194.004 302.235 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
192.947 280.677 mo
192.935 280.653 li
186.838 281.271 180.056 283.38 174.65 285.587 cv
174.65 285.587 170.528 287.735 169.099 289.334 cv
175.083 287.676 180.871 286.308 186.339 285.408 cv
188.121 283.493 190.601 281.95 192.947 280.677 cv
cp
.0160525 .0600595 .744472 0 cmyk
f
186.167 285.587 mo
186.339 285.408 li
180.871 286.308 175.083 287.676 169.099 289.334 cv
168.999 289.443 li
168.819 295.703 171.072 302.148 174.475 307.405 cv
180.757 306.993 187.147 305.997 193.234 304.202 cv
189.896 298.632 187.204 292.071 186.167 285.587 cv
cp
.199557 .566888 .97763 .0466621 cmyk
f
191.732 286.068 mo
193.615 285.558 195.497 285.047 197.378 284.535 cv
198.665 289.427 200.617 294.261 203.163 298.631 cv
200.598 299.419 198.245 300.224 195.679 301.012 cv
193.079 297.083 191.332 292.731 190.431 288.107 cv
190.901 287.59 191.263 286.585 191.732 286.068 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
215.048 274.349 mo
214.946 274.369 214.827 274.397 214.72 274.42 cv
212.692 275.642 210.764 277.027 208.973 278.575 cv
210.246 285.268 212.417 291.821 215.457 297.922 cv
217.533 297.252 219.523 296.49 221.28 295.64 cv
220.793 288.246 218.881 280.689 215.048 274.349 cv
cp
.0614023 .247898 .95169 0 cmyk
f
216.311 295.887 mo
213.826 290.634 211.972 285.036 210.787 279.213 cv
211.928 278.277 213.141 277.392 214.411 276.567 cv
217.202 281.686 218.961 287.872 219.54 294.618 cv
218.556 295.055 217.476 295.479 216.311 295.887 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
208.973 278.575 mo
210.764 277.027 212.692 275.642 214.72 274.42 cv
209.887 275.457 199.768 279.021 199.768 279.021 cv
198.534 279.882 197.632 280.886 196.784 282.128 cv
196.784 282.131 li
200.852 280.968 204.919 279.805 208.986 278.641 cv
208.973 278.575 li
cp
.0160525 .0600595 .744472 0 cmyk
f
215.457 297.922 mo
212.428 291.841 210.262 285.312 208.986 278.641 cv
204.919 279.805 200.852 280.968 196.784 282.131 cv
197.758 288.562 199.837 294.824 202.903 300.561 cv
206.787 300.202 211.308 299.26 215.457 297.922 cv
cp
.199557 .566888 .97763 .0466621 cmyk
f
218.087 292.504 mo
220.402 291.583 222.795 290.548 225.11 289.627 cv
225.229 288.694 225.212 287.671 224.74 286.857 cv
223.015 287.26 221.373 287.553 219.647 287.956 cv
219.6 287.08 219.856 286.191 219.81 285.315 cv
221.561 284.625 223.312 283.824 225.063 283.133 cv
225.032 282.261 225.136 281.337 225.105 280.465 cv
229.229 279.009 233.49 277.572 237.614 276.117 cv
237.697 275.049 237.518 273.866 236.88 273.005 cv
233.666 273.961 230.709 274.94 227.495 275.896 cv
227.072 275.359 226.709 274.826 226.286 274.289 cv
222.103 275.61 217.919 276.933 213.735 278.254 cv
213.454 278.589 212.899 278.858 212.619 279.193 cv
213.382 284.043 214.61 288.664 216.188 293.074 cv
216.669 292.934 217.621 292.688 218.087 292.504 cv
cp
.85919 .688991 .469245 .380224 cmyk
f
171.061 291.027 mo
171.124 291.606 171.005 292.157 170.654 292.287 cv
170.31 292.419 169.811 291.938 169.724 291.18 cv
169.637 290.422 170.015 289.841 170.38 289.891 cv
170.751 289.938 170.991 290.448 171.061 291.027 cv
cp
.68069 .454383 .523583 .190829 cmyk
f
190.869 302.421 mo
191.11 302.948 191.091 303.508 190.771 303.697 cv
190.453 303.887 189.921 303.581 189.646 302.982 cv
189.371 302.385 189.485 301.782 189.835 301.664 cv
190.188 301.545 190.625 301.895 190.869 302.421 cv
cp
f
199.293 283.974 mo
199.412 284.475 199.339 284.987 199.008 285.162 cv
198.683 285.336 198.151 284.971 197.986 284.293 cv
197.82 283.615 198.124 283.047 198.493 283.051 cv
198.867 283.053 199.167 283.475 199.293 283.974 cv
cp
f
213.558 296.581 mo
213.821 297.245 213.652 297.344 213.736 297.775 cv
213.742 297.952 213.475 298.144 213.086 297.978 cv
212.716 297.826 212.444 297.423 212.317 297.104 cv
212.041 296.446 212.095 295.798 212.437 295.653 cv
212.779 295.51 213.281 295.925 213.558 296.581 cv
cp
f
237.271 275.788 mo
237.282 274.975 237.069 274.159 236.66 273.456 cv
236.287 273.725 236.147 274.206 236.309 274.637 cv
236.471 275.067 236.909 275.504 237.271 275.788 cv
cp
.907713 .796078 .509636 .614374 cmyk
f
224.708 289.293 mo
224.857 288.66 224.793 287.979 224.529 287.384 cv
224.211 287.569 223.944 287.903 223.96 288.271 cv
223.975 288.641 224.375 289.135 224.708 289.293 cv
cp
f
225.786 276.283 mo
225.719 275.939 225.866 275.612 225.798 275.269 cv
222.112 276.304 213.556 278.641 213.556 278.641 cv
213.647 279.605 li
213.647 279.605 221.849 277.356 225.786 276.283 cv
cp
.68069 .454383 .523583 .190829 cmyk
f
213.556 283.305 mo
216.658 282.71 221.21 281.685 224.233 280.769 cv
224.269 281.321 224.307 281.899 224.342 282.452 cv
221.252 283.537 217.408 284.682 214.318 285.767 cv
213.556 283.305 li
cp
f
215.917 289.417 mo
218.325 288.661 220.796 288.103 223.296 287.749 cv
223.157 288.122 223.072 288.497 223.218 288.868 cv
220.771 289.708 218.207 290.718 215.761 291.558 cv
215.479 290.891 215.634 290.083 215.917 289.417 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 23.0.1
%%For: (\704\754\750\762\760\750\751 \712\740\753\750\755\750\767\745\755\752\756) ()
%%Title: (1811.w013.n001.88B.p12.88__01.eps)
%%CreationDate: 11/8/2018 2:53 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KB3X-3g@4ubYA=/jdij7:?@X<"=G-eY!R_>f[K$PB4"f3MoATN4mp0NNfbBA#jOe&ba4Q\I1O!an)Vr$g\,+?Q]m8tRrj,j-
%8kXo5PjkgQq8^0qcg&,6pW=7[X4fd2R_>7eX.".B6*&DuFI,Y:ca[-3MN?^i>^E#!)QgbHINu"e_DU2)GnALF8_!$q`P%F7<p63*
%5Sq3'_H"q`IM^$`RajmBQL)E[8T!Jrc?JN3I6^$jP$S[7K2GX%.+ikG+qG-u>db*nel;ERfrjTYoL4=@nASC,_mE'X+$W&L:UXtc
%Z4.7,%JVbEfs]%q-GC5mrcoPTnMVqQG;![NS[_a>2$"0e!FBhdZ4nWUEPKn26qUT4ptD2j@2B<Jm5?$MdT%'E<i)-,?MmH=dKB'J
%UuMEUg%fR]>q>.cK?)Zu$#pB5)d'm>'2E?&!qk=KG[uhb,dqeumBa<Dg-*K)4M.5U[2X*=+mI>fV/2H`p`of+2?pTg_^3ne>?5I[
%dXVF#al&d0r=Ws'a\%$3PJ<DVc]Yf(FG'X>S_d]O^E=p+*cZG6haff3S+Rg&b8n.;VQElNBs<8HbG.OS9IOI/TYI5?IbZqYH6E3h
%7N]1J>]S7i?M;]'j.Ao@.m%h`[bFAp^\*<]7?gGq<*@gh(T;0)B#t(Q'<H;GP,dh.(<^U#&*uUUD'Sdu5f0ulp#C@>)2O"];ha_E
%GNuT+m,t4Cm,[$+Hj`aOnQmk_9%[/2+P=j5!H)cAM%TGWqIbT.\;l6k*-s[PPFhh7@GHe"\7ku$c]\<mr1?.#9*P=Z3rZN<r9Lrh
%2[JJA?,o`Ha0W@;B6Bck7M/qOQWY(^ZRl#c=kLs(YaK&kOmLS?Z&S'Y)]/M$jfXNd>Simg2uJTYJcM8D!F?ZIGU<^#9bcR>.'bD8
%4Gp@/'_+U#1kX!`nX+\>09t^C*A5ACCkd2n?YkIA8Sn2B,)(NO%3gLU$$SrN^)6CW^\A2!_S=_<'8sIlV!p%rNaM90ie=-_9c4"K
%L8a'<C_K6^9QGu?B1as3R8isJ04jJf!=#0ij7*G#aXYtss'[_%&cZ<AbXfaDcO%VM(Mngc8kq0VpgV/Rs5G\"OQ?KB$K1Fcrl&K*
%,Q;7dZFDT.)$1dVaoVSs,tYD&6"J\Z1FA]h%:d]i&F^)HO3E#F[W)uV&)/4Y;FV6a\stM<dtf7J`F^[eLa1B&0?1cZ"qcO3V3FVI
%@e0%+/Ep'&V9hcD,N)^8==Bu.8DZ,p)*Xo\O3GNei$DkYILJCuPN-`Yg]=&1Ifajq<0h@_4VNX`M!,q=Ei/e_%9tNn2q'QSX@s.,
%d\RFaP":pPdNg\7j0kb+`XRSmP*7NE80Ym8+NonXA%koB(&E]X_GmPp+8A%rQ[SEh_r0G*-i\hB9p6*!TD[$Dq02PSru?fD4&.iJ
%,Q;s0T?9@nTC;C?m$%Icj^H5cZ;:I$WUTBCPQ*)r5@N`;L\R53bJ3-lr^7_`,;@=iN0((1Y80Qu&qrkacZ'B>1#48-.R7FoZ_L@e
%n[sd_b#>"%K$EfP_8Qb2K1kRXe?k+4"d*F&E%1E"C,U1n5e-$(GW@\n+r<3E#I,3d#<RIZ?+_"\'tCad3:O4:gCCK0;^:3`1U$pB
%YhdA),SUbBeSOSA7=fG`#J,'i)9!?nU!1>[)I3a@TP$?@*SMY<lW0Z7nI?8Z10m"tLq"$,jhdoqYptPkp'RR^kf6@8dhZH)KH\]3
%6/er]7BUKjXRhNu\JmOiO(noY!rh:Ym0\j<b&_gYW^-%^*<fa`,(FlK'.=d!3/UA=_@Qhd+/pAgo&I:r*"jk?fLA!+`7PP',of#)
%@rbh%;obI@)pf]IfoR%TOi9F:OegYb.jD\4FOUBc&a:96_pOSuE`C'ZL`BeNiG4pA/UlCXb8emH+lHd6NN`FIMD9K51=:W58bT_1
%+=M>m6=Zd&0s3JKI4@3;63Pg3R3&d[EMg2Gnk0P@kQ"!S+@%HR>@KFYbRfRCdbT+1"<EPu%$9HS1l:dZ]AtHT<Ib/c!\S\Y01&'4
%*hOm4<3S+$8+n_eRY*An@.0\f,P@0C-4!T_#,lO5MernR<@alXN<4_."c@mEi38$1^sXV&&*GDfQ[CoYeA*a\'*a]hJ=/`C!3HiC
%+L;<1)Od[\A.4S=L5BR4E[1qh")L+rAUC.3BYb914H=6@'Td5qLVQt.Ccd`VQomWL'GU_b1F.bp5m7hRQJoG:O)EoLZSgqln-n3_
%K_Tct'6MFX3NTl,X?=H[E)7J/"<i?DaD5@Z9M@r(OX>ZOen&bD*KePn*&YtFGN,L$Zrqg=4.ocSNR.i`:B^>nk"/OVGDhD+.O+tm
%!jFR<c-c-IO`+%gM!ki>S,ccDa@+3c2j14nRXgjHctSjo)$(9TK\!SnF;jWL^^Gge77-GC!K3TqH\8cR"#s:83a!G&8/)sgPWT&U
%:RlQD9:4!Q:V9Zl,X5#='3Jo]J8"Jh('0O+gG`-jJr@MHS3Tu)7jiSg!gUQB)+7@/iigi9'5X9-HPV\OhXK>8DM"\pe5jm%VOOP3
%)_"?BoKPaZ$F1HW21c)6+o-`20c]"JOHl7:@`a0/H8liQ7VX[^!QiNXUVQC_e+Ods5m0k%`OC8Y^Q;_X8j"Q(a]`+t6OIUuWBu7>
%6lWKU,(i4"$IlKcYDDNgpc9DN6rV<'+YEki%&2Z<80!c?,V.rK.n*)>C5/JcQiXJp/=_XT%RFZeQWIQd8sVo'0LEVsK`V7.2it+m
%6m3K[5iQ^DH5jYA3&!T(oY;IkN(=&r)Mk*rWo9)B@6i5cJ\hCq/J+>-UM0^nihOacP=Z\5Xq8W#3ZH<7!Oj2Q%2pfD.7+.!g^.4/
%FV0<jn94>dGZ,l?Oq2#u#eMSq)9\mf*&nt`@M-"8b;>o*h)@/(m#Y8q%4su"U1CM*A06TR;KS$-Ba24l(ha;5f*!_<0)UD+VVm+q
%_$MrY-_PBb`_EPI@&t%d/t!.o.RPDS$ZP\<^6.$!Y$iHAE+Fa`MFosDK7p3tr<n-Jk0Rb8JR2D+gdcj/Thl%S*_DQ)A'RDaVNM!S
%@UhjN/e%jt:mVN0+(-7Z:jp.E\Hj]UQ)O4NlNpN)%)YFUP+p*&cNG"Oje*=$#WQ2srJV&?$QR3s;0NHPQb7bsq\0@8Cm+s$\4B7^
%2&/rq:r=\$7$=O=JfD!U7jl11#EQ46KFBL)h!bm9]\qdfl*-TAB_P>W88Q@-,"3rk`kP2SpiP.'7mq2>-c*omG=7BW?c=j6!hqqL
%.?3j6\dpRO-4s>&9Ic%I5$ZN;d[3]0V&uKo!Jef/.@WS1ebASMbIk[LP"AK(D07;EMU6;sW(:]S[)0b83!@;m:5T$l&PPe\&6Qu[
%1Q%*P*1BEq8QR3k2LCWaONBm&[=*EGBo*msLq!a4n2mMc4VU?fg^j0=T;5XY)2<(p!3jJj[:_;A&K])Z;%thlhcbipm\#s"-:aPn
%o?+Gc2?`M%AS;]iFAUbh(C:<rF:G<K^qu!T<"-'T%]%Ff8-nIW:kJdl.0QiM=V`D@GomSS;HP&:OBO=@(t_7[Eb,6..G&N472_H/
%TonB7(mZD!4GSd7[KimpM4l?3a@.'7U*GGQ)3.Gm$0!GM-'hu4#dS(-#('U(j)Oq69SRC)3J_@!^6&g2nt$:\="tJp&7#]A9U.$P
%9o8QJ7]m:@.W1]S6>EK2AAn,%dkXa@LIao8RJ[AIq.(E2J]oa0i@8XCq8c1eHl33'k"QQ/n0m\,,Uo!E^mu^paMT3-;mGDbfk(45
%NuB,]s5oh);!IOU'Q4E";jd2S4q4JU`W18sUU`uMkAh,EO#E..24^S)fVt(m3iIJb7]ho*'Nl%,p^kn1q[H7>)57TR/^nnG?'K(Z
%LhN5B-.J19#5S=6d$T1dTn^5=P,@O`^*:4fkpe$5e.FGI8O\ZlAnc<Ce'TU)-MScNGmnnn"q+pTY\(5XUt"07[1giaZ'GAE#PrY/
%Eak32ROU.TaO;W-[.RfL2%_HtA0<Wn=\Ym"A-bklAG#I!Us5K;!SK@nc66#3OEfracD!QseHLa/$egpIYZ35g"%`SpOY0If#4cEt
%*!G"6&5XPneuK?Ab,ZqK"D!4Xfa&IZ(#K-VL8DJTppsn6i$*S-'O"%,<\k%mBb])%E[jVk$MnpF'XV>NZp7bAeULI5ZnYr#9i`PW
%!i;$COhelu*=WZnc3V#-huR@V9W?=q1.56Epde@>(YKr7GuuaTRTELhe;8u[qAtbfMI6r&/WPd*4f[F+Q\roMK9D)-P/=p=.7KpB
%!Y#/oRKBcPP.'q@oG58WKo(^Pq);'Acs[E(Zh0H7<FGtrNZ0_o1oW_L9icD(nhu2L+SAh]i:'5]@n#C77@Aspc@G/3/B1I21'OL*
%'JbH,TAXK`P-V%?l(q)LF8h^e+,OUPe:W_o"sa7\2m^.:<J$f.,RYt7PBDgI\lt4Q7N'.C*iYr8ON^TX88'dsju3Z%Qn=T2bHjm3
%$&l`\RC;`O_Tn@17lk-FCp86dW&+i[APje;`^6P>m%dJV+haTI4CFgj:l[L$S30i*UG+Fn6s1f`KceuP$fMeqk1kW2fo5o_Tdgp1
%<^?#s5W/$k3%u'Q`@C)7f],>$@T"OaA>)u\M.@k:Ee&n$1NXh,mg5XM'dJ+!P=:dt_W!D-Q's%6D>R"BQLh`uk1C2=RjWg9L_;3?
%h&jX8,U*EtVP7\gP)i+K(f=sGiT(tM8(=A-&Oe<?1c,o,FBBs(kj8S2l=c($$@;eZAL]+pY9WU=Eo1&V;Aug:V-KE:MWq7!ln'+f
%SMJ+FE;b;R<)lPiE"bJZ;%5fm!-TGW5+1n4igDQ-i?Sl'.dFVr#mWk<aO[Y6-P?`!J>aTEk\Isll%URY&KrlmLu6'#R$,1<c_P$'
%#0eU]4&V<YEJ2H@&.Xj^1!P:*&7&!'5hJ);Ml/ILN2UtPo\eZ!TSZWE+;W4^?l95$@H=A7*03s=OfSC($s<P\3T9#((T4+(6pMbk
%l%O,4PY76c:`oc)'LR/),tpT><MdO]^_c.67Kt343&60KaDER%]!?pER+(,W%47F!&h&6s#'pAhh]U;\-CI"K$B)-r_@r"Ii$h=A
%`2UgQ[Bk[c9oap]+%Kt!BN9fE4M%/o.""W6_Gk+_/-Y::GcjO`N02$A!]fRerkPP,OX7h`nZ<bA&O]m+++-/M0GfNk<p*jAPtE3W
%LNPPIPDUL*0er3\,reRlW!Fb-%P8P6SlG?$@e:!S*;Du9dPMnS'&ZXh.Kk?/f#5d'L$(Q"Q0M4#(5D/UO+gJ$<>D+3Tc,EBGrGKp
%$B5O^@-s$E,gRo/U6q=JFqioGbcJTkBAmk'!5CQ!GqR.G5^X!#/;)=2R0at92Opf<S.Ngl#:a8_;d8F)%#:2N!eQiY31bJUE3>;o
%BL[i0a%EikP(&1jV)6+:G4LRlNCq.-!$-J`^.ujMM#jqZ;LgIo7#&V!S:BKK!D3RX1/sl6Al5tQi6Vih:H!DIfQ$%)Fb9c3RTtAL
%4HY#<=HS\N3?!*2hT_D`LV[ummF0,`:Kn`lUR3EJTYR!L)2YL`6o>IHU!a0N#*='bHU@k&m.VK*E^PT+=A;'hN-6;H,"#)@%]2>)
%+^r.V6KecpPYq^M!gOX;EVRI]6\Qg-e*"S.PDk.#/1$!L"YM[C*'r6t;BCH')HR5#o17mCc/^].p_S]8WbADtJ>Q1d>A0P*ddfeK
%,g1[H[`8#3o.a*n:Co7n'R^K\(N9AQK"S"c)cY:,KQ&=X"AOFo)2lsLE7Q>C!@(9Z'6$#*m8O.[Bp1gBj4'?LEeZG^O:-b@ELuf2
%04W/P!fa;j=(>CeFc,m6DsTrg%QqlX7I;0EG?d/o!&i/3-L#&7!.lWW:D_c:rd!1%U_3,gNG49V\sUa"nO'HcJoTk0UHh=H-IN?.
%N0jAb%1sCd5_NmQLl`bK/.9#ifN"L\_%?d<JJ2/q'8rrk(8_Q[d8G\I&tQA.1i`I"p1RSUP9uG,%TjD#5\Ii!o`^Nq2,L!3WtRU$
%8IgnU+m^n]DS]lT4Ij94dr+[m/IKp>l%I%i\`<t5PU/Z8a3ag,RRi9e.nN=0P$*q,9elkm)DjZjPAdAA&^<o#Epa&Y634Vk@??Jr
%%+f":XtmdX:s6;ghKe28R3nVfV#X#]J^QFH3Wjn#-07r`@,jpdF#^mrcC@$2'd#OXe\[inFLeU_.c`>Z#U7_BNO91TmP,:43@QMc
%<+M+eTH`A5>Gcr`N=D90e:LRf0(Zq>(.gOY9V[CV-a:us.u'qu(0.Ds]\!OJ%)YG0V'^;BCq%Pr&YPekW!%C#ihtuWHloDJ.b8l5
%>a(t\%L8gUo*Y'ik>1SGcor.Z%rBDmj5?Z,'.XQ;P(O`Q"WLUIX]UZi;O`ao+&/2!*k&pT!9ih@JfL=EREjXb!PUR<U:I6/$Sj^+
%6H7/gH29AEr4igk#o5:u6O']_fKIeS8LBguNpN?J*ddV`EB-K_m)^h16(ru9>r;V,%l/G?(GB_.6FTq<ARGpRVpsF!V(H2(_aSGM
%MpR-U9EQecF[4$%\'Ca=S;[LA6RjtGU=A,t^8n$+ds/$*W.sU%-DeV98Al!!&sgMq2*];?,U6)-#n9gQD!$<;oD$7J*m5nNN1gKi
%/+D.Z0WArR.^Ps:E9e'u]_F;5F'VID3tQ8?W\/&J&Pk$P.a.Cl&YNeTi$GqdW'd*8MK*>R!LJ>XD.("hq*%O7.FK<tX:6AuM-+B'
%,%9XdeoI%Qbs3o#ng2HQ+Kf05-l$4i0f9ccJ>SU!#;urB_Vg3VBS7aRD5gc"/=?n1^Mn!l_28HU:tQ91C`@']6=eGRW2TR82AJ>-
%:1$n&?lNS2'7SBZ.EYqb%.bYt-/e='6:*<HQ15PBO2<cGq38i?Q:Hf^.6DUl,Zg@5'J]Kj"G'L@AFX=_a0r)u/NcL-nrdP3=@L'W
%&s73C-l+'CSm()@R-_O_@Y<\`052m@lf0%=BY*OEaPR5W7n$dZ"_H;GQjKTV(%uKXofRr7.*U`5;CR2/(eY5VR%-?1e/Xor1"YJT
%H=E2_7b.%Woe4N6<,=77.XH_3`VMV-h%6NtV@Am.WnHA\9KT4s$l!-RA+S[\kf46Mjrt\pdPmEkAKmk0FbOL_(pF80X:S+KZWec&
%dW?qLs)Sd;(<AP5a)H&u8YoG=)463<BeB1@<D6FCOWp8m)TA4G3gi=@h,mpX1:+l@4'DY0-hg3BjbbE'dmaF*LO<kOGskdh,""h)
%'d;l61jMZV"l(e9q%-pf6R"!-]*'!O>!++/EHr94YX5KNMV)dCKQLeTRo=3\3s%>W(1QbVar;II3+mbaJo$<9&e`Hhe4pVq;,X(H
%R\VN03>a"eQ2D7IgLU?0^NgmO<59Y3TX=8X6jK<S>/1F0j-4eWe:p;6$4f*o&[O5):>oaL3[qcjFO$65OQ<>q"u!+'V@qARGk'Oa
%/4-EpEhp*5Mo,QU;%j/?9T;HhP6R3r_I<0B"BCR.<8fT7ni2C>V6+"a7TO!I5V0['Mros<1i+Eq1rg::PNebfbL&JY5*TE"\2]Ds
%7M;%8;KWSPP7OSQ,A*sk;6"'WJKQW_hrX2i.T$:@i$'XuMkEbHJ3o/FeAVtb.G>81QStH,,gMZ!=qDu,'R=](K!Q5!)H1\u#9KI;
%)Td\!L7$PlY]t1N-)NaUek??D'bVGm7RNVq9g(JZ)D3&RYu&@9M=SoI#q$M,;P9jZpY\*3h$_2"*dCW)7YqG<AM>f5UC1DqOB.(A
%CbbUmOs2)h%&f%O=X8r`Eh:u=?@Mu0E2ZA4&Mpcb4OqOFLWaBo2GYBJ,E=Hb2@52b;4$]@CnuU`B`FLMUp*2#68jT"3hfGGVk`Eb
%4%gVs'D%qB^Z3s9$RCI5MP6N"Ld@cPIaD#I@A0+k/Y&Ka1^\7ec/W*:-o)sAgr^2=Us&I5VJSH,-[=q!"@t(hV`/;j>()*A1!1QE
%`N#>penNM[(qqgs.&q;o7conc*'\'HGSXEP'ZUuQjYSb1nH?#s[LcT1QFtWF@k)<"J#@[Ys3[99R8'QY8mWq;36YEokFa]DaZpYK
%4]PWYOgGI^=f@LYO<:pYb4(!?<sgO_/Wrcq)4IY$Oqg*8SVS?3aHMgNo?(=Ij&LKf;%9cIRTA'=cK`O"LQ"`jFIFbj:sWmb<gb73
%/4=Z%cI1YW><$9sS<l]*SueUs9g"bTBg]FM5o-9;>\I5D2<?$E1h*>iVO/':-&L%`Wn7lQWgJtW6@)KY5^X>1UWD/g_t(aq3^m$`
%Z?EYn*TP5B2F;0#Q6rE?fb,gZTM&O<PGq6kKbr$+Ym.'RPW.9sW!'7R3j"2P8X06;;af-JJf:O](fX(Dd4'0qL5a(dXhG&^V9C/Q
%-(kMX0*L<1'bNE]F)jE?`"`ukE'jD?Y[=D$6"k"qD-iO_!6HFqhU_0aFC>j0Em:D]g@2d);KOdf&N4Vh#qEC-WrAg%#EbC);.sBs
%MJ@]@BEj`H2/,5WG8+@K6RMHOoS/\>Q2!_8VDH39#YIqPNho$M;pLWJ5r"_Jl'/7gMH!qYDt/pWXb2OH9NBkX+`@!nWK8[+$6rc8
%PL@?An'tibTQ=O<7+>\K?,Z.3h]!fgILI%RRPodFm>9&QN%VJ.ghancVg/8IT&Sc\:us`9E`Rb$\&RBq*ocUD\KI@V64aMTAW[7$
%>fpn7R:ThoRL@26.)eTN_mqfI0!<b4rGjlaV;j0[<6`tZSEqgSObG-X/-"t;&B::H3C]@YBfeF#.N"VAJ#q]a9'<++51&M-s)\>G
%?RBE<M6%bF4Z[2s67[9);qM^NRX(7/4j]p-S^u>$D(bQ0d*\d)n>U`n6A77Fjamls3tTM#\&\4oE+iLmo;HYVGM9hADAk*8JWogX
%bo5GO/\VFk1V=qRn$;)&Y]i.17dF0Hc$n$M]qj7us2fJNdt*.</\%J1`#HDir8T)qEt3@3I5ndoC%^4"c(ij^J'<2GemVJ1X>c=U
%T.JCCq9n%G>ua)QVTs,7qP7=F]JXrOE<G&5*&HR&[]'A=Att[1fldnf\DEf!1%O18d]8u;UTq@f^GYkWUtTU,lMjRnV<u0=n:Sa3
%o&H\H`j,$#$0)qChUM%BM,+ts32'q#)Yi'?j/)qnqG,']!aM*4!@!+P"IPp'J(Us,A:9ps!b)EXi7!jR1J6G(V>2?M[+`SGm^<B$
%4,p`fGB-CQqr?RgMh*jrI\)b=6)L:u=g$gWHlGOE5a(!9680dXDB#NZs)Cf,7lJGZ.PauQLc\2J*r7<M$\95j:.fs[C"BlqS@Y`F
%(D9a<e!06^J=D'%O&Q7d+Ds%$a.9_g;QlDa:;;-Rg2FA;^ApeVa(<A,4f<+N:c+#f.]#Cd$2uWD9SRB#/e9UdMpN4p5!R@'>E*t'
%/2K<KTR[Xj7]+:nJ;-_uUWm)\=#'iRS-;`W)K^sq-e)%+9W2$P>9GL+EQhBY'&u`j?>Us75J+V)R',F4+._P;PGRO\1/64R"(t3f
%-lFJ:@#W_%0gO@MapgZ`^$=4LO`31d-3R7W8?'KE)OILOPpC,^#usSc:@IGVc*3ki@YCPg)H,;n`Zcb6V.se),kN^D]SU#'2(_gC
%Fbj`aEOJrWg&!:S^hpE,35R0hUQ=]b)UN#u?gf9\UoB"-0P&ZU8AQ(na>k-sBP]h#46q,EK>9U"pc9K]0.m.uLK<u8q=o9L'A)L\
%ShC0o[NbDS"4L_sd'TF4D2Wh\9Q:J#@fmRVKc>s/gQ7n`E?e+,W@C1&C\oV2,lkXPk8tfGr+#EG5BKD>F\h`T8Ij]Zd3F#V$;N>q
%RK9F'R..E>AK/.*cDAL;^(D2*]INQ2YS)_Z5*c4_m5q7)?=oY'"YUfM1L,fh0@0:L(!nIa<s;omV8,`XQUWXd&me%3#ha_,!GSV;
%0:^n>].SKDAJ&5l9tK8RkmG+'>:`s^Fdb8)QUNR]rWHO[hNNl@VX]Bn]4+9RjJ_Rrn6T<%&Vn2W\3GZ,_^f[U:?4gGl=tF%Ukq@`
%br<-B^isMW+I6=r%:4dEKm1RY4l6X[d&VDRYP>-$q)W'VLq)R$cn/Md6PJ0H-1F::!\[+>Se+Cs>cPe^=,c1V"ZT[Nmf5fdBk/-Q
%+eW'(EC$Lg^3+l,C^?ATdnO;a>*Ig'Ge'E4^3t<?Y987KpkBhWq&OG82r:ZoDd8nM1$4/&653fWW4?h;':%GDmE\#Fh`?/6kcZrn
%W5iiPbn)I<HSt36TPqUX0q*]5&8W'^-bf_66'1(]r&^,_Tmei`=%f5pIPO\Nn^kUrY(FEOb8I3(^B<[SP[&uf8:MjK$5@sPI]9h(
%PNIP[?]Cp"pheATq"Ekm"35Q3:<ag,WAT1cCNXVr:]"/@?@a=XOb%Fs+Y<Qb.f^GQ-se(1nV%gk\X,[%Ul4Ji*rC]M*:aEs5]A$j
%]i`R7,r#9L3MM1!7>[7"`=8%g<JMA///(^5Xl@bB=7q+BJJtO'2:<15eML"P$ntDg^P3-]l>(KWN>Cb$/^T3KleiOPE!r(.XQUD)
%Kc9?i`&<^Z+4r`^H((sXNj*@DfeXAE(0`L$9FBOUO=V,M-PL;/=sLV`<*1:aN2u&"_X<(bEtki=CiRf7!:HNUV!F](]!+"^Pu(R#
%[P8Op*BAZ`##[ioeB-Y&<7:MnJ-tWXi%aVt&-=jZ+B=5A^RuN"^b>l#TcH1)C-5mA^tUr);+7I_FPd(]^e/_p"Ng@/hGFY3dL:ab
%7O8MFOA>U^@;&e$fd!&(PsSM&,l?`ONK#jL5msnU_!YsQ:^-3)"m?R!FZc=["'4,rE'^rCp02YRS#.S'[MZ7=0$r2S.V$^<_Fa5+
%^gk#k*RG.D)]kAd#@)lb*&<%C)YbAmN.?*q&.4!_J=d<Pgk!(l8P>IF`J=NY&GJ?h.<,=b"/Na;WA$Ur+OgBO;8@NZJ:mqoNsASD
%5]C._9GnsW)T\;?7<G"d!7L%E/lb=lO@fVN;o:]d1e!BhAj]NX("\U0+OLs*g-N_9't4[25k]1P0p#B9Z@M6CckRC$JW"Md0BNOK
%DitpdaXaA^"l'rGr+7?*iKI&[ahuinED8_4SU@]"^)8=$re[QeP35=20SLL\7tS/j1BaO2M?T)F9J<1YdgW/Z08H&Ra:?0)L7k,-
%0o&(-8;3e#5gU)lag>Sn,!D?g6rTg0d1tj]Osrc`14?,m:,HQ4la3jaW[WPJ88G(\d[M]21e4R8J,V`uBA*I\"oXhk!P90+!qQFQ
%_7X/n+?sld&X:FOAPen]dL0E6Af9,#17B*B*(dgeqWW8D$7[5?o9<ch8nptE1.@%s?jH@hY!gs-[OAPH[XLj+4GBo%auMKb8(<dW
%H$T\t1m_0S\eF2IU,1mgYtH-8+0<6<5fNoeK&f;=$&_AIgrT"QE5X0\47G<G#T)/=R(%t'8u>L<54Db2..uM:>j?NQ6khu4KLVi>
%.Lp@DC:TFpi+36,d8aoD@TBffpgSd.19e%/8$K2&W@2@M0>ln;RY0c>GDsoF@?q2@7-D$,5PhS.IIuLJ8%<W,*-sf6;(7&N7H21%
%>p_'6,q:>/L.kDl2$"L(%RrL*8k^WZ;+3NTP1-n^m;j0YORoA,"D*nI&<4O,6RF",r^#9p\eLk81kQ/WR8X_*&/<V6Qh6[Y'MM@4
%cEep8Y[(HY/"EaF'LW'JIGe2fnhsF64K+LaBHH&mB(C[e[$+@Q,^:Lij%pVFLc!@R70'Nh_(hiLNX/3e+O!CfLVOTj8cqXsMNcDE
%83o6:jn+a8:RQT2cr?mt1=C8C-C_e.0Y'3Xj`m\qkFQq?`%oL*Nu+K%pV<ob3A1/[M\X&s<H(f.H-&W(VNeI8-LoJ">bi2*\0?0s
%:n!gB;5Tg@KgNjPR<X#[>`:*,;ao+>-<GT4f6K![Jr<cFmAKkmSq^D56Q#Cn-]21Q%$b)7biuE+!?'o48GNr:ES;sBB5jaM':):Z
%eqWg_$*?a4;iHYL%o_CpM_lC0J1W,XIP-2PaQ+:=59ZMd7VZZ6BS[4bK4aocD_QAnV(J#.A/VgEl>ELK4=>B6pgoA%Q=qF!!;_Bj
%n[gD[X=9[*7_&XM9=FGaig$B)_uJ6YV9t47[QuR,.F8[$9-c:q9L37a_/Z1OXcPUb9VaY-_F+`6E*3g=V,37=_1cUo"FA;V;b2Tf
%/0^blUSVN`Mn=<!A78>:3GCh97%9&PklU*(=]-\K12X7JTE:?-;5.TQb]tIJ&Qq>^'-p84!&_,iQ:QubPdp$EHUjr$PRqPnhX^*9
%\Ag*pM==Pn8qK#+)GYfnncQG[/G5Fde0dcdb;aGU%u:U=%KK#i4;c%k9DOZh!B;j''4)8G$m\cHGu9YBBLj9=.F*td*$OSVdSEc&
%Bdfr/kpYY].4Js[WMtM=cuSAeR*'S9Pr2LO9$0c[#"$HYFb.7</')g+'oA;O_IWKh'<`ru<E!'oC.ik7GkZ*EXJVts9N9IdeP0ar
%jV$&o4Uk?d!sa?$1.dYnO[r,d8SQ0PaUL%mN_W(/"*$=ZVMZ=!DE+Xcq2'\@7kQs0("Z<eW<k3$0s8fKIUTEKP+E%_<2g4sgj?@K
%eJgZ!@`bD;HYF@H^"_7gfr?@j4fh`Tkot-1kD3%eV7HVr24AK).IQjiotu53l->V2TqU*&`5?Gl-hTs2P;K7m<dM.#lt%R7:[][6
%r.1&Q^m09<V+5mZC%HSRd>tfb(TgGqqXI/GP'5+FN10hNZJjf1ctUn%XkZ:%7cSY[]V3Bc'L6W1osh4W_Qq?=cQi%RnY+lX*.60L
%74nZ"R9;m;:e,"rY8';3)bi)7IMT`XkP.k%AetBGf6SeJ&/":FMa9I>-F27l*;1=CZ^QiM#[]HP+DL"K6)`Jjld]^'lmQtee.*SU
%<Q$d*ZlU$(g1[RVrNkm+0E+fSWI3`GiIhh')Qcc_m5Kn^C"[HAp9C]dUX;)\]1LLD^@sqbMHJ&qp'$H#AJh@I@5'a>8G5OkN?%.`
%o3j1$g2$@CeRY5;ck^TBbp"dN3U%G]DdI$=#4^'[LWH<VcCrX#-_7d!l4h#[CH?'U$!M!/<gVD.'i:7S"9ld<UB,TR-:ant=_9V9
%lt2[AGn_mSm#5(Z2p:P7b=!Co@L2??03e,;/@V+#goc/6RH8VPcKts<n7JZU/@CtDG-f\9QJ2:#8MQJChA'9(l.n\/0\:K6iVicJ
%B]uU=6f)O[*JdoV'lj,O.W0s*2oj)\Pf7MVjtE>]S&RE/n(9b&2_R*E"-HPEM0i[GL^D>6*LF89#`Z@8bYqcIeT%@A!bc.>a+[O&
%h4X^T7Nkck)q?N";uio!l.@cWP.IA:-.R[`8dX?)n/X\oi'_99Y4T,X)3YNML$'knOr$_Nnk4RaZt'ZT+(#Xd6oa4A[=?bG`'j`s
%J]?_#r=iXBXcR+qNRK3i6/sXZ/sNo&G2kn8DYt7L/:\5+ot@k6YQ2Hja60_Q>*lgo_:Yke/8/gX3JE<Zos6tg5(VD$?)/$6$^2\*
%(uZoC$-Y=MQ]uJ)_eZVTiYt_33,Di7Ff2JM=:Ca-SX',UqSdd9mrn#:e%Zm'agM3RfeM_`Ep^a*^UiD`(5/]ne@48KbYJ+(HT"$@
%bXo,B"mSLRH3%VcUTm8e"`Us[cN,$8ai<;FM9Z,AN%nq-"`Pl!I8@msI'71`VSkP3%YuLh2o_D7n)Q%a'linFlQZf$dD+7(:?+a\
%20jNhUG>T9DC(k6"Go.a)-ho*2MXDa6_;OGs6;W*!]Niuk)a4sa:gFdN&/OpJ\'E3bor9N``ZhH=Xe$XBCj-LH/mSjnSI(WZKuQh
%D`k2@Bf9llRl?plRD%:dnJIMj#0\#&Y"nCNi*7Op)/)1A&A*I(lZ\@3@4I/c@.UWlBa%tQqU&0TRfoi?q"eS7MfA*AEFJStBf'"C
%NCL1(GH!r^V/!&.BL6,%JdJo7PO=Qd^t^'1<#DB5Kksd5RoRQ/2i_;-\<A2_'el)u$HQfW\@(n&hJ+=LPtk4]Bm&FtV,Kh3=?7tn
%eRnK\8ZeVQZhi?/,.%.!XF>>VlY!4r@-T*<DuHbEBV1j&jg_,0.Y(:BJ6rJ\J[r4!0%5Jr8o6MFm=VkB3ru$C@oN1!knO#a>$Z]`
%E`RRTo\r6ISQ$c`lhn3'&&pI)>!Stgk1;$KS\J]_nSrOO/,s<NP&MuUZV+naQW`9Y<d=H;;M\m"0"cui%+S]sKpPs$AQF&D'jbL+
%QW`9Yr5$g_n8b):bP7Umbus3c0a4@9Oml%e"mK2Nr5;Y^DVAC,2f?Znhd/&VVe)=b%4d<PPVD>@<YX48@CBU`ADf0+)ckb$NSB@E
%XIFUPG[kruB[hAjEW+=3qoh&qY[a)Ck;_5@Bel4=:"[^i\=K(5^Ne!3Gifsc/T\7(S8Qn1:=nFiC^6lk%SgLA!R9:"?Dh],VBtoT
%4Q9B<Umm\&<m'F(VJuPadt3d<_&H>3^/Kd+T=>Ds.5n020?[)hk5<O.o5`9O#@#9,r&^JT>N#=O;nVA6c)D].[_3Md%`]H%:AqU;
%"fstkLf(@8dAe#!Th(8B)e5+P6Z,M0*?B9d*bn%iW>/YE0K#_cOh3WnC\oT/-JN>W2-R+#Y>\akCrFlQPnG0R[Gu#8pN'Id(Q*-[
%(:u)TgPnko$80Aj)EfR+ca9WJKRu.J>#^^u2ppqb_-Fj:>CUgkUP%u+>\j9Qgaq3'j4=aap@MRWPe54Zp7?__SJ8Z3F`pjbPcW?'
%)S\,`dSJR5]n#47h(1GWS#+-oI$WY)5#'8W;E&$rSXUPlbT_\=L^\1bIQI^tC9"bt\]0(bs2OGLAjOgd"@]Yaka)B,]7YLjI-g20
%nd2MXcgDpJ=A(?[K7%j+h!>OAS%B/PFpIgWprD&.jHJgJB6TH`SE&rGo%>&E1Z(/$1AA!FNRLuqrd0PVM]7q$1A6$<P#!!/IZKV`
%*e+#f.&KldDUnp+O#h9g(H5[/l:'-1^2>2_C%l,kRsqPBmo;$1C)a[,"l&Fr)hf=b0[P,^JTHD+^Y(j+#,_AJKN5bV\<,G5G7OM0
%Uflch*`KBpTWAip'g@Sg8^p>GpAt(6[tkO%+1!I8ag]C#jD%6uYD^,k7n.Q>C7\1@*CZHBf6%irG6KmQR0ok"%TdkX=E6@NR9cT<
%ft*&DPAMXap*Lk?-'8*(GJoJ>LSfN]N26Tld)9jcZ#gY&anU9aVQlf#rBIk8G+@8N`LBP+,HeS>U,E1=,r]^m*DRn'QS@1)H,a77
%(D2migk%ABiUlf=DW6X]*h<@V'2G#49mo9TP8l*qg:O,U'@f0SXFEn^LUC$2>(81hCa<qVefP-#O,M`q`31iKNRO=arFU1r.a:N;
%/h*WbQq`X/X\Yj^WAA$B9iC,7F`@\`3-\*cIOB#VO,?&N@01$>H;Vr*#AMf((M$SA(l-$aS&QC=cUo8qEJKjmH&]fp_tgq83a6(h
%H^7e5-4"M=_it'?:E-#5or,<D5`[([_h/Ka.1j5NoZcj)^\IVBZN\+M"hu:E]9*JMX1r@<@6F9o(7EVIk6l\cQ;KTslke[M;5\P;
%`5tranO]`d^uVt^)#VrEe+Qsc<,WQ+n?J1aPIMDERH)K"*>`Gj66e+g3'4:nlFm%T,/-'Q3\IKPok"gQfY4X02l^)a,$@jIl*ug)
%@aO]TPG>l</4O\tYl4>`X(DrXXB,42rC1%f0Jh(#>\KOl"\STES:unkD4K`4DYt7L/:\'q8A2N30UC^aj0O8KX\6pm?uCBq+`/X,
%DA3RCISUh,DV!,@Bu]Tl`(^&f>(r]t8Pd!3q_AqZ4dhm5L0<b_[%pMq;8\09j4i_5U9/pn/WCkAD4(*CE1IqM3^<EZhhH/Ji0K:j
%Sq-eNDEo/=_HhL;k"OreZd';a'&7T".mS]ScHUJ!Eh,QtZ5(qJ9At^adnFoQZAfLs74M>g"J*&'mh_DAO:B5Lgu"oeEj)G(9R20'
%e`sM;>)h*QJU*WNjnn/*c^J"N![O.9^7")P=h`"eI&`mq)_ETg8[0Z9U^b?jrC^<+FGamS0ub4dfGfAX1,WCZB'6jha^3,u%lbGm
%-Z%h9aSN&T\>BSp@$)``@pF1T9WS/mf*XZ;9sgD<?t$MBe22gf`?*AdD)Y]nrE\t_2JeiS?)MSWVGfG7q6em>m5IhmVg+E)_5B+C
%(OR'A\+d5]'<\n%\7G$)5-k'?QiqeYb3X-!"b^de39r"b3$<j,J"p`MhZ?4Amhc^HZOdlc?HZGKM_UuO69ia4A#E>!4gk-9m<Bu7
%L!E^g(8!dXCf-\1S7fDlPaFUq1P`m7JXjJ\Q6uQ]S2Y:7qALE(idKhQM4FTPk;\Gmn9$4o2fi2t8`RnY8Y!O-MV3<Kfeu^Z?=EG0
%(XGdMdjT1)l>3H>fYd"-;N6P*n$Ai/Z_\ST-%MUN([NKHB><V,G12Wj9H%Pm@hEU)Qnlk8VBK#>oc&&B`kNbk>Z/fJ9UkNO*>dh`
%^Nc[$$"hKLk*)d$ZO5Ke3icqQ4kH*%1aXslG&BQ6UBh@9MT3Ts][NbLZ\lc(U+pAPR8l(U'ocq,BIL3E`me!FDTn+[Rb1.DGM>si
%];]F#%a3ipTPXL,ms[4#Cn(&h7j2sDn#1@#7W"9ZImaWL23K(rk@8g[_[V&E<e7W"l5kh:')6f/\hQ?a8GSl?(MfNqoTVRATpWbm
%HspQ/s'YAD,fZf8ZR79Io"A2?pM\:M$3UF:HuDp,`P3YTRlq"%\h^u$9<2\ChmbJV!_f%/I'\KEQLG@C1J@LT$/`L<]D6qH_RFVs
%<\0`QT0?k4ph:RSoeQN\&Y%r";Qi[<o$gg.QdVU5?s3Gm4_s5XXBPVZ:YH]45"@O[T.;*r^N`8(h\CuSo>sKY1H'-]RMi;K/<mn8
%`iDY$@qNCQ2aR*G\.@^KPg'[GUhJ5Phdb;Wl?=]P'L-o?&/us%0kPKXdkqqD?oc'Qblo.(M=@F^3%IGgQ%(t233eF2(<85me!UAW
%,O#tl-J"P+L340bBHbWfr7T`?!b+#EQFI2U'0e(T>@@:Y3/O-LUp67CP%q7JbP=fNKqDFScKY3#S\J^ZhBo=JgPr_3S0cG:<ns9=
%Q_Tf+X*!d13q.8K:[)YWpf'/ABHo:shWZSGmKtL!R#:P(YWtp"H@/ZmA>UZI%e'e3>??[8AD=R;&-&0>%DN7lfVG"@_ZGOQl-]?7
%HrJ*c/l*q#hQ>6f/$dN]RZ35l"^'Gn'lg7Un_qhd-o`6,8R/=HHhAILJqU5i\?K_tRn6jmpTnViW,B##C^-,>3\I38Gb@16jPVZt
%M:#!9Cd0NtS#p97@B<N,BDj@3+q.kFCHOLREEU/BT+*EYi?PfM(E,mH1_,`066V%r2_J(h`aA8^!pDnbd#0sh6ORcl/sMAW8b1a?
%g2g531lACZDi?]_Ln"(D6;"ue]-+Ta)mV*PKH436_Fg'X9j3BO"IWsQ?VKu^PX92RFN'WL7%(3C-u+;gs3rVhWSX_Q.0#cRa<m3O
%e)G\NHn@sAcuMb0U>-#E>"CFrIk=:c-ET]cK$8$_b%rZPs2*OGaL*G]^L/Wc+X8c,hW[M37B,.>[4"J*R?iYT[MIt0A3CN?;$tFt
%UmnUR9j3HQ"IWuOqHl6U1Q?0b$M![*g,2W3:A9CI$E`fdEFScfgmB-Pr)P5c$,MVTeW;\UdnS[kS2Q\>J(LHiVU;.RW<#c;hESdF
%@>\R2-g=lRMPbdqen].b1Ga.Qbg7)LeG;luF9P2h1NYE?2`#P`kjE^8WcCpMel%,ja%SU;n?UU"JR3ZLdF+1;mc,eWr0]eLGhJs8
%%\MKio\o6sD97aFWn'4)8q*\q4Xk6ec1i,Ll?9'00TJ1sij1r+B[i)G!CYE8<ib`rrq<B?(S#q2?RcG6!/X!\IKO>O^kWb3"sKR:
%9<(J]'ntMTf<9tej`=b+\(CN18@kH(0:K#XRe-u1@d`8(>I?]KVH*J'><7-dn-?Vb]*0Pj"hpJqL/6S#$j)0m23;;7e^)s/,je2Q
%mD>L$D7I$OQB\[d];fYn(Boi8(KXHCdh^TMoC*Amrq_JdT#8$UcqlMkIfXO]>G[CQPu@!F35:@Y!hV=eGUE\P;2Fhlllp^qLlS@b
%:>ABd]`\R@8iqg[!?T@[WD"a.A#^D3-!TJ,8MS*cMBS;Srl_Z$HI8@7lr4iVSq=l3],:D>A1OrGE6(M/WNpYdg2g&Ybro3]a8_sE
%h8`-%*T$d*-1*sMhXN?qf6%0W1)s<3b8!INn@*85Wbp]2`H;l2C0HM^(pZfbEM6=];5%4Ed/Ph2-&LE;T*\%<#1q>#c$Hkn2tZ:G
%XE$g\;o-;)e&f:qB8<SnG4kn+[XIB'AKqK1_H+(*'A?mM"2`kUGU*fmHK3>&=9/om!f7:[?ga,OEU&hh=5EeK;(hIspC=?bJ*n?$
%h/@HII`.fFb/bt:)WQ[:@;6-DGOXeFPH*!CCXB63Wh(O^P8]$@2I2gY":shj`/;quPgC1VAhWB`\bV=0auB?c6LiBYEb0cJn":LH
%lLA;6p"]mC&PeBm&?]pcQ@BT-$eTVX"<R*7p:J#hf`[\Wh^YADh&+%=oV%q5`?k2,Tf7=nn'1Z8_fN.`\U3u#"N^<O=Rp@)?G/@2
%gjhNdd;BRUY/%R"6a[2Uggdb3O5"?l7]m6]d3f'hV'=,%=ihlgISL/@75-4`]I&4RHXbJ!0`sf'[ouklFkGtF:pHE.osQsT!rF8T
%0]t*XR.u4@,8^CE\TX/K5_*42#WU+m?<i-(l5'H\raT@(e3nSXONcfi%h7H6W+mb5[6RF8DjR1&879k>3i/BBdS5%a>XFc,]=6ab
%[Z^&MBfGJRP"ttjZnSnpRrhkoI_&!kk^r2NYMJZ,\jUZDGqK/91N"9.j5ZrBdq\X3_h7`D,cRJT]u^lPSE[8Sk1A>[En1D0HebPm
%^!eRdD`b,PL)Z`'h,A"j7=WigUGL],gMZ[>:3[^(YMX,l,`j]`VQ$%6g28A-oF>)FVcKhW6KjS93pn8mpm@MD3L;\U8tE?C0XBSO
%1d0&R3YI$,\E]n"LC>mqk]Pls[iK\^k#CQ@?7U.S.]#NZacJhp3c2=*V_&I]j%_+iM3/qCd)ktHQJ-<t7))s(h1c+:q4b.[+M;\I
%J_h"hWsh'#C/'$(q2pp8PQ18IQ!1j;+4_D(SoitlV)ru1X-EB%DZ5I(HPuY^EOK4eJM'+Vp4A85`se.]H:r)MhuE*jhq+34iP5D>
%12)i`:9X<dogW&0OiZKU.H]rUem[@d:"oP8pAu'VmFlKdo?&q8EYjAK!Su4(__rLj12MMKctTo$:(dg1:+*A=(V0:I,RgRl<W:Hb
%FaBFbH!RXGh$j-BA!GD=C:pR+H5i62$1WL1b`AIlDK^jn0_m4[Um+M:kVfUW:a2buHI"<&Ina.Q[e1m0['?udOk1?N8fk(o$pWK'
%]Vd<[Q1fO+G%m^S"&K4V,;?*B%GUao4I#P8qIbSXq*q]t^,';T:lL)C7k=V>+/?'*2No4S@g(=INH!d_;Rb7lSYd"?S8+:RErKCH
%;f<oG2]@iLDitT&%%Jp%Ih+Bp1>WP\4$]TSE=YM?glfrPfVR%5a$sdtbuQ]>T]6r(SStco_Lt9L/T=Tjh>qHH^mOtZA0"@j!IC!Q
%IsRNm?I>'<@%_LGFR7F^^Pt"t/\O<HKAG1G@WS5,0u&M9/a^d)d5>h8l6ThZ/6TEWSs(3lh+L0aV\7_"*r%;#"/f/B_?^.Cg?R0Q
%>0jOWo]Tke2gAXdF1u#39&TPD\W<4;&NpOaIpG'YeL&EHROu10/Elnk@:1Xo<8#s:ra:+VOjU<PTL`C*Jq``J,MEDVO:OZ;5g'lJ
%bI'EJ\T7&WBEJ"t+l>*=1\Yl>WR^lY3QOG2&&`iPbZ/Xh$I`<;DM+a:VKCh40(X!P[r%hkHNT!i\[:1AAcU>nqe`bs;d-1[ab#EU
%Yn'8:ZGU+gRqk<7Snh`'6S189Hh<%%^ON6AkO'rjFHe[SrHa]>GE9JG%a0Y#hH>dAiKCE*hnFMdG$7't]?iT".WZd_K==M.T>dAM
%m^`&V"lKf4hsVm7fjoekh<)8+Wo2@PV&&5t!P5sjYAl18\/^5uXql0Ei*Dko*^)R1!$'P\j'URb`X:Z'#(f'E(31;&[H%Ss,%%r1
%J6T5-*_BBh_2!#C,lQJ*DsGTBelAJH410+0F'S]a7;(6WE+trO3r^5JXBTO#W]uCMG]JMZEDP+spF7e*UE5*3RIO-,*K]t:.A'km
%)_)k2K2t__[&Y)dMH\)d?.P0VrO=kP0O0E+X+O_mA4q^kb*3<?eYpkET4KYO8p')GS!jrFV7--&&Q_au1p49Ud(G,_DYHa46n!(%
%M#u8.!?p'[dY7<RBo,"1Y#Z(]3U-)fC=IsrZI$)]FJB8n;6s?,2;4Ur<mE:VP1h"sa3T^"H&7cJcch(o(ScCL8`UV'(m1>IRBB]D
%[0n,\L?*40KgS0G0UK&WA+gP45q=kFU6/raAbXV=#Gs%)[_0teIKi8^8?=EZQ_]J+6#EE7"4;&*mCY`u]&?Xi$$aikNoP6!mE<JK
%gHY&uXrq_nf8q7)4\e%>C*khTm@".9hj#4kCSNt.f2-9%\R+G_IaV6/CVVEJdOcKR(jmib$/[<o@Gn6kVRWbD=t[K_%Ng,I'oe7k
%d+Z:A(*$;mV2!,?Ym]=EbAA7=k!Ru+QF%QtFG"Jlin_fJ?pW!jSqF9[A=N%@5_)bJFRa'WE0tBs)c1#I'EC$JDCBG"0TA_57D[4\
%n7k*o#p0HEY1?XfTMo*B#%ElkD">Y$W*2l-\[,]H5:WZOV;GSN=ZosJFh)-H/'FqfX*9^8="/onU?^6t=(u3J^ZsKJku6bs<fE<9
%BR>0Ze(rHM\W+;iP,_Z>]qd5qMILt%^J'6a_gM6"af%5+I;qcJ>,OGqBs21d2k-ohRcc[sX^jkpHWAk</c3fXW&B:*p`^4GV[XE(
%.k6$W5p_dm1cCd`W2-AVo\D'0$>JQXfiE,3XB]=*@,0n[[)b[t[G&%fW#!q7W#"4M.]TtGjs)8aX[%r%)X8,/,hVf9XsKWL7#qcl
%POhl`KmcfL!Z2=];JFL9RWZn%_,SsqW9Nh@q=6r`7=a)2W&7i-OK4rtRR2UJor(uNM[)m1QPuVT'&<tYQ#t.KlQ;^7?-3m3Q-1Wi
%\WY*CSI!Ca(DVhuKb,l6'Wm%-lRN<B,HHGujsl@FS?<`pGG-sVHWQ[sCa]+4N9YXe^=7^ET[QV=FApQ:9tR=r2IoG)djnrUO4Hi]
%0pU)&3%,<`>DF/ZkNA[MFKpmP<N+X7D=#5+Ot?t0lG->$WU+qjL7G5&04102PsBQYs%++j8`qM$Sh'6*Q,KfU%fl!iRiLHGh,3RT
%^mnZdBFe"=$d+XMSU_QLZoU:N>SU'QJTM[rOW2^=EMg6?CaY1GWmtkY=Rl\iXMCpc2P8,*gNFPu;nKkXq8p@c;,F>Q:E/+2kX<2=
%)j6hQk%P-?`lO'5IU[K!MVX;^Bg/%"Fa0ngM(G@6C-'df\paV=_Womr%p%\6MpM(ngIqNLBDq1-q7(_9H$!hAmQj[1bMBe]lXpsu
%cLT]Tod<t`e)ehM&%:%MrMgl<Zn:I4C)D./V&OjkNu+(nCF`c7&(ahugYK:*$geN7ZaR/bX!:h3n+k#M?>ZjI)Tc;^J,H)\QHKf!
%c],>8HOg54@<?G@rik5e^O>g8%nhi;=_k>OEmZsOG[fLn8"jqsXoGNni%5?N*\#DG0C8)/m2jr!?@Db4m0D`3Q]ISR\,:MgoecNX
%[bNI,/VK&VqU+)Em0JFiH:;0O[eo%2kI7nW=DPQR54VKq_28+V*MCL*qdEL\r4]W9oYFc"#_;=I?]Mn.i7n5!iC7\EQG;L.]Bei9
%h.\VUn)@LmL2juQ/Q=6#o@7)b@N;JNHM@(/$i\>gY7#-^K@`t^oH-8BoDHnU9!oS0ij\bNj_47=LK9[1Z/)D:rOQ86o"=*DmQH!&
%e62RrpGVd6In'Y(f2eK8kV.t'o&fP4f;q.q>Bmfgo#O#loXJenO1Iimf;WYd$`D0_g1<-hhL,KjZQCId>@"3[f7QRJ0Nm4X4L_\b
%p^MT5N,a*WH#G:e=M==7ZKRa%hd*b^dCSqf%U*3T<o;Cj/o-5d5#]3lReHfY-e?0saHhn<>O,9&8bL"dS[Xo<JA/"".dH1Y>N)?%
%omV!uiBmj*Z1,[Jl@k\B0ZrAA%>0*\4Gd+X\(.sQ(Yh2VXF0-d[.i8Y8FS]PiQ7;+U)#pUIOmO+qfm7[p?grXiarNPoXF4WEYrKO
%5>OT?S:R?Y4l4.YM*]2+>CLf^j:7CA;oAH>IB.\kiO=O1kg>=WPrO53f=)5s^N+Pd]mK-`#Q@JCZrd:ApAOUR0b!(]n+R?[THC8h
%LWY1ZnA[EDH.u3kmHm29s(4Dt3BFcr*!JhC<M8<7YI;,KCLmT/Hf*.UGh\\u?UWk#m0-EYd[F/97A/6b^KPmY-N;:=4gCN%D.UJ+
%gY757l^p[bLq#H;87oO#glbt1JHfrrGV<:_6g`a8p3$%BW'm9/FHV:,YH(M+1@fC(_/HkkLA<\tgcTX(1K]$rSojit-c@?-Wool;
%hSF8ujCWP.^%+%L4*jctPh#^CgAKb[Wsm)m7BHKkRm_>lg[i7<[<l([fITO\]Rh3;Diq<XX40sBf0HsnmK7KRk(D]X9%RCK^>APL
%&),cH53tCI]G]r2p3L:an^+t*/ad?D,(O+7rN4cT(n2mjk\n1"]a.qZRVTD3hED#&WG%0tDJYj[TAE="^XH;A6M#i<n7;JJhX-Z'
%#'a./U.T+Q^9t?HL29XgIJ.987L^GfD*R[-okJ,gU\UeKm@V&'$[oZi83:Kd(0`H"kl-bDdG$fFGlX1Z^@,86RjZ'pcA+n#Sll&3
%l\%uAjitDMd\=Vb00\jjdG"-NGA-H[L53dj>OV6uC3Qo<I;a?0A&J,n=B[$:QMC\(->UtSY,qJtF7":\\us??9`9b&LN/n:i*16!
%>?)11Q+=rmhe&HmkU[)5>gGS<!0b*;%@jU0.i[:hYi!tmVQ]\4+2,@kcNA1<otIT24q#N[jQdbh#FkI9ogAbpg[";Ifi`'K2@Y\:
%X`^YepR,T<7=B6co!t_XD#6YK7m/t[[]<GqcCV&dHOh@_q>82br+rRQcW>I.[JV-]BC?m+JR^@,n\&--I=ktlUAU;<]7Fe0ZjqSW
%mEeWiX#rVKL!#=!G=VR.^BO,)k/!["+9'2ob)<fS:W1S)IufU52Ve,aZaK]b"<^)2ift@'WTt.HEkoq"kVDj"Df["m_Om8McM"\J
%TulVunE6R5%7;Nu$24,40SE!m'k739!oInknE92Q(m#Z&5J3:&+I*c`4Ma_tc<#?d1nm]U4&7jsQGa>)+M;aT01>tj5WAcMjnXZ:
%0DVokj).D_nh=-s:I#?8$TdbQ"!c`ro#k,1-3M?:0E_*@6ghjo9mJ&-%FZ'.a\W5VdP0j[n*W+M9-,FD6L%*,/uekcGMmKCTDH@K
%V$K[QnZj.;#V>V7$$:o]]Nbl4%<Gk(cUfS55M&o)ksWGYQ,MPr3Vr_L*>otUC#lT@M2d0)247I!-q@q\E^(p)!iEU5B3/V3J0p3a
%U6Z,S8.qH1+!`Tp$p6ATPN+GW(J.UVO1DNO";q\^:U;PsKqIe=mZTeA$I?+Wdbs_dClf*iP9;,:-9(\eL''9F9ZRGI$4HL!S7`1*
%^]4hcB$MHn<X8gb-Y_bFnUN>AH==QKl=Z%l<WMO2Vnir;Tst'a72(E4efH+6OI7)&H&q*6:%7>dS'fiipWLsdLZK0q3F$`<5dGJJ
%_Q30JmHpIra$K[I_-3[]qY`Uig0D^/p3%j'_#Wbp"=tW8/\JbF!@(FYj/)RL*2;k;b^[c_n3D;uT_D]<o3fiQ:AVRE_A=l>qg"G(
%K>cM]L>-Kj?TNt(`gs)]_^nW]Zi!^8*3:c@NEX54+5NOg#^Q"\giT5f?/0qj>Dq350%j8'_rEFr=F$2?!r&>]h2F69=T%5rkA\ZN
%3fm*H541>'(?V3To^U4W/!jG#[WXl\#houf(?UCeR7gDI2AC'/L0R=\F7!4iOQ/HQ+CY:jRO(p.UYL-\"]2DkSVf]#h/f2tmQja-
%hYoe^F=o#T4;I]?H-f!m\KhoaoNrqqcT[%9I-Ufl0Rr<$>5S*AIs(4$O!8f0q7:;KH'NKGgiG/p+pE4#]dSXThs>TDEe4I$o9oQS
%Z+9=?^O?2=%r+-6a^>GY_dlm];tYuY4\Sjah/?E9+,@.e+]&3bA34$\]pF84]irBi9GP8np=A!-%paBf`H]KB6*B+i9<tSJ#;iHi
%f2u7-bE'E=e_R.Xg=kjsY/md?+!s7V;raTU7932/V>,"U-TLpDCDhXd305?R\I8b1?hgO'$]m=7*#Y`M/7TUi`BVloho\]i19W7\
%c5I%ql8b<YHu<lud;%cA3UOnJ^3kBS-`T$#?aY7KRD\U'Gk]TUa0';DpL!<hm:c+[cX$r<qsX!!Y?pY1_$Y`Unb/HD-&&JuMLF2C
%gefuaji2Uj46c[[TeXO"@.Xh^Q5UaFFZLnRNTI:O:MGIsjlsohbXVcsa:1%JG\sqgB>2df(%e)UYIh7Jq!dg3kH;I"8l+dmhog-Q
%c;k_43k(_GM]U.s)IU/569_h[CP&bDNM;($>:56-^:&@_V7H<ne\_:HPD-\2GXM3E$ptY'k5(8#bHn&7H0=/<$gk6CX7CquV.r->
%Pu(u_2cje#ApO-)<ue'VH<)pE;Iee4TI/iP5u!+3[<325]6,Vd>5ALZ<onZ^e7F3j"P,W?IUCn4IkET]=4`'@%;N;P3k&EboC$mL
%hM_,CN>_Qe`QMFe4*)47#gV69NugD`_Vj)f2O$k:>>NC@^Ha<b53qTGF#j&B57s];[e%RYP]p-kGH[FR,0MWH4.e#.?g`=Fn;hLi
%IJ:M#V(V*[Ps-n;f%k[<$$QK"&D#;[LQ=XK#9t0Ci?,&_+C+^(0aQ?2HZ.9!F$"_KY9]AdgP6"FY,n;`3L[-N(R.^e1$?7P;u"p0
%hGB"N5g\u$XZh/]5MS6!J+UuEn&jLfLHEQ5mf#P[IW,1km@UDd:-O2:#P7^f\FFS1+\!Tde-'U\l<X\,&829kftW#\006Uas*]+p
%,kDu#h8SmZh#(CmnqcepptdHUKmS1.kjI<L"f!!o<d20@Knn4kq7A0n5aJegr%Di(me1tkd$qi8j',Q&1YVNHrUSCPM$LMSNK<D+
%U4^tQ;OMgrgX4DhrP>Nd#kSlenVG'VcQ6E2Rt7I!_TM&ma%oboH1TC3=^B]%C9j"MR6O-LL6]R9QcCWLb$s[h$>.^c]fe1J]RJFY
%p]-e4@q0RTQL8k2[qqUS5k<EN[iW0jhE2ek&=SK-@Fh&mDLI2:qYMmaHL6&3EYQ29AK^Qu2GN@>^kXZnl3kd]*.<=F)E'Lu/34Q*
%r,Us9f/g[TK)4lH-A]1:m5:MPZn@Lf(;0$8[I%iP4]8u\jiWLh'u-:Mb6;:SF).<m[uV;Nc*KXd?ICOqf12):8alWi<S_Sa#Q#&?
%I!P1g::;8,6R7=_7T&gL;[,G$oQ2<*.Sh*iH7!>.K&WAJQ$pu%G:B=M#`i;7?Z=Oo_#*In'R672UL<J6pY"BClA"Ic3qY+Ci][3/
%M9#Tb*3Ft/*(42$n(_5RI[_=\3UP*XY.0qn;:4MJ'#-\tG##3[<BBALr&<9Ul?Zt+CuL5arbV!!LR%T_X)tS7PqL?A]E/-0G(8o(
%d=+=3q%N(>5:l9SQI_@/IRA\3"n1qnhmsgc"#64.lKrdkg[rh-*tGO560$?ao&ZpJF^jFRnSGfZ55WdqL5Ug!3eGoX]D#Wa:qltt
%T5?eIccaS6gYgIS5PV-,l5WngiuS>BqiAUhr=7n@b0a?e'fW^r^TQIPDS90<h"fA+O'8)0#q]>3!P*?hNulX-FOduO3-qTs=/4)"
%<g0.Sg_JXnpT:T3k35IIro@AeEJJ=L+h@I36T=CSKne9Z]u:-H',lgR@C#_5F,Bn5Yeeg2cHSF_BB:]J9C(KJD:R5])h31F[eceJ
%-a/ai1kKYR7tV\1dTucY4aCmD4EKc+/$p5[n1`@F5lD=0q\ORWgX0W>;DjptoMTs`B\l[\p;"$/[NaYIq]2m%*M#"d3"/X`Keq4K
%g;+a3<Qak&eq+CGFoVHCJLS6i['kLj%nM12NM,o/QhQu@U-4KBJR!V'.b486bWWkOBC5/nrF-.E4c9JYrV]oP-:B<D=EscA_t+k!
%^^#;])tqukau%'7XG%<6p;9)JNSW]mUX`*LRt5V!f!BY@D`$0TLK"0CIf-EjW2r2(8(`E@(8((7EIq+?GBe#mNoKH72LFEBp@k!a
%TMGA5jI*cV@I@3s\#mu<l.kPl'kd9oE!5b1g$U2`djmq$p[:Ims38EB@j"/XM@-f-ITO[YnN77;<o-jm[N@%#%DOH"e;bo7WTfTu
%d)QrH@J$LGjj7qt<ZBG65!U22F`1CZ##$DEoCq0S`Vmphk"5<"S(UD#l1*Q0q=g8m]R3\nZb.bs?.gJaBKWT9?s8OIqqZ82F4Rrd
%SC_*l/+@rN9q]3al`MMVpWij0h>-uq:VNHX#kMaf))Rn4cT,e`k<&n#h@HgLB+P3SPa/"mdNL,'(dPJML6$?kV3Mr3*p^H'mQiP@
%(I`,[+R+7OrS#e29UAUgN,B)]JVh5ZLs]E9ifqtFDf9V)G]Wee3@(AbCB+!Yk:Dm:A"73A#oP_#B&Xc-[@6dNp#e8orA8a7S:%Eo
%k(LEgHYrG@rZus^@eFn*'0^g*8eg0dXK?l!%H48aC-g5_^K888IlITjI+7k5)s5o!,_J7?hlV%ahq\cL4P-j\iU,IkgD:`0\L_1P
%K=uc]DaM(oEHl;'[oXCCTBb!kmggq1-9_8JX[Z;6Of>$HD:GK-649:6'fj=[rIr:-p?ds-7fY68"+.6&>$Z((rN_Y\6#*gmrj!;(
%h!l=VlMgXl&+>t&S"?5es1$1o0/OgiIJqqc_)3ML.!]!20('\AGcp[Jk/brFV748=f5k9in@4tA\QkKKf.Yhq\\r;%#n/WBmi.'u
%^\!)3n*bgaHds3#qpsMOD=;,uF&1E%D$&j4D[4FT8ER*o_-sa:Y,AAL5.8!g.acFhYdto?X?W_f0"uhoHd:UTG'Uhd'GCsR5Nbe/
%5pG`t5`Ff+.E-`*$tk0Qh]jk_!O,nd#'Z2W>`%@H^4hUthsNoJ[oKVZH$AftCsUQ,$Q=N&?>k>k-B-2]oSIl@8NYgT1uDMO<N=W_
%l#4hmfBq_?X+g.VlrO`+Cdek"WpbD8/A67fIH.HDPS8WEQc3HQ5O:SPeIUPE`(qIB#!E1tfW$tl@+s#Ga")qgViSaAp%NZNig+aU
%ks+s9ZO8k1`8b1"^C!`eC.mMT,Bu9a"t83+:NrPD(V\qsHrt4HLc\F!cYPuiF&]Jd\6gsH)i8m)+8l;]'@1Dml'B;Q%k^jiBJn4G
%I:g#&J,Qh>24raZM8%8`ekdSTL!OZX.66Uto`>A*<]7CYm97^%?695,8L2/C&3+)ZSh%hus38FeTCPF"C\c9=!fO"uhjEiJ6=jrK
%"U/.5"EiGe<iSre6#Wsq\*po3.j+5ka)=$>gG:DEQbReB-e08).JF00^G%C<NK;@:/N0e;qDi9s,;%<`>CXTfb4PBLMf4_4C!C4'
%UXA;SrOAt)M/U$UGQZ@$mJsh;p%gO(#e>1c40H9P$)<-T<jPdhl*Sa!Yk;(]\*6#iYJ:kna=UqC`5$e3!4O(go56>VAG?Z0ToLtr
%M"b;oXYcK[*PRF7WNaide>pJ+O'Fu.$hj,#kgi?4IR#h!e-C01d=@3X?.!>.p2Pe)[O1\t!aS4Q(\MAlc^sb&3a?/rWXE`7(kD;e
%em<SsVn@8DDK:U7G-BBlX496'8):0uY?^P75D/;D!jU.reJF8&mH#hf&L+R/XF_G/O99NEZ+>pV]Y?n/rU`8q9tNf50B1.ZhT"[u
%[XJpQ.&h5n[F70qH^jQO,eXrM-mXX0f&T6hC5A"KIhQ3Vp/5lY_OR:LXO1n&)n9<MrMZ=E!-(0qm,ma(]391Yd4K)G$h!UCd_8u1
%T\k._R"QU:To&6ZaPW(f?>?SLDRt%G<7B++>;7O'DB$nPR=l3$I@8T*AB)6^cC'UVajapGCZj6B]Z^1rr-We_rQLUqLn#GiKbjl+
%i-^C\f._cdX%(rnI#2H-(14?lM8X/D;a3Vj^WkYLH^-c'\WY?Ni2]ZXj'G(,8i>XTj/W!a,Y"uL#ta*)IT)<.jA0I3IVs)>688W&
%1_`8]1<c"fBrP0gG'j0T'\$0i[u61skd<&X\<.AXT5=dReGpD%.X!6sJ>hjY14n*^$*Vtkkc28",m<I%S-:U1U08i?f^$N$>21P:
%6fCj6b!&psgn"G]^k6dj1^0'PbKSeeD[os!DJ3RiqU;#9_`<[LM,r,s_KcPr6!99umk1(W.)Mq$IFIt7QLNgU#NUI*]>YRr)qutO
%^m$CZ9",^8e%FsL\PsGMW?ZpIBrlSG47\VjOm=FOR\::?M^>W"JtO;RN+nufkEmFeIn3kN.B+_O@E?I!`6qISKAPE\,h+f^][nfb
%d\W7LL\i#uY[j]f&qVa`F#%21#+Klm==e#B'XH3o!7T=%$\k^H,J'!\QZ#KH&O*d6C*B6$]em5@7G;\&"Nd[N.jYE([+K&H$%n(=
%+;*?6+.:O:V^:G5R%\eNb4CjbI$N4E)3]rWIBiM-oJC,9p0hW%Zm5r0?QQ[J-XQ2igS8q-)_aXk,;osnN?NJeS&-\H,/f"MPJ]?P
%jKHF.lsI<f=;iAMI(,5T-[(d*A34-omseXmc,!hKB7mS8141>2C%?>+pX`,Y'2]8[:u'1C;R4Oq9<,gPRH#mC]iM_&D`Z\LW`&8I
%Hp\DZ]8)Fn_qSDqbWX[=dQ2ck+2>`=n!oOJMN)Q!1uXOQa#=P/r*um\m7Z_lBsUAg0(9Yn4V@g?fNg+LlN7l.o-LQ?.0jh2lZD_g
%K_>D<[RZB(I.nFDijJ=Rp-m<c]D/@Zl:$ab`1?_gJHKQ;OM5RPQ^`@Xr?BQ.?&I"uJ[r;)]F8<UDg^?]58srjDq9C`HREep=^HO]
%hR\hkEj>&CY#:r6k]1t%j.=p;D_ur/5ZSgB.+^LnFWbeDKP#L4OZADA=l7OXgjS>%/pHP_]NM/a"%=eheLk_p#:K:-D'TI,F5-%@
%WiKH\7"WP;qnEGl>',:=_\t_o$6Oim=1t).Mrsln"C&Ff.,)(4([#I<%O<C,6orh>UKPVX6XKFqgn1>82pj6QXupB$B"<\]G6_sT
%=ne*.KBB41rtVtIA^totHk'cAZn07;nB%'+%=s73<Xd0W1jnMaj]M.7:;_5`*?V2Y3f<??AE5;:ChT+<G0)26&3lfkZVBXOLLUgA
%E?LQdX>4[^^8,L5)5#@ARUlkZYpIrKb*Ha&V#Y>2VNqrke+fl@.i()Y]<!I64!&DVLmq?_c<1>l1<Q&$(j)m>cm]//T`Mrp>uE8N
%$paq]Tu(J$GR6_f]*@o4AE[S0iX`[u[E>qORrHS:QiK#eKaB69A6<E^">%l-(gLKtkE_3KMPB5,htDK%$I3Lt26`:?oHn-T;f.9q
%D<O6!oGV9]:o=PaR[Rtp/j:6i\7*cP;>CS4?WAs/)*i*BoY<bg^1uA5eM:Dq*%:mK#'U(Qaqfp<"B#5F"!+9#Q<b4fk)u_H@8,i^
%iYj/J&)8]Ue]XD=%942edfftV"aJ6ReHU:+?i_uj#Y-BaQE$8i(BN>7Jg+g,TcbL8O>N;7d8U^'r0BMJeh@h"#Jcd_bB*_j_\LNE
%$(,-7*Uo_]m)FZ#!@/:9EY8m"+DGr5e6P84!IT^+Y*Yht5Z^<-d/[AS7)?;s-8Z9E;`@=W>6\EM!?E<##Te!9bE`N&];1)/>;35A
%LjfaIT1&">,j?pJ$'GE:1[urZ0#b*kQu*`eDCPrALmnHn\k)hG$0c^q^/3PRQj'dMa'@+O3oYrrE!d*=AOW:>7TiSSh<?s#%TF?c
%Zfi:>&8f6d?j0Cmd2YHq!?V/R4je(GFjMmH/uZ?UH33)7kU72^(aKj2k_;_cUk8BAg(iUe*eX&d?:YJ]/2f7*$k&F_BL^QCF4pCL
%TKAL/.C<Q=c:<#2<),qV.hAV>7>E_?[)F1/3lYqUO98"jUS_88#D9W2E&rtnC=&A`Q8Ab<NMM43MRZ;'VLiP$?t<+.TcjC:0scb3
%%>QJ[SZVo&fOo`&YY]<s%?`a4UZOPE68<MK*p6507:0QQ(CaXQo$7Jl#$-?k;K9h!\3Log('LcMh1808?l&:A#)9tqA[)t<#OIW8
%P%FgEL&j,<!dghqD^a:`:'D!i/m(*2A:k+B%:lpWi&\GKCLkqXKd;9lD7aU%+<4$4L^V?Fg,9BW]];EZ+@%cJ#p\YUa9H-TEc;"I
%)us5:n>W11iW2c[a]^_`(b?@P0JAjrjr[\87L>.V]5,#$<aa<,"$J*s]aOBUL2njZZ#\2>+<`<.XZF$lpi;C@^RDEnUQC6d9LC3+
%"OCK((Y&]N_,EDn_`"M&e>+a*c:q>8"]ZJC/)]lJ'1_`t]dtEO=BnippYl1RO>XgL+I@3o>/R9LPNG4&SYP^/(G90^$]8b/LuY5=
%Js3-lkX(UUoSan-+J?/sg'NoJ<$4ng%P.j2>QV`?0rBPDT[Gk-(PGa;6*0?06"mP(_?cgZ.L@O(W2$7jcr;ZLUG<S2p2^B7[2]CK
%%-GN@iRKN>oT'LIY/LW?)hU#TMn16q(`FDL'U(BVm'=UE"AgBtLno)@/jgA^QrK)Une"A^$Z!YX#XZm1UHu<84oo)CBtu`NN*m/J
%Zm_r72@O:0f7OTET*NV?'nsL/mgDI44_^4ZPMnH^aJseXVK&E))3-#<*X2N)'%h;+ZPZ@m()gWc&qdpIhuLp98Ag\03VY^_P$EoQ
%;D=J@dLBW36%TPfm-&JHknO',n/^NhPQ[1&7!ijQ'K]_gE1RN&A"h6/KHbFXojQib83o:-i?fU&\.utRF?n6m&TJ]L/PLCGZ%fd4
%`)^:._7-D^1#2j,rZ34?b-%JKUaul8(sj6($BsI-`C/Uc67<!,*d`<hI0TsY#3m$2)ZU4S"R1f;Z7[X[#e:9_RTP,-'7fM?J-&O,
%@"8PG"7N6&$$7.u#u$/,&]06L4jX)u!cjDCrBbdSf`-`KM/Aq0`F&g(&fpZ?9H;S3">\r*$Zt+`UH5r(eHE1PNDtJ3+E85aJL3Fd
%_hSqH!_>*^"c7g\3,29N+9Ko`_``V*P;L'@#<W;6F!u4-K0%$#=?OO9dJP4L9atnL`n!1^8udl>_!H9ojA\QE_;B)";%7=J\(/m$
%cr#Uu?-V=l*=Oc($s-\h7ODCh;,F,l33[te/itaJWnA:4KkQ+<K0)GaV8K'gY)0tL#sbPFJLbc6`%`H*o;W*PJZ_e&E(+gsp]E,s
%Y)piu]Xb&>pc!Ri.:aJZ)C[<0bHYk4!N'TKbZO@i2?Be=)),'aK5ecU>p1P6=HtVFk"qKW+YQ9q8-P(]UauXcs.?rJl'X>3ZLd2_
%oH-&/);r?F?\Y`0'>l[]@(Y5(S;BY5V*WMU^k/80n,9=&4%XmhF\Yr!,mY8)eV=RqS,)JVm's-!0t`+Y"k(e_T&?'ge=IV*C5\W/
%3&`X/E6M`BrHY0uHg8e7Xf1ntkK,]ACLBdNJ$<qbN[8tPo[l_+XNuY<A,X7/fe[q2ddRd>rNSh^WM?[I=4;.dNp8Yqnn1$'<=U.O
%lM)f,NlpmofaKm3f1#RqaVqCmP(GsXiuD>_8k@8Cmdi4gAMA.d*bW@en@[6"iZ7!rragE@SpL734mu'^EkPq^D"mF5j9S7TU8(/,
%[PXbJ*NM0.cBYigoaT_I#]jEfSWADP9WY"RO6S<%m5Zbf-i0)Qm+NXRg/thV/Nk&G=P@smg=]mbBnp^)'0GaJO.AU)S/_%c3<C!g
%5E(&`2@3`lc(B!Qc5Q=%([k$V\*I[^^\6I;lT4>dG?FgW2<_nTT,Wh-4>X0k:Vt>_Aio&=MUjdKLLJ(T,Kq<B-gsR35B9Ha%*+Nb
%.ak5-!VVCnSrOPV<U+B%7'0#SV1qG+ffFJU*+`raFHj0)I_09jcaN(pJBdu-rY]?`ToWaAT07KiU)E'!fJ6aYq%to2qE>,DZ%kM\
%B`ucQGqC:DoSdr5'i@g,BV?.fbs7'/&G!)u/PO?n@sM5+&'bf6q<ZC]c6;7L1Y:#WPhn5Ga+[b8;<N(^-/q(JO@+8'7g]$7og&XU
%/2=u7pk?EpG/SYe\#hS1/A(:_:(cZZ*RTli7s+IG8ogHefM^hrKB(eQF(`&[]m%e@i_M9Clu^)iF#b:e<gd?7j$MH>Ye7,rrH8YL
%PbXuj)*`06-"4pAern'D*+"BRI,IZL$53*'>=Lqppha4^bIAMd9N"q/-kVDJk]QG=_:FWhE@,@p1WLU73H2$(eLDYncqE8":`LA@
%(Y&'P[grt!UUjURX2`G<*j<"d-e-Ar2gS_lkd$XA4HK!X3%t63HH,tIYM7`dT.N0;`mD.TYN4Npn^WOe.M^,!^,6pDI(MB!G&HRr
%;gXfaK%ON9KC0"l#ucaXp,9ds.m?;_qp&,G^@C?4pdpnOa3:-N)@2XoM&UZA`jLu52g0LA(A:qlbDr;=X>6+j?:CBXUO0:oR$+[I
%cIu5XnTEc5qM;:j#JD.+kf#TgOW7Qia6`A`*?h:A_Jr6h$e^%j:=7?m#JAXI"5+ER4b$!?c,f64E;[?WJ&[U2mrYpaKU#2j[4Yl2
%GAb/OHd)=gCsC6d89-PribrJAn(-W\S5)NPcbGLKX![G>o[;YR/ff"tG4UlW^?.ep/Tt#<l;P"*Q's8TAYG<UUSF?kU3i)Cs-n5j
%`4i0`AL<R2WIjBE]8BIu+5mb(UAiI\I/M,GW.Lq'j]S4R.+d,hX5_peH`UnVF"(b$l!o]cDYTP!anLqBo1d7Zmo^/B4bdT1Z%0CT
%;-N!"W`N'ITDgE(l6$!d;uZ*!rVSVS3bSEWm-X`>q/c$(:U9oWI,Op2V";A!G<XN?+65f0j/W.U_jS8LaHZ9'ag]sU>FD4Z'NLe\
%q#<SW#I_KHNOl4:p*_\6"q+07r)b]PB[',q;-BH2k7bu6V_aeF)[S[Mdm(/t3kOhEfoK^AThss.F6g*Sc7MgLiVD<2O;,$qnGS9;
%h2='S"QTF*:VZj0YrXX!%]R1;Zh01:dQ[U$'/>F>JW.pY68^0bZ>erq<;$('Et47@F)IYF%C.^(IjIj0VKF\sKJSE_*9GjE+=lHf
%H$gJGO[k#J5mX%r0p^tI:.QAr@(_N:r)qe<gqLhQ8I>O&U9++"bjZM,D^,Df\P<D@Otfoq&0pGlW+S:k.AWVZWLZ%Cj]iPeUO%l8
%,1\1/6L%QrV5K*053!\DpYUb493L+mJ6:?b,AMLiX`2KjrU;i/;chGY9t*%/Du<a,>[*5i7SiJrdSXKN_a"(b&-)9O4n&Pd.<jVU
%"0T<D$am64,;<6OE=JDCF2s"U9'B<Mg4YJ5mDY^V;4DirkKV9!MJem-R8o3A/*K&YlqOo^?8`&fR*YP`WQVVa./VtBnSp$NFc`9t
%>W?q%@V=C^5>s>JBlSE^O9nE-U_Lr$EtM+A.srLa2_k7W?ffp[*=$VI:*5KkP\R6#(UqZVQqC"a]M%tioUm[7aR_+C,5GN*-)XjK
%?:d,8@q-KOSs\4lV4,B._-MGMQVA0IPc,-28s1o:^Cm]mPT-q7)WhTC6>*t+nk5.85Po+C?/I1^gQ<99PK<O&UO57!AYWCcj/(^t
%@HTR<O;<#=;rEg%7*QgBo-'MFBid'2jOiVb`K0L:NJqp4nXs#$XE&gn>Un/Xj>`WM0Z7bUHAI$9kj1G9L6)'hO)SSMT[U6kV"5hW
%'6TXLeU^(UcuY2GM(YVSX*gGijjf4[njO]]h5gbs"I<['g4k5cMW["r(A`C\^M"c>R$fU7kf%m5O6ta+B\smRH7Ql3QkX']lcnq4
%`p>_oCC.aq-5I?hr:Y'dMon$R>#t>%UrdU:92*EP$geNQiZ,+.]TPj[(gPeE"UR1nYSBLfm(kic^a%1_H,1`_$Y4R4#;41&i5Jps
%BTIHRj=cgZ`+AUZ&AN3qs74$a4#\!L]<MO&;,if#<q.%U7!5D+gE.Gp5.<[Po-3P:3D9cWIZf8*'M%mnU&rZg*JL9+d4M.dH'`.@
%eODJVT#3X6Qj1J8=7F(2Z`Z9rof?i'!ES\jD1&o`!kQR+@K.YeOmD5><3mmAGR%sO]t/E9c1_"!_jBMW8h2?ukn,Q'\?k8Z,MMEi
%B'/L2FT)-8R0Mhti'!79mR[V<d+MA"k+-4:l*-R.mLmd-E]+bP8&[CGS7j]]h-==MqHPcbVP8lO<bFLSF"Q`[cQ:hoPo])Jo.Ct\
%MG(NiFV6iNdb4$\cOO<'a'nD2g,/SA5J%_7_!547cURc^1AD@Xn>u^FnABQt-n]D@Z]13qs.[[B0DbZY9Oq,J:+8VhP08m<)3Mlt
%LgOFB"IS]!$!Ih.<uAHj?T$0$r:'\#Xp.!%27q3CUZktGj_S/_8'f:j12r`k4Wi($$u_8HQrg$ua%>d<W\QS)Gg>sD8EDHuN(&go
%.?q0$Hta794]hY2]4/pZ8r3Fp,h4$[Nk<^J7%'hGOIakRj2#dr]?fI@Lqk0/Bj#HdTHk",84(8RPM^jL;:iAKFo#1*L*.j2UA]@r
%hA_hB^"$on(`(7WV`9NB1?30_5,L%1#RD2\_B2'15kC19'<SAJ*ohS<0k'1FQn$rCHd2Bj]BWX.T7i_:`]Q"DkKEYM\cZ&&WGlE@
%^(PBerkW+AcOZ/4e9e(P3LhM7p>L:IT75-MA@P0HqEfMgZ]IgK0E)O^U6V9DiV^sCSlK8R[1RR]`Be$-<!E"4,;otl*1>T).5=2[
%MK>l!0SXsTmqe/bfD*)/^aj;J*(&?GEUEYjHnJR#/sGF2p0gP/O?p0oE#U;Ai0t$L:>[p?)kGkC6D,"*."Zq+kl>+?,]2CK%Hg8;
%PH*<i&4[B-=ftK/XSd#t9!W#XI^![cc-FooY,naDc(W53H-ZTbK`,Z`-\=Bdqc2PB"d$,Q6]@Em=//]s^ia/,38ar'a9iC<rTYR/
%=G:EZ=kPT"5YD)!:_*=kJu)+bUMd^V')<$,KL#qnnP&YmnC=O'G4(Ga\71"WXnKR(4?@0%Ze\[WErmf)$1B7W[Y/[T2eq4Vn1D\=
%1dR9DJKG0K.u`Alo8<k2aDWTT.ASMg^U$Xq_tZ>_5K3^HX&c6`pQbMs6q[oM2E?=Y>.LY([)ibIOqkKV4nUJZkf$0.*7([:5>TVK
%C#$9(7smuj:boXk^+!@Y!WRK.G0ecZ0IQt<.:M>7$0$_&HEQ5p-ic^LrObq]2MsX%!30U9B:PS[V#AO#E`Q,4-W2MA;uE2$M0[X:
%H1XhM*W@VKDHGrXm=Rm`nb5Y1Ch(\)@?.-X>uSn1(Vp4m=]8+#)@p])V0sCIpKP(Z4R"6<GOJ"QSB7MnJWh<O%`p1h<nLY5[*.Ci
%qP<k%dpNb=V5B<q8^Z/Y;0=YO%F>nkc5jqh%Tuq8a@,!IP7jp8b`_n?GSe]Gq+fApapKYSB[I5W0u6E4.g62D%Xi*bH0s:5qNBkC
%*:B*h79;'Ljb^2u7Z+,I![NC2pqSEK-BGC+(lL>uOcF$I#eL*#&>E/kPa]>RBt-CkciY?QT&B2c_-"tBZ/Gb??'"X[cm"YU<[bb.
%VVqQ@<4ucsTV>4:TXF4M3qgJsPtX/D7l1TdmeHD:f5rCJUP*jEhLj?%GA3"!c;#$PUDU(OCgbIq7'[:J.dXk$^\1AM?iXo7I!rKh
%5:_WRH6-p>-XZtp4E4Cp*HrFo+h^W;]k\O`Yq"hLa-NYQ]Nkh>I+]*!Bi:`ODb#I@e/sA.8jYN`&tba4/=ueGJkTB]NM6j0o&'bc
%*o/eRJS&D\^WJ\p$!Aa:REhCW7,C`p_Ee7s`F-BIn<L'iCW%_f44[]Kc9/le*1C5$[kHQk!)rF1J+8@:<c<XTf*L?IDuJd$(>g#@
%h]%^.jZ6=B_mk!oqN<1-EH29+MjI'_G,%<Z=bSRc[=R)/aB06V[;1,3c5rJ_;3s+KBtDHm,e=4jcg_"RNauAQ.,-46kAg0Rc8q<;
%)9-rf?Q4;+&qY\%esVHm1/u-$HoXgRAJQ<R0(A-&dJg(@XMC=u(//;JPMiZXNjchG-id\'f3_c=-)WR'(mG0dZ+Df;k&J5`/ZeK(
%8gF\26otCcar!8eHM".DTfX;nA^ec&O73N(:(g@+Wi8+PZ#GcP%]r.sqWRWq;a.mm#Rd2MD@*?paR.#!+?R(1o,RZNKo8g6F-uZd
%+p..0"]K4'NJ4LMT(@Knq0G02o^LlV8,:Eq;Soq(d^;7+R0#1TKg^5M'ee_9e]^3/JT+[.`6`h>0OnA?(,6l0/uAU/I?I5>i;\'4
%hL:R`q;SeG)mkdpK5Z]>noIb?&^&M`/\"&$nOeYC=(3"bL'tB>odj^N&H>/59)+mm"j5\8lg*I,oP9Z_02Cl+23/<a6r@V6jJsa2
%"W,4<dG)VG[s?2sF*o5ZNoJtG0H-+'^V'L$n#oK6I]H9M1[3V_CqH[=Y@)H`6PBCDo5>)rj^9r):Wj<JNO7b]D+ZaEQf20S''Y&I
%eM:CfL9@b!pM(lXdc9j)`/s1U?P0'9=cePCS)Re(aF/d92pbV,lG+3g^GT\d>]M;pQ76:tW]nP93KEdc/1OcdTDX[=F(Iu`88E<h
%0DFcjODOa!jUo"31OScImB#NZ0Lp@mZ?ht)7T1m+"iZot<0&?a8'daepZhr7>4qdGm05*tV1Y@o)oe4,]UNJ1g+sMWm2j\EPY@fK
%!qn4D;:!si,Y6LHf)$/sWnB`A0!r)3/"uZ^Q>$NQ((#RY\n_(E>sfbe"O\QQ3+3=:$DUr'F,(RtrRkp>2pa:p'_5sL6L\M#M!Si_
%T>&JRZiTQ%?3Olj*X,<<`/TA'_?[P)HN^A<c%72-8DQ/k+'g;X>=sopd@d@1eJeQGk^ZBbOUK0:MS/WT8<C9+e(0+`QKF!\>mYO(
%5WELX%a:\or1hC@Fam[A,0ARSs+&93?OZT$a/FG\R#2e5V`1XhoqB)cdqT<390@Cp<2In\4_e&@"09QH]h'iLIBaQ'AJ["?)AnBQ
%4c@.[R;a-CX)fa"WpE^Di^+aAF#Fj3&S2*U5#eamSb@<hSH7eh>PaOsWN:1SJY\&,Z<+l;1LZ5`Lq*BMLJbqSk6S.+H$"5N`fe;,
%C3Iq>(WtuO]cHSFg6VKG"5FAP@TX4)Q]"],8`:L46Zh0ZlXPL2BDHcOl@0Xp/^7Jjh<qHn[==Uoc[U%7#qk6*;hK(=RJ]b,ePB(N
%*#1_1296K)7Q]@2#>ug7Jm&/>AL.LDW[*3:R8-CiY.1K//64*@OjN:$j_374IGhbgq$ui%OO'.I-pULkF:i;kG9p3Y;O*[m?AV,]
%nF]C9D=D[,q"+L1GCu7>\\\/%)uR`]['*M5;2!Y_6QbF&!+6%hhh=NmU='mHl[djeFRF<L_FG#T!S09rS3^oDAK7;4ps8e5'u6'&
%*GR3,X2-B<T`J^-!WO^DZc_:m`U.2;,Cg2-$I^k:cDk>N*.ZhW$?oKcC8IDU6P;^p"I#<,&V;(XTUYlP5<GTC'pdG(`nns4Lj;jr
%nl'LCB&iEAc*M<g4c^=cDV-:l=qnY!"U1\6IXUJ[3;S4N)4dZ7_X>U12:o8;&5U3;Lr%?IoMKJ)?[P2'F7I1ra;=j808R[fAWp5T
%J25\M0n/fCVr.O9LU_hM)tku?V%Y4%4/UrpcqfLHi>6&YlaWc`CHL`H+dXmUSGH+Cm:Gi[)!-AUhs6`'PsV&o\`-ae#utBgHG%Eu
%"KFE\p>t-TeiGIu$#RSNr7TM7geT,m*tCi8>"3[453ecAhCll]k&cNHNp?7LT>1,emn6dsKlHen!9Cjsq!Dgt$CLqkHkG/@C2:b_
%8CZ64b3kYs:-:1Y.mio]Z?5=e-TNkAcOWkkUs]gg]:Q^=#6>Sj]1[_KQAR(Xp/IaFV<YT^$5+Ze8abcMo@enEQh([M&Ss%I;s$u'
%*atG_KsI*.(MPI96SQMLNH+'[1>G@hI11S3LgNlm'Kl5/:SQ>mjJpSteT!2j($0\EeI^7W&#p8D#QqZ:Y!48+KCI$\U9PsUmH-j_
%20;96`NN2!e`'F@kLtBL3DOi^5b7)SH4jKQqn3179&El%'*a-h:cqn0L:"N5!bFQlNS*mM>B3(=3@bF2>F'6o3$=ohi(`BZ2XPht
%?)iGbk!I(_gWnWH"8AArM*U#O(Ih9V-.W5dmDg0qNXcJ.NbVMJf<*<90u[)fU`1Xb-Q_ZA(\sSPas]1G$C*!;]<(7olC<@1jYsf3
%\rjHOVaNM/N\6!#>Vh!>;b\!8j678@Ta+E;:s5NdD>G&VV7D_<(<lAFH9XF,h,O?Gn18fXa7rY6>m)Jm2sC3Xbp(:s_#`7b]=S%G
%G>+K_aBscl`o4rO^t6)7QUObO!EcChpneHp=o-jKLYX[OAoI+1$;8iFT`&h`$Z&7[3$IHj!Qpp+-<V?8T*i28^Ge\D26Y7Iq*S/H
%_KoHnOIT57O@N8sNquRW_kB87&0rC;@qN',bVpI/S8M[eR:9[D-)mk_NB$Mb]uk/!@nn:CRTnu`Otp1/_(]P-8cG++p[dgrKRsgW
%<7U.GG'/eDhkZ&l><7`G6&MrDZU"Rg$!mT?&]i9b5/h[^K^*.1fP<kh8/cB:gfM0e69PXj_hoN:bAZ.8h+(BXrSSocHcek$/gX93
%!$!'ob-$3eBCE9[*$i\a'DA8sb>d.F',YC-T3uV[ZIPjp!e?!d,a)m_=rdR2Dm;Y?![jf,p6ZBTd+`']OfFS??fa$)2\JkNG-Jp5
%D.ujQgG^=U/W"j"Y[pknFl,d(B7(]s31q')"O;9p>Iifg0j&[XZ,+a8aNNKf?!9udEk@-_KtH=Pa$JJ\EE,bPn[FjSkpnWa4IGYZ
%+<&PYZsm*;1DG0Of0KK*EHQ\I8f3IW@UDuKWiQKIrC66>+?D)4<E@V-gX%B5H"^&/aqj`uYqq<Af<)PEpFO*geMC!TVjO+Q\0:0E
%T`he031*4rg0de4&Y*!!(\*Zr4G#@r9B08#*@$lSe`@*E?ZlRBF!5jGSW`HrI$(9InXfDbf?$P\lKbD@O&RE\TW0IbK:4!_RGbYI
%_+1b0,>(EB:II]fbX[9Wh-0gU:bM4cMCe`;E$:&tV)lAsG!A&fm7StQEE3(mIX.g9316/83jsY6^B=_Y8ZQqnPJb-CP3c=\S!/aR
%jIKn!r3T[mQZDPp:;;U-Bh*>cL0n7aR*$C51jjV6VLiTG*mE=($@L[X<Q*t!Ep7kJDh"gb:_8>eo7&i!cQ>qO?r<gM/7(+VSQ&di
%@R#8Q:NU>nR)-*X_q2<8m+IX&=G')BS]]nOHWhqpIGf0s71R^"Fg$.Gs7GG19:mG.E1.A4mOEjq:7j.2RKg9@n!83a=H!P6cH:6A
%Pu7Oc.S14blo6:Yd84t?UCX4iI_PTm$rEA/)\RS_%)%JDX=.3$03J>07[GikGaqoP]BQ'`\VHkMhbNPL9?Fl>#+O*qk3L!f^7P<?
%lh%iWYEk];OhB/``d$?&mj=ddJ6NW[*qL,LcPH1#;jp9@SXJBjZ6/2?f6D0:aE=K-G=<.R7<hMF/B#Mq4uqbliMN.rPR'$1J[7j;
%!d1.VRL3k<i%-(qCnX0cMV1:qCqHO@rgHg.=<b?Hk=)rIr>d^u%DWEV%J$:#CN#qd#s\c*I;`a3ZESa5?0`lus$J&%-7KK_/#lRo
%V\Wi[`niP;!hu]P,?R>I?rbrER*Td_p&Q;uZ8>N-3))66%3`;Z5JW^J`@itok4HG:/Num/<_FoS9,*0,^.bm_a);TC8p<cPCc4[n
%F5tp_hWu=/&qZ;(ZG\U:HXt0D<HY:>KSn%XIL[0L&FG?_jk1*t@90,3'Ja=kKg!][gP]5U.@mDB4a'6(3%+6<nrja8@DOU42]puE
%,[Zp+;#209eUhS&l<q0^`%c+N!^PHO\=.hK]58dX&r`UaEMA1;![p1j&lmRO-^K#$elg*7@Irq7MFM*UCQH8N_G-+j.OHThQq2A5
%+62+J=*iUVH7GKCWpoVNQ^.i*Y.Q&dhc1,krXs^rT>7/:i'dT$"(a58KCH][;cRd<e@tL]8+03OV9=dP58Fm]"3^&tO)p9LZ)MjH
%c4-<8UTDu?_t+BLC6U`.*UEU#hu:OSl)#r9_8B1rp9)9pHO2UF/[Y<g-1c3s?C[Ba#OD3`4e9rtEu`qY3]M[@#eLGU<??g=C;i)4
%b?rJHS%'bB]D:!Z8C*mD'4)hqR839gOpEI1U%*E/)F$giF8>5:UF%coAI26_"R3ih`bhcd,t/VsfaJ`BNL7o=<LQ8PCM'dSi*+U@
%@Tqk:9@@:@pTH*7+-98%A2.]S1=K)R2A,!`/,i]!.RPQQ1:\Sf1*LTFM)po*`#`fY[HNJM7#3.G_lKgNjGF5?8X(2jb)T;RQ&s8\
%G>.]CkakXNO!2)8dTk.%pCSs%,qr"Z$CDg9('=\u12nXa)Z\"kUh/3ATVAUEB,+),*/n=%5gO&QUIoEl+"$.b2,Z6T0Ll@)+[R'^
%F<TE?oeMCm_,:Nrlbt-!qQY5BGD9F(hJ[=)2/YV2&4i'*ZP7?B)9:EaiFHdXRpXnP0/h"3/bNj^IV&MMB)2+?./X\=oeQijN"$bb
%3.qq;q^hAX@G2d?5L:Pm"=!WDeF*V]n9.OV^>P1nm"4"Xe(EQV3(>`!:ktWP(VZ9u+7.g3^T4Ibe;Y?@b_,A3(thpi72&6."[FcV
%.5=CKLH+Xc25o'h,S!W7&X;*_=cFE'?S#rdh^KAF9>IF:FO)e'2-skjA$oV*H`9jE].>t2Ih_N+pG^:.MFCMTLpe-sq6"83oP(+`
%c=)hD)ps,;&":.I#)GSML=jgOdDi[L\@'%*Z>qHP<$n1(0K-.^;0sbD-QP_@),YJ6%.?ll^7GMBmBCA`khAq)7q<&U$oWp-#=l#p
%I,Et.RiP^4htG>qos)4`hnAsT=?erfJ:7-L'#fT]ONTB,Z^'NLCe>]m<(Y^K):J*6Lq6_"&a_":!;i440M-26WJ1+_h?phFHkmgH
%QDdn\:TB!s&7>]-;)7Dd'(EH;4*e<t$7.+Mp-Upnh;X&]@n&<L\j)nupb^^G^()@V2,I(+$?<HXY!^S86SCc=\"[?3Wb+Warh.oi
%&I-_p=WoA/VU\B]`2"m^(I>kU1!b9feS(PK#MXtt=%^*GA`uIf)-RAEn+#HGnj/72p]F!OE\,8jbe4k[[5#CbVB'#4OjdeaDB`tj
%/PN1m_);ALj+N6D<U-jB9,YITXcMfdkpjY1ad%Bih4,Nkd;C20;U;MUS%'9Q\A.To).s$t!)!"T<<cM@-/R)E,gJ?BKo%sbl`I09
%3p6k2*+^iZqtgPtHQ$:^,I4O()o"f!-Fg0.C\gnm]>H8:(+HYAgCu$"*OlA#Zig)6HWf_Y'[T[?M5!^F-#o_I[;af]OB1)q_,3l3
%9e\kI?f_u1L_dUohPo6nB0`*eT#YlYXMV3D/FY"&Z`<'+:ZI@Ab@+CeN"`gtP185TFG]11]DUA0;J,,4\cjSf"(oLoNL3%5iOacC
%.heg_o/CNO6Y4<\jThotP^1Uf3_4Rt*U08fmRDa=N$H"iZ9PZ=mWsfC(Y/b>S!d1X9^'n6R"(/-cU3),TE0esDGo5OEmXl_RK[@r
%`@sse=!(_N(Q@-d7EDIsRiF2R&"t\,7I?68Ypl&Z;*e=&9gl\bGd<(qP:;aJ&(D2cU%l>mC%%r\<b(2*VJBCtZL;qV3ua>:W'<BT
%o$`X,=?_"IT,iK^<Ct:_rRo#hF.Fn:A/!/sK%V&B6]j8gXGM;Y&@'`[*ro;>/c<o6XT.9uqo7t!ftZ9LL;PqaI=]P>LmO!MPZl"l
%DW[!WRTNMn`+(C)S=aZSFBb3%!pHWWKsq+C%l!Xp5j&gn```2V0C,d4V5-t3#MtR2'\-q"eu#%q=L]oZmpO^Joj/nA4#amH_+o_q
%d8*lOpC(!]Ck6QLTY&g(8WF::UI[LO4K8Cto3gH^=/p\P^C*$T,s,'-%^Ul^#C$C'jCfgd9[(SW9@r/039/(&!]hpERhhC"bn1a"
%SEH8]eBnu[0^X=Kro+hbbbi,7qaDmi"Z$MSFV+ai]Ti@@Y]3DG5iK.E'GN'=_\*/L'QN[:JW_kA^oKH>rL<;UB)"V3p.F0aV1@9$
%rXCp_qLr7uq$X<1<,X/TXQ6u_0Uuu`D`ghZgCJl$!G?M.>Cl]jcfbluZgf#@23uVh7"[Ha&*HkE([?9/T9fE:31`V:1`nA`NG>MB
%!t#E8076FIN;H`um@K+-p4FKs;f-D9)"1PM![<h@`R.K2L1/9$n=7db6hT%aHn$6`o=.r+8qH"7^?#ro<_GFCpbMYrmPoujWrS`#
%ZTMp0O4kUJTAr/9P,]UYRQ4n?I<tW`@e(\a&`*u4;QOA(;f8`S*roZU]OXO4Q>,V&dKN)(eJU/&EPHiE<%[&'2@(KYP?*/G<n$F?
%<L6A@J'%eZQ?5a=T;M5Kq!?r2GQ+^.]..GcGRgLZQG1NJX56%0Hj[drp6D(=%]dmK-FAoPF[VMMCGY/cMP0Pi`@-E3Mh1s!!nA\2
%8BXK:$=HNbdOPoQ(q?>6_892WXB-#1R15Yg8>*D54X)`m0I=,&^11@-[%Bk`2^]0rX?Fjhs*`-]rYTC8SE+W8]LKd!M\%$U3<FR`
%pK90UH:#i^/kEWH.&>VCdYlB3`j2Q'i!spk!SCOH%Wk_7CeHMu;5bgX=G(/C<^Xp+Bk$^e&=QlMaXqrq&WPj;U1biFU_fN:2,M3Z
%XpTu_!WKdC#FUh=mp^U?.b`FC>Y`HRAP1IlN(N?QMK0P\.)O3(MosPn=`"XcBo(E:hO:9N9n):`g=M-pPh6mj%J'c0B6WRCX"kq+
%/.)k&._]54N/j4hU=Kh.M]&'D`%I4*V.*928)`/C;.$0jR--4'fSTNH!kE!c(Oqb?W3RO^3BO3LQ8BD,W`&/-D?@MQI8?NFU'SVJ
%0R(U/^_1VAJUnI7l[lMI%FLW)K+gtYQOonmSa)s=/YS&2*OdcH]%_&kSenHD\$A_Q1rPOt"=>'toQcB[GRd/9);D.<CuhpU4l&J-
%0Qi/`P[I98OFD;:dU2j.DAD(!m"7ZW57mj;3nd!]'hM0:;3YL;I1(2SUS1NGipSW2LC^_c3a1)P-_l%-W/+ch0Wu/@;\A7"ICffF
%5EG9RcJROA)uk?D(!s/Q+TPdl!Z.,l"".%'R"f2Mj&F8m[Xd9^jHM,u78Ri8Ijl3REOAY]YN3/HVqRJAC19]b^0$F7D.G,A67mtt
%>16LJC1o-(T'B@[U2"]M9[nD%ea7<K)!mA7@a&`N2DBsLclPLU:_C"fOSB_g\iWjt2q!N.P\j=a\Y=#6#b'Zt`iSLbTIrQoC9#*1
%LI3^ojn[79d%'ef!+)A_(&DRB95X^u2#fcIOYeNS:^`=X"3js"Um]`eS=thj4SrtBgha!VW=^kc5okiT7jaSLf3&Rja$buqM"SM(
%_=K@Q-K=]7]pmHJ=b!tAC;8mP6Nm=nC-@n&G>W+rJbZ7rLh9iN%W+[4<5AbR&$)YZ'n2ktjniciIK5Mm7]g*r/\01NlW:O-9ksV!
%%%"^Z4sGQqFgD:;2=HK28haHe\Ks?UY(5eY"YA=JnPFlr]CM-Skn)[*E=Jpb*K'N=:me(k+&^LMh`qp_3J.g^@5$P?,iVg"H:uB:
%<.hf:>i1FJ=7$&(JIu^p&E@IW?D2XP5;'GBQ-.$/b7X"17`H]Qc>VQS1:i8R[BDG[$WhH-)sfu#[T#m\\Zo'F8#CrtRRTPG$pc:h
%8Wf8N]SFs$\K\@e'cX'L!?,g,7)d=m%Ol>[VAKJ9\OC@LS&2`DF%r4%^1,YsE\qo&Z7qN$5[d&V-tC![=J)MPcU7^4$I>foa'QH<
%),aLe>4:3)/9U-70EDB_q8XO>-kcFkK&;Z+"8?m'G`%(jb36c'X(#W.TDa"NCB6b^Hdi=]+$8#D)do=<f5I\%bnU'Q]+`adg.uf!
%Mk>Iqmm:K`GG\W6R,afrqB<671>?A8N6gXN'li0O\j%)?ALAe7Pc5IIkXa.0Qp'kec"Uukbt:hd3a0`hCeb'"Y7BF\l$Ru0?QF.o
%a2M8aZ6643g7mq8SXU5TW,C,d#2sD2'bs/(P^JSU&>G2J?ejhB\Zf[rj5uZ,\*SL_f.nMf3T@q**?-1I80P.oPLMidDghSXUHJ-,
%hsq?BVu0N8$B,eu_j@PUk.q#f>9WK7I\6M*`s^dCGs<eI19$2IkS@+',8*IYWPP^d:6sSXl;LJQ"g!e,!^1Hr2gVF&hB&F8ksInX
%FLir^)FL/_#Wp%KMGnV*_mSfEl_-TMR8#L<:CE#HI0!mmPYW+q846brXXH/l)Kt6?iVf-+d]oQ0@rI_)I[4fR$aQiV;3:EHK?#;g
%#bk%Pa=eb`LgP8)MDrbiE(7HAN!K0(&@ekS9ff:p:R0=eC?S7$E^$?!Y1f`&pIY7^#!79N25cHKEoikIUIRQtL%;quRs-WrQ])\<
%pbL!AaY\5#q]lf2T_Csb8qsf;6+p0?aAo)81O]pN4r.tS/%"<b^.Z,7MCiY=%;!u(fuoDn_%g-uWL#BkUAB+P@][l=^fJ3eT@(2c
%WkV&H@YbAiVa4U0l&S8mAr37+n/D^pI?lliB*mL"`;gs?A-a@0FV[FPlO+oI]Ih&S;ksX:/5$ZGmYk7"%!3=$!dOh_0$=9DhmM-(
%_<kXDn/[jL3%/Nq@EtGq=MbEGWC7hbi_90#^e6PZY.7U'A\8u@T9P=4:fVWr6^>+bgQ8*C[%*._^l6@t\]9f%Xo_,9;W<&%8BNES
%CqdL@5q+ZZC9@Ok=)?%9\!oq[a%>fA\[HZZ:F]J:(E](5'b5>7X&;0]_)DDlDSYD/j+WJo8Qk+D5Aod=!OYoY40s3+l3c[8"Ihbl
%WX]dKs.R_gcCULc$UpMQqkik".MPk6dZu).:[+$'A/YcUVP@!@WDK];j<__Tq<f4P4Y'g+ah03@l<GN/?@n_7(>X'nh-=D;+!GWr
%f'/GkXE:]7*ItmbE#u#*QEl34'E_'4j',22h+X`'(I6]^>Y^<T$QGL[8l4cc>a1oG@qh`:Vn-,m=O3fLR9HWM4*&JZ!7V>*^0K%L
%7bj^[+hUF4ZE'@U_qr^,q\)]YP^kS:[1cNTR0nEf_bVk\*drm<Dg,23`OKASF)1*JnlsL9,'dR]Y]%k+J0S!j[?<rnSR4MVED/5X
%5-re`qikr5W]%b[ac@p=pV2W_K]rs-(FctgIf&SS"N4oR.[C"g39$"2\`mhG/fh_R'W^u/8?ZkMFB1grTNQ'_%k<QdIrKo!I(r_b
%s"'&&DjA:gD=V_"icBes[($M=[h>9>9lZR..u5]X_qseg]XcAPZ'cb,BVL&F0S0npRgB?7bDUXkHM6UX?bM&olbG(I-=-cGM`,"b
%G#)o+R'4[Sit=9-*'OPo!C/g(X[s2haHX?>7/17TqK@kC4&Z]o;VVu*b:9<k/j*2S'YKZRS"liu-4AVf,s2sse`8jKk01$mgLmql
%XL`mmUV,J[c[5*A_E@-g7@r%2Dt!KEb`Mc'X%<U%j/+Rcib'RKQdrfeHLGHn#TH^9ae^=Eqh%EU?+DAD.VZWL!I5V1WI@+U#W/);
%m8Ou"jBV8]j2DI#.u`F0d=T5-3%!:=?rK&A%3>_*=n_X[4L@=Kh]A8JP(TPG2TGfa^88$jZbD.=ch.)[6^39O>:@om'%K]77TDGh
%51)+OUi3`RBY)_(Ho:W`h`lIj3gi1p^,_[h)C?k\>B*T+32A!*J+^FAkgFG%<)S00rV#+`M\Srn=P6<Y\o76.O!&Xl(K+*(No?.p
%+>mVH8tAWfhTOMGR.D(=%<3kqcW/ir%4Uoibt*QD<Ihcp^o$/^&=_3YVV-?Y`ks,^PA:s<O(.kOh=$,fp:`n`m?.'KU6X'PH#iHn
%eN<!(;&iBLHM`F)-+Q[CJFIGlP>,>WU)p88+VdjFD5oOF,!EUCY-\>CCm4V$7M5Y&b[]X%63-3Fk/Ju-PMHD.e2p7ll<V`X=7N-D
%[6%B^IMspEA(l\O/K=P&MW]M"RbcY\(.s%jDb'Ko+9VC*!-#Xn,F#gN_S*=i'0'aiWlAcJ&pi76-0-^!_j'qh4EJ2S[X!dWIoMXg
%oF!7QJ+FGsG3f=W/a>hXbr)tB%$Hh7\a;,\W_l6]k#Y,d.=^/DV/DR0``1DeifcIO(ficT+;hKMM@UFrP1F.CY4]l>f41P)7a+WV
%Dah>5Mr<@co0F_CP;KL'"HMG@8*]P7i<mRjJ"3>:-X6QC^f>&`>O:m](ti"'ZcdT1$TcFDo:'Y/.S(,G9Jht)`->ZZ/L]`Bg$o)I
%?QHB6'DQrInS5,fBOUoQ8eY.A</n/G/e47>&:qTu.oR(,(_o!j[/du2r<,;(ia639r,2Gq9A>^)<QX`J28bZS#3Fm<l/.!*`mKi\
%aRM#&;.36"kSCZTDL"#(J,]JGJ,fK%GU;C->t8d[RoV-+%iSR-)t-ej=m6&t,Wm:f.Y=WKnd]1qq,CXi9K&R=*<J).?ok<)7`>Ri
%CN>+8+>2nf$aLAt=U8^u"9IFc/h`8XhPnka1+l4:WtZrXG$&Zac`0D>B.n77>0gel6Kgm?*.cb&Va=0p-YO:7@_'RcHYS0&5kf.6
%G-ZSH#=HPC3;enSof4\C+FMrn7E9,g"sX<o>!7*V]*/Bo+J8eW:CZ9:@&'NORG)ihTe=@_e$)#!gr)rbQ!K(@n396Agq:E:IbC\n
%O^F%,D3'J1PM,8"0Lm8>%s!d,QMi[F#f#JV*jSCLkEg*YhD\g?<(K3,MrY]Nl=5m;kaS0ap1;J1Dpr6na-^.@V7(XBX%W,SMm8*e
%4*U'-M>V5I1s>N(&n/!L=WNGVdk.VI0[/Gc>XCM0hP?f1gi\f'\@<`=V/*a2Z:ECmM<&MsODrDZitW$9^'D*9kAc4;YX-<SgU6G-
%,#c/pHP<L^QSNuTjPs[n/Fc:G$$($0f`uSh3ZqllW;+/4HtP[/<8>P1O!7+S7+L+![W,A]m&Y*e9H2jo'=>h`kg;A*r06c0lKq^G
%9BqP=jd:MZgJL*<47nEqOD,CMZ6$Sk&jYLOS91Z!H^CDT.gRVO?<]l11@X)KQ)K>.H?<1BT+4:C;1a3\p]GkJ":@]:QR\Fk<.sJP
%RBmf,HM]J&q9%.XjEEg60#=GoI<pe5s4X+Fo8i4k?K#j"D-Bel0_9NhLe5)p,pcboP@F)%a`L2@_RW^%ZP_(<IEMk^NdhX,caicE
%[NU*ho*0^ql3DdH_/s`dif9;H6TPs,.U[K]I[0f"#j2e>"BLedWKgG65_'Q8SlHL^^K[%i1SRSESjZtFC(eKl\"ph_VFTnNYU%2R
%5H=?(,)9lmLihfD'!,;[k8$4jbJC2Lg[_ce3)kUq/H2ft;\df0^CP&^9G8BtNur&RD(F_^?#p&Q&sijN']>)I/^\36cO+:'"DgaQ
%IW[=:))<]H,!9tTrb]dub6+f,WJW/4WE:Gs21Qn7PmAdGKho7\p3=#mBjj:q2\[YsfZdE(.h.NqHGl7Ym&4^.Um/8il.r&(\Hlaq
%$3?D?J/ZYN$oO/*VqQ?.V6dZkQ+O!A&r:(kA='r/_<nWj8]H=[W;ncOEf51t*#P_U81;5Z?r'%k=*g<L/ud90^$*DCN"Zf$<K*JS
%YC-\_5N+?*bu@4%U.ucMI/.D%R$OIm],DR48c`^An\O&Tdc(P",12q+Za,HeT\#oMC?Ot4$5]_=Ln&`am>9],d>Nl(4>>Pom[R1.
%<B<cO.J-Z)(GTp#rV^1h+%l^XK'^K;Ook;1Z)LY[q)K1?:oE!r0tTGoW&8mmkZFUX'mWukQ`p#G]jH`dodi5Of(5.*b1(>gNL!O@
%E#lZ?Q`ZArY<[jWog"aI8lmJ.e@ejqg4::D1W-_-"pG&3YZV\Z$>hYVBK9[D3!_f?hPEWW^T(>kNPD\qc'it68TkbCMjO*A(fb=[
%W58-\.I6;:s$J9'f[q4R_l@SlH%FIjI;-/.-Ru0b/tsg1=AX/m5*SsSm_l%T1SjNY,$N-8>Fk&T!;FT:mrmTk8?5k5UcuuWqB3I_
%XZ^ZLWk10,Mrl^W[pI(PFpTD;&5(ZMA35dI;2MVc<P1'Moq]0a`][0!<$Bso%B\8h><D7eSmL:?^TU!4(#`G4ZS;GNM>NM3*AuaF
%Y.l*,cgQSr33e-=]E1i$Oluk-5]rDNUuIf-[(rY=eBqO6<ZT/(DN06`7uN6Lb)aJo5.L9rA6bG79fQDmrubEpB_4?54m_NMk+]Yo
%2L*]=>j$_[MBNoJL!..8#AKs,RCc[aG1brG9o2/U-_f"2r+JAeEDN8_5]+E56IDEs<B%q[4*%)PMES8T2J"-M!guENV>jjW"RLL@
%H*qFBE,?>7g8\c#:&`G=lp8+n@?H;\9G.8n1Q34rAOr,Z$l6P:#d>d5XqX/'51b4&Ln9^%;;'6<fA*?LGu4m^H@2^Z[P-s@d&O;=
%8IK[<F?Ac&&LGn[r-]VnSm>[WJR,,0V<,^"EFsL4H([mYnaKoP.I.mXMu^&>BN[Z!J=.4=I/uCNePb4r+^=ssV9F3'@^jr8d7h$0
%!P,402LI*AREk6HjQdX^1<Z0M#QsQufJ+)oE`l8taL%cSY+.tK1"7fS1\2?S\3&=6"&h2R]HV_'k1X*1&ZPb9Et&6EN3/a2TIaAG
%`([aO9eGn?i/6oZ=j._=\\')HQMn(!<]%IR\Er@D!W@I6A"oT..q\YV[(`",(Z5&Z\)4sYl[c\en;CFp4adE#B1NtaP<'5n7O2B9
%bg3#R=.F>346]nJ?gf;H5V2hL9=9]N($hN1RDTod71?\7`l_sqDS1dGeQI;OJWZIZ!sIO8`'@Hd`7,5]D-Y%mUAY;h74H!WH2kj1
%CCn7bp/pbB?IU.=#.j;*g=7XmKOo"8*,Mn%kVFZp+R.M.Y8!9`6s[Vhqano(@FH2=\h@?Ba'fK)=NJZVP\XqW)KY,c`!]OD-tm.i
%hSo1"3iYgX-FYXoW057gPk,1B2JWcX].p>'Th'k0q-Xej:tpWnZkr?+o'6/'hH/TMi_X>>,!`4]@<Xoi+J$Fu4s'*"b'cZG"DUl=
%4%rct,)Ms$D)O98GV3B`N*lK/3?X]*Pr?]gcP?FSAU+"G=_o`j0jG@ljgPF_nQ!@K]cB>PAs7/DMEaQ,GUH^qqOEX_jC]:>67h=a
%fLJq)d!91.BLI,N.9[1d=9`5\G,/l%`30oPp*qBiFd=[-l4<c:.a7#JWdsMo1Mb;+X3pB9Udu>bFB^?t-L)/7bW17i/EPBZM!15%
%N*5%q,1IcjY+`*Ahh,R8=HHIY@eln[e+Ir<:HQ6clh":6-]nfPZrP7%1&h!W-2^H5q09h2202A5@$_CECqOe',=D]YT;oo;>4!Y;
%U?ZBh6RCGqPq>pGMrkpB!eq>;WPOLj=#'4X5"22YO+nh'dRk<gnKfph!M>$-&+&0uU0)+mScp!hFOIgBk^uO%X=@,SB$o;b`=#XQ
%B\'KnL)o-<H5B9O.MGEe@"_F,Z+-ETO?4XlWTiPS\1q?)+6<X0)+`R!70^0E;g%hT7-adCOZ5kor4^jkSBCFJ4bLk^I)dE__1e&F
%pa@C2UuN3QW/_?%6.?WN&4F+nF&QmVgj+2$D\G'i<8TI9[;8jJ<68SO=NLAr#YE?[L]q+Dp5^9)i\3&9@o8XSXs[U>-l[8'GlfrE
%3a=Nr]*4j8_%*eAhPHjf*$C7:7SqZhSdXAk+MIXXAaUaO?c^WpE</#'8aVU:i:g(\3"/k6=cJ-&nVm>7LN:U`64q856WAA#gqK/S
%1MEXLb+PEU^/.-M'kJ&?b*AO!<Zute&aMa?NAn1DObsHE;45XlH]bWV8og+'<^]nT*u-/l6T32Pd8,QP;%Y3$?+iKDO]ZUQ.[%k=
%Jo>/@RNM$2n8488%:,rseQQ#<A[[AJ\WrWX]s2c@.^aRGCR.EgIVHPY]HaI\F2`?$D=$XV?.Oh(-4m+=gM;2>mr15"I[b:LhS$<;
%WMd"8''B'_ctoh&B'[F+^7P6=X7Wc`YEp4F@dN>B8NF-t9_1kI0f6E_d)PCk,)L5;:f5PX?2'S?Tn_WVTEmc&9p[I7N$<fm(]2o<
%/6gZrg+:lTRoCG&*7?b4b.LrL*u=998pb1-59&GJg#f_\A!oNOI`HI6<"">e+*c7<;'k%$5/kNNl&R@*@mml^IT1TS51l29-fI0n
%<>B?G%P=Y,+3!r=Ra<a(bq"Z!]Yjb%C6V]:K/K*a*Y8Ms]l%eHh/I+lW.tp14N\K#IJZ)gYiha[^V0FApFBuniNk+daW5OX\@kNE
%9;1Q1UZmK>Z9B)@P@7Cp@2H'cG"KfJX3+!_`hFAqQB'PRI$Y`XZ(HUsSe[[JRqu#$CdYld:!/*pD;S.sk-7/tkEpRW!nmnef@2F\
%ea&5s'Be3C5l]]bpO*b+Dk2/+(HE59OEqb2?n8<j]3;[)*0L-+S!G7S&p5(Zn3X^HMe?8"E=2H4nfYh1>a\KH^=L^@F+hfG_Ae`S
%.a!VUFi9BI)o9rqjL6qoW2:iC3*'1Q]AK^->g\=+>cUb<.>9cB!!Gspq)U^63h1TZ8'\?MV6jFf=Ca9/O<eNLQ[:SleDbr?JmJ=I
%6"T9X#Z.SZBN<)#bo,ErQUrfpDp(4cCI;$oCTDF#EZKIH,3@P_qXfD9hB,L1&:dj&8PG`WZ/=`+8dS)sEJmMS=tEOTN="8f&=1i\
%Hph-BkM#.=:qB@35nu+T$?-%4'@j@:e=V&6==n1VG">1mlOV[P\'7TUOi!t^ilm410b3\N70O0:8&UZ%+V?\!%XO"u%#EWt$nmD-
%-(S*4DPeZkMY+k]rF(cVjeTZdbu\iWH3g^oqE-"+Vf"tekbI.q9+bg@Cl0,E.&@YO!T@8tkf/?"SbpOX5-(gZj$]`3,9j9E,?k2a
%^1+<Fn]7huoJ,_cF2XY@?m_5JJcb;q>gnJ\<gVU4RgS=IPq!tHYO+op[^*WI*?ol"*31Te$<2R?U7p;L,;9*-jm=DN,oSAnXHNVG
%@fPYe`]*!=$He4K_odjPW>9,hC!bfu\]RULW`=t>k*6VWH#Yo@%IY:OCe](pDbNM)@R`MLm9LS)<('0ULuJoA@R]f%l!j3`L\BkY
%RZrho']Vt)P"9r-8pgQH[qssjNN9bIoPRCUn=M9ii^ft+:To<'^ajoO2en?&WKC,BO%J]k!%=o+XIrZuE/rH`=]D#=n.D&P:-f/)
%F<N&oLYYJ`nS:!$7>4W#7"T[QFXfYc\_8*_&@`/E+9Fp7M5:6]P.oe*mtQ06]m((qiG&ag^$a(^$bHIEq_*uY:T)PfRk>l&F&j-K
%KERFF?XA2`4%"(7A@W2(o&-GU7s\tjBefr4e!Ai^C)=ZCP<`)f"B9uNmBG?QZscrJ6j>6Q1g8;kL8YkJ]`WU9h^^C/nPY9pKZ%2>
%&n!9JN)4gIHO%`CqFpmj2ofu/o8dG24r/:$p+WeA;nNsN-iQ@1+U`X+Wn)E%d8bQ(Bi.JgeJr4[,HCF[rQYh-S?p/0W)^(='!NQq
%T<1A4(X\c]&B18rU+"Kp,]P=oUWoX`L8%&Ag2\UY[4:FVPUPd0YS^_*</^388`!&u%Hocj.1rQ?i7q7!7RmTfoPMsMc?=+SFc%X[
%c5%dSbLT3GgI&^^[T3,l\.Y";1,'(.Pu@`dX^W,pdE_"2;+.j"=+l^f&6J0F:[kg71Y>0rBS+LP`))MY5<c_^S58#ac$1/LB+Li]
%s'R5YZ^7@BY:_B6>kX%7M>i=9O:Qh^(i$%j;&Sq[Rm3e`^#Sm\-+m=Qn<m1E3XiTGF'S4[XQ2+^@`sgG/r:V97P!lt:/U+\Bsr!W
%NTG?F3.&I)T4[Rfrp/BGs46W;gREQg2mU!7Mp3h-hXB:VIk7ld8J$QWU(54[XoU^T2\bnV]YpKCMJm+J1!Y!06%qR]3+[+@)Eq6/
%mg#B/A*5NJEWC6-8r<04<f!6B0=EqW]C43U2n$T,e`:>J&6)].^oFpE\K'`[o*/7m<b>V_D;#EcU?6?15Z&iBE0",82_U#F='n6/
%]^*:e&joLaU<X=(hgI^`hg_f$L[t6qPk$nk11(N&hP&0.2j>KfY^9Y.n7ZKeXaWt72P=/)CA_Pi7@[9L2VbD]IWe!-Ni9E&n!Ak^
%9(_51"5U%kh>(q[NE!Su13?%J.2jh4)c'(I2.$4KfjVjH;D!>)2659BX7kmcS'>A_&DQW=NS_k<=A]nKBF5]&W]CBIMNZZN_mY:*
%U'ruB<0acs'G6gtaREV+6SJ#n*fff=381PUNZVa]M]><m1t>3Yjio9hW+p#]-jk[sXHMFPq\!'>+6eC@jcKs#9kek*HhaOE.:^C-
%;*jF1^1fH6&$)VKI?9\nd="9mQ&QjY1\<rFJTd$aHV!g"[M5_0%4QAocigJ)q*<Jj3$\#e((;GXj>L*F*\3VAFR^;kLTQHi3K#sg
%8<T`7")6)=K2=s,oL66h\=`H1.HO%<R[%]#CZToCDoA<[el-?kFb=+,(2X9gNVJLp6cC$(EKqbCX''Kp?d0;Slr^Q0S/>6WBg")o
%Bq2(no<H=bGVsA-ST]nZ;HFnU;g8'&'Nq(AM<p_38Y.P0nCkamq-m-F]5gZ4d;bE%E]eInJQUSh(DZKAbabc1Yt]R]D,TK-6sO2V
%JZIX&4i.h;3$35.%k$S<P-31$G%XB<Z<5/G>?gP3DCPl&WDSG&V3GT]USU$+f,^m=UVI].Z3.K`:bHhua%lOL<<G[aq=(`R%KBqR
%Fam6#(/';9C,`!A$InB1jK^5S<J+RKp;JL)V"ZU,/e"]!5:kO<*D84jUkCH8eV9fuOUI2q#\%hfZD\i>fqfH3$nSeG*CJ$pm1,Ir
%/WHB$Nu;4H&Oo;I[7Z97(<(?*VDd'H7"%+42#N9WUa0q+n,'O\pmbFmBjEZZ(<4+@Q5h_J^T120U"%7`G+Q<9,rZW;X!Qo;;#=kP
%%M-#BfM1eaU"q/<3bAM<hAI7ebA%-ci8>O4mMnh07]@C7p/X&=ZjaQlF3t[E)G2_Wfi'X?O&!)>;I#5bf*;`m(?uE9b7?/]4)iEU
%)@3<>m+cGP[rLTY\/4nj"E[OlENuA,H>>u3XW2ahqU3Nu`H@NOF'kG>+6EOmO86;)>mp%u4WGJX3)D5h8"(S1elbtcVkOVO+,>9P
%OHet__5#+1Zl1j-Vp933.jSE6RM8n@&_*5r\4kYY>Z=*aeWrLmSir=koS$(PX1(?.juV%DMKscO=-`l3Z0M&s1#7c8^3u]%d*t,Q
%*YFab(-:;<FGG>tl4.m13s@Ni?>5]C\.\<aL(TU-0U$T,0Z(;Y'KTp_A$]27.o!6X-Fgco-k5i(OsMFJ5:)./&jkZ^85d:#4eCKD
%Z3:HS`Q-/U$%!QFniYR6#7\W'GWP@\kWlTmcsZOBqYWlb74hTte_0WG!tq)gJYEjeKLBN/\R#qMjbmBhfqFleiWbLf2K5mJHW1>@
%``tZ0FDjO$h]o4aHil.7<21mB,++FMo"^m>O"\4ZWAW7,%`h@W(pcMW-OJ9BP-lo+&Uql<6$5eAZu9.VVnKq=i^FD8<;_mq^']Za
%bCL;"O"G/$S8ci(aS"\JoVnWYYr>I*2JBNd[j\1-@>=*T.dsS,;Oi\7r<$+(8E"44;UEpF(k>PFY2nT5Rd9.n/aSOVq7^)/nj$T^
%PF`o2eS1j49Fm;W'ZS&7f)1&kbj>f)I*!_0)$.NhM+3J!1Lr<2XM`#-l;AXH!R!6+(p4md'&\Qo*F*3<'7rP-?E.cL.Lr:k>]lcu
%221oV!4bO7inY.o[Ma0[o8t).)RcGk[49NQe?`T+i1c+X'75ZdAXLr3o6de/*n,./9'"!_CD,q.Joe\tjQhTfP`eQk+]oH)@lXoU
%=\0HLZu.n)"0RJ9].6;;g'Ql:A#9J'Z$'Cu*(\D`BLpP;Epn>Dc6u$G1-h;&Cq$r0W,>!CV1?gWh^F!a"TfQDV(b3i[3W`b:;iZ&
%:ePXk`jG_*G/Nsq:bf$Y'268Cr4rN%:3O;+-5s#Q]P_^]Sght)!`Nt)6S$=V<FP]r..F-*QLl#M&?lqQ>cUgnX&l[mC8jJ.G[b7_
%jtA/e@Mg1$KbDe56L1E%'CLqf6$0Y=(i,tdcf-:2#VQsR_9[Ru,'mimd3%qe`1SPV<?tqjg\9BAE>pD!Am4_tKt.s(K7XS#80^ns
%W=%".n9p<YJL1J_cVN3gBBN-MlsWIa+JHaBBaNYV=\LP;kmKFYa&lfW`,J^V1(b.9LOgmCbna=,kVA6)>J"*T3)kJDb<R`uQ_P[$
%R?HKlV0t4PDpD\`]OUr-@R-a]QI6-4A0J'!RkM4W3mkC*P'D1AIXViIm&H'R:j&b.69=D=\qrnjS>pItJ\=e.f&&K4l#&o*,`4)!
%BC*/iUbpV]+=)$Ige>37eJXRiV7Tes$>f^u8)V>"3FHe*>op3o=sgd];os8rA&S['rJYhb%(&G;$rh9CpYB%dW]](,AHiZF_WAOP
%P^Fighd*0g&ba;?\.GR"i^L!?ApqH"`>C2YCItEj/gW_SX_4B^/Ku$!*3SsSi0%FbY]q[Q6FZn1m_0DPlhsd#D1&Gu'l0IWCmBM^
%bJ'D$mGo@%=TBf!\1%V'(]WGB"8,(h4&`qo-kaCO%eI&nCMQJ:nIX&M;-qn]b#I<"\Wr!t%?GM1*4>,rc$jXL2/`!h.C![p8!U&f
%m)c):mS0`D5M,j9!TETKR+V.%ah%&(o-G(Om-H1d;:dAtJo5<Z;#sX1h4WaWk'&.`aZ=`4:Z%9B'nX[;-UW'c![br]a9^)6br_1s
%eZXn*jdD8fo<i6^\Bo%sj48l9P,@<1]3sY3Pn@gBAX02r0(H"Um(:5t$mTCEeP]J5Ej]=0bpqG\=fpg.\u@`T"k%cGUOA:2G4a'*
%!/a>:'eQ=iY18;j=LH.>Fr-HBn=+Z8J:a(X>p3ABiI/(6U\_#Y'r+a?/h%VVL6@@VE1!ZP.'U=/PND3UWZ]Wuqc@VWf3q8Y+c"S1
%OklU$IFuc`%Y<OPFrGo$Wc9M#)_SO=M#dn<HI:4g!`Z1Y4P$Yc8OpB\(h;D"]n1bWZ(pAcI]$u)>iMK[\>P5;BZEb&l6!\CN!a3*
%Kp#=o1X1R\Zp1Ck$+tuuJgg(mV1sI%W(.%<Ze'hu+`1-`LlPnmGd2,#4.Gm"ekqNiQr?+O^n;#`<9iL6"JV"b'jl0dK5k2GXBldk
%0XN1Z-QuQ`RDH@WNK]poOo]4Xle-(h80*[apJsYa[i0L)m0LQZ$KgZ`W+F#E<3QT2!5@^kFckC8%5O3@Am=O)V.+O:lr,4`g$5dA
%7b&O@@SWj>.\ZF8K$ngdoEA=E`*kg)boba>nZi+3O2CA"%%_Y%k=b1ekD]p1R_d!(WLj62WL`F"&!:gAQ/Pt2eKF%O_nd+Z]Q<d8
%*S:`k!_)U.74H!uhCj!Klc\5^ep+o5?D"n!`L9V-QG'dG-fMCc[CIto)9H[.oiUam8lTr?-rlkXPbu;F3_BG%HVQRZF)6cA[Z=p"
%YnWo>1XDPOngO1^5216)I-3:mm%l`#-0)SP.,_Q,.bNE<i8#r;7=Egqjj2:38(1j'IG8k(+PsUc1V&%4PIj@EcQ/`bA4XJ--Vlm,
%V0fF5TX)Wp#$+5Ob*(Hi-1'6kBpc'*F<rr>4+f\\P**C/AjHT;p]Ld_'Nih3[gs-GW67Yg&g5>DH]Ye&h7S*H"-l<oj,u7j[M6#e
%VIh]a5k,to7R_2fX\;d>$]lDi2Tg\e??QI<e/td2gl/P0,dbi2'989-!A-Q2_`8]>6fge_lg>XFa'L>eYgX>842G!*r#Tldmn5;_
%1_$59$8J_^0uQkJC@8@uLEK5(XuM#9W(Kbpa/,e\86W914"eK9BHbSXXk9s'<KoE)J5:ucDdB>__qZ:[b[CDn9(llaqqZ/_Y254F
%SNk'L^N9`[^KYPRh*]V/F]gKq(ur#iWTMt0DJN,422VpZZ?2-M_\uT9m1JD^6aBd6`Tk&qNq=r.aeba0"*G?NY>ifRUc'UD]'K[F
%$\G^`bL*&,%nZF?=%Gm@SSN.I07_$IK:N]CB?T\,mur?o8X`.(U0]QHM&[.q&a-T9LMk"dO!EFgG4fe7\`5NK2-c94o@52tKYf)I
%2F8!:?n6tDO'(.EhihC8c=hF*jer9F'W)d:b=E@_>TM4<IB]=Y^^Daa>+GpF1%-B#O0':S"s6?>o>?KorVfHH#d^YYRa!8P3W*A+
%=Pu/d41)`*6Xom$FVY\+LQG*f;-(4sY_/l;M!RTd$7McQigYpG#ZFU$o*:1B>?6AqC,hPZ9XmEG4oEYnE,Us=-1gWG=`lh7rqrYF
%e)f77HCVcpA,Sdkbl_mFJbM6;k7bZN[nDWN>McV(/>fh/Ri=*#KnBrgnMI\Q/5o24>GuPH7&)g]d'AXJe^&]@V076*LBX8K]$:*Y
%FWi8C`d4LZ*cj7<I8$)JI'`'.dT>'$H-[&HodJUsAco-/?1fC#VfsF:qg#d=h&ro0<dih.?dJ4cqf&Kp?!I6rc4NHB/"mTfU^?7]
%Z`"""<?g"gj$@gG8r]s5T!?t)Vph,XeEFVG.4HVKLjj,$7(Kf.OoU+=]<Xn?3]!2u4^s,Pjbn>3qa21je*GmQ+YGBDM;,UDBkAID
%)-XLN>:]Tu;dGXgjh?2t;56#n*1*2Je-(W_6u/=p/tgkbN1EjEES@l@Jm>,na0/24+%,"e7+j&V/q*CiMR)S`6*)_0(cJH0Uf'PA
%.^s>S.-!_)+@Un^3euZWF0hbcJ1ce(-;6&khI.8&Ag^bg?X/K`h5WGlaL_%SQ%"+,jgW"R73#Kn[f7kB5cXZ^FW%]1)3a?,jNEOs
%;-2Z7@cCC1[Z]>l31Z.ZNSou%n@"T[e@c&fk#=JXjQnZb]FI*mY6@9]jfHOY0Rq7uW%KE%conC7d!+sVp-Y"?^e$u(800>&`W?_1
%?m&u#gM^%23tPG."E2r:iTlMPUXEmFWNke2RS`su,SD8r7.iUsOY8"?d<,10W&`kCS'D\"_G[TU?#EA`GpGbFB7k9Yf.-V$<bk)L
%,e>FBm-W^pHl/tLP%c5^@$3\gm?iHf&:8O64kVe_eB5Z_GQ.d@qE9Y/VA[I<l3^#5l7.es][e9&KnZ%m/s%\[$=F2Gc_0(Z4,iJu
%gEf1TGiNBTMHW&JH0=UZJBZ\c4tqnP+)Wa>'t>ul*/%[A(/Jp!QNO>6A?s!^Y/_gK5e0g0SnWX@4W'`@W$+bo03Z:+m%$#DI:Z7B
%*\UcB`)p2Y0s\7#_7"8r,"(TaU.Ah%R$7lf%J=*%eBJ\]N8JO4[jR'8mu!Z:0Y%^S_/el!;P6"j9d]I'Dflg.=_&#>3N&nsm=B+;
%W,qh@B.1C%!n7l,!!M<LO_XX(dttO;??\%i99jhYVQ8#-YpkWGO(-&ASRb]fICU)_h9]lOkdI`;A_U_+!6nO@>!@hmHDIQl`6DN*
%Q?I>Z.2d(XE3rYf\b>o=j+uh>`t?kZM^'^fpmJ72_%Dqcr/\i0IClXH.bU^T=dNq,,HU%<:cpi7-DBlF^2m5f8R`p@P,j%?nCk_:
%AUW[fPl'b#Uu,"6;HP$mZ8^Z7jhW^_Zfs308bQG\9omuXf.`["?"dF'_paRM;9hiG-InNM.uUaUbkl@A`f$O>:W?0%2D&\+3g$&\
%k)`We*]@qjeHTL<i`%;oes(QTX\:FVXoMS(2Ds=,-CQ9N'Lb76M^tNU@B:\3;%'fB:T03.MODr4l'-Q0Yjt[*LO.]<M@p9a!-=J3
%W2!e#87EH))EWi53Y=-GmS]U,cs+JcKZl_S4f$f<La#\i2''NJ(Gka_8Ks9e[]&%U_2lK<RN>.q61@!mC>"._>gS<Nl@uT>Z!1rM
%Ml6rV7]qrdeki@S5h,I@gnE59L[lB"IK%rpF5P2$l5;6K-chWD;`.I;?J>k^eh@V,f'+h0!i$n?B/&)o*Add$])#m155cn[6!Rs4
%G(inC<*Ll0V5o=@Ltk./doV4,SD2PM7BIUf[j*<kZ7=F8`\TJO:k/1&@m:-0r%K@JX,p9H`QX=GmPno>5TWB_F/h!h`IQYJ(h-"/
%`\qO]g'B[i7N%;V(Pn`57+ngB;U&_i;+<=(\I,]^AdpqW,a&.>^e7B)3U$f3:"@u?9b,;DPuTL6VGPpT]2=40N@>H2SBGF+V;A*E
%e$nYqkrmpUF-.54[k;CC=oonY0N'ptTPte2Rd&B_oe4?m/KY-/VPUMWgUK:6pUK?;XXKkl[>_`I;;t5Ql)d\d1RN&Zbt:-YQD*rL
%?Ykd?,$[eU%5h6)6qHcu*^\aYKUj.?4JCRG?\rumTCfsUJ*QK1!1g9f;?6ft@)o:NLoL.`m$%P8L9m//agA)pOb.4ODt:8!h]4Y'
%T)HtNp,t(R!6+_h'T_j;9FW;9(gS<hQeoC=\$dfUP;;:eRhZbY=Y'ciXV80=E9qgOR<D,^lfTu-jNFn:9-TWoIpl62B7&.%Ljmt:
%TYh(ZTmk%?.3+E+rNEoRIuL+$>\s\ejPVS:[a[3nOABPW!e&4^n#kV#2]Ii(Q([PX,L.\H*D/L/5EAFcD%[erol`od=qTR0)cO>d
%!i.(k<bV/0/7)U[=5?SJ5!$_eUM3@#M^BRl%P/Z3N`Hj8(5V:=F9c:EYjSfL5EmfPNf*)=l2D*%Y1<25+#7-JG.h%K<tTeY\1:Q$
%f3Y2C@u:2OTiNlL@gK3kVZd_!@:ATSN@[JbX]h^3MC3;D)<Fe3DA<g)FG`Wi$D3$JCoXMia9qP*hBT$u.bW<Irn3k./^Y655eh*c
%'l&)Y:Kpbm<&mG7VKh2WjI*ePe<^J\;cI*QEUHnB7Q=4]daI/hD8SnX!EQ(3OV8"KQbMZS'7;]8*5R@J;l,"W$7QkSWX^*0M*j&!
%4.<*XP$A#CeSf&450*UWG>_@sBWFTq*`"D#ipFYEY3IMKc[t3H$E<a_KD>jQeA5^*;fF;q)B*1Fp6\9K\OXDVO!7"^,dK4r-'Haj
%M<g;3I>i<YSZU'8EV:!H.+*[t:u'&(E+A6m&p;oUE#ZKCCWoZ;Q(o:[]`%4(&1s:XiI[$74O,b.$4N<GYpegfGt/Oe/&_g!3Ba=#
%G:k%Ui+K'AefhiOIF^)jhbgd.FjaOSKSD@1Jn)6Z`$<j<LX1H#67`dm,FXT?S&Cns9?uScm,f4)Z6N22ldB_X*X,(7NaXe&daXO&
%G8:!->rF*.=K8u+^=A!Zmo]lqkNbhHQmb+%Y4Dsr]t>K;mb2[#&fBUE_gVD[[\bbth@GSYG3il-V:crEP#ape*8V^l=dFOo*VaH"
%fAVmsl4gngTR]TLI;6L(FJIVq\d.8goL<GIoWp]<!gVNiKW!0B,<7[Oih_/#)tdjT:jPs-l66P(EbpjpMK2pZ3uopL=H3?bR3c^*
%+$'2X_OZSYe*b3BRYn1j*REt4MbTBN"g)ELVN![Sa>k^O4+<qEf9p-8V3TgZ/3A84P07P)"m]4(N*Uc6Z"Q\Dl;`W:c/o`=(9Rnu
%Mf+g(Q<(YQ\g46T+VMB@)3o@OhtmbmOJWLn`/lC1U<tIgU^8>KN_<KQP:i0&lHHlNice5p(@HD(+&Zs3aGml8*h+K#U/gHag4-5N
%akOE\8D)$ukH(;g1po:b3\:D"BcmG$iE0[!%2@PY@;cY&0T3/]itgMpjmpLd;'0'?aT^*-QStqcR<Hs(as](3HbSjP-%C'lRT(#X
%>I.2jSul"8=$#s2eQ*7,#2+crWl]emLlY@8Fc8u$WGd-PVXMjlK;<7^*!`g+.=L_tWg/6l[=)bq;"%Vl&\3M:e_0X*?#jI<4JXun
%=js5CD#6]7Et0tPp*E#[X(aa>S?=N4?XGS,1:e15$9#.9<K^c7CLknn`M^Pd7B;jT(R+Vm8H$=Q;Mlfd5_rAUnY;@%FK\t/LKI'u
%45/)KoV=-29OG,s^1TkDlI:oO3q_)a<[hD*mR9b5=$-o&lHRs"]]/6Ci`]90oG;NiD_28*MH$a/'SqD_E7qo@%Y.QDU]\Wl1Kk[S
%0uV_gN/Kd)*!Y4cS^A1GUfhT2[<6t<&9i&IYF=nudXf)+dFZ"%V:]ARd$),A)\S8'C0hEX?ALX&o]Od'EC&b,S?*:^j;W34=0k.D
%U:)dKYitk<K>aF$pU&r-)&Q@N2-(=1"7^RLI5o&b7'M;=#N`GQ]hF17=2dRrl!#FN63d2J(.r(pZAN"bRF[_qp_M,uP%nD^C%R0J
%rBOt$bum^Y5'q%p?!3]8A]KM2h)&CX*/[p9U`HGa8k:3V-2o_uIkrt\?^%#Sq=agc\@orO]Y,Nl^_Jip_l@c-A@P^o`cL>B;'J?P
%4D24fa8I$?F=_K26olHB4Go)*LM2OW<+\GWWml!^?TS!G<!Ftq8nJMo=4'G4?d!uA]([B_"ZX8Qm[eg/6KKI/e;6S\.0'a+'o+Gl
%grS5'&TX1bV*,ge*7lS_R9WEm$W?I.R!H6qD;Su!^Fl@TSTG`TFrn>l>dY<T+g&>_QgOQi>8SrG#r?@b^LD;<9fO4Q@K2HJ@K%"2
%n;!GnoqeWdIZ(2sBQ-n%?Ct3<F;WBDNVX*0b?.!bfBCUjq3pFB@2G)6:4BVd[r*&Qb/AjgG7\;Uqp??rW:@$.i>L5"*ko,!OsN2^
%;e\'8WmCT^dtapGH'ttT8^/u`"6UY$pXMf7;]*MS*0TjU->d3F]jD@/&&2^b4n[R7n&2jBn\)8s$6u@eNLi#5UtSI)#[:3>9H*=F
%5jY..h#>[N'l4q^E9`6K3%^P0!+Br<$g??<+$qgLN"8Zi%abu=!2;>V#g25ZrfE:a6+$?CB*Uj;^XfCIAP8X3NIP8W#^Y/rk^C>l
%od(M7(s4Vfral*RFZJ.t^@$%6ZogQ(k1NaeS)Z7O3lfBeEps?'Xc?T(/6:]C_O3m/:ie-P,4cJ4RoR-?c2'ZT>>pG+id=]&A&##'
%;=Urbg*0iq[oaLQ#eROs,(NhoD9Z7Z8H7*,W^U6d4gUrVi$97FGO"_k)WKr!)C5u$Zmh>l7,DjLC2Q3=K,qALl?&kOkD0?4_ABQN
%rN:u$`B'T$SRs#6@!*-a_AV(iIR5M%PFe?mR\LRQ&*7V"CFi^ZaRt7Tr+:),Td2=P)E8B1PXlBl,sU-cc$ks_&J8`";pm!&87$5%
%(He*i6T<)2oG1+dWN(=,G,RJtEnn+*'iu'])suCT4(BaP)4N7(]$?-C)NA4^cl?h,A5'PEY"E;]=#oTlSN",&YdJLQCH7Nl<A(1B
%?UXf:3c[=P4<BfJC/6t@E'`^\<4p:oF_>WH-n.&8NYu6jKVGMUXsh"=qh%$nJcU0&$fcN>D\lOJqc_g)n%hdArni4%H?l@S`9JDn
%1pAF6:fLke&I6N)7t"f%MD[*lLBOt"4n*)<>DRBO![?J1.ZC&Ri9,`5NQbn_`;I*/jYtYWg+Ih"SX"ULM4Ra.1UmZ<kMj[rWkt'T
%b-iFg_jWJHDi*!e+]Xc^[f]>!ft%HGDMUIWO:\B-$!Tgg`Ujaa+r'mps+#NoSAQs&[H;;+,93XuKX:ul)+7p]%h#qEFQdZS[Y30%
%Q0:>edBG0li#2_<EGd/)H;[>+kZXP5[oW;J+t'Z0Ej0g5gBq!&(#hZN_PU8V>&f;P2i&*QiPB*eiYY1/3OOOa4U2+s$N5B0@]0Zj
%J&6h/Xb)3T8D:hM0Z)O9lBAhBNeE)hjAB,[V,ZR%pK"7F</gc.![RL'i$h-3cXK[f0DA?9>4q<6Tlt`U*"Y[.1%c9!qHtLq/0WV*
%DB"O['Wjt5,;k@,b<GGE+eb!O5iCb0l9$)GT>(lb%iMC;X%BC_i&mD^C&A1Rqu\8,4mCk0q+[[UM>IQ'NRQu]4lSJB)i.[:[>DCZ
%:=ftX'pDZeS[e;0CO<?Bg<PT`TsFp,<0`_R12sP58PA[fb34c9jFS0;N.PH9ju,oKr=T!'9SE[IMR.)fq*\\`W)";q'Bkn78OkG:
%:(ufqGGG$b2D5t@_Y[<GK#SJ7?AZ+_.NG2LYtZ$._>:.fBNPbeZV1ADc5!9rZ!_9BTo)&TgQG00G$<HkV(V'^*j@6*2%3bu`G)34
%=pF7o?dj@Y8sG[*KCb45?$HJ2=Hi+Z/='s,)f_meNNfqKjF6!Fd%a[_E"R5M9X_m\'1$?h\$ug/7SXg%$>X/;Z:mp$M\/&mDq8]=
%I"nl^$.@WkeDcG+$k<FdU+Xl8c0aIR"sLPXVD<"6/^`j_6Rg$AW\rQc6Z=q`'Mdmi=A7u+6C]*?<LAK48,2dK@-G+6rCLG^s8M8t
%+SlU4$XKtI;Q)"^cQ6Ip[Y>=rbpJ;Mcs&:X4$\Minp_FbU#7Q>T.A$]To/4D<sRgjoL/Y0W\0+(jWBW,<NWoY5*rLF>>mQsn57dU
%NY.sfALs1X.iaF/Y<Nbr&G$4kNu0';..%XTlJTN%ci'fNkg!4[.P#fu[HRdV9gmbDLde$4k@n\Jf[RQRCm6@lK:!\&eIbh5=!:s\
%WYFm-;\n>&[Yh4PZBH,U3BF[CCZH%IE`DH6]o(O[9G(rLIFAgD(9B-cOG:RTXUPDq]J^<07oGaOZta7CRA+Dr1NkG`3!#HK4/gB4
%'C,sIf1h2#IY@GHjhML=&;-8Flke>)fjn2XB;-97Y7Z:sO?#S!J2>SkT=m_9F7rbj]Kf??]]LHjeGb7V`TeF#\28CL63Sq92@Ljg
%P\>cK3gU0<(c)C9+bfn5_($l^2H6UsKqs;E"oCXT5(g3ABo(r_TDgEGoH4&n;uZ*n<R-*cYK,]%lT#+2J'Xa6pOA@f&*F&X%jRYF
%jhLD\T)9]Q_L):6+$Q]RK;;p:-3NWDecu91qrf.E<WE)kcAp)kr8/S(2(T_B&o$\Xg3j?5Nq4gBHZ6Nc^&Ll@C!IU`Xu\NH`1R0p
%:&b.F@nm'^`W[;!"?_5#T?[aAKMnWHgeKMo'Q^!heH6G?1]K]<k$L!t>OuEOmd?sEe/A/JVlu=$EG2SDJ=rWkls/kD-qOXA`6QBC
%'>%C2Fqf,8?V6^<?Y_fZRCXiS1!t@`!.QoU+&N:2<?rgU]d_B8*n8pPkLJYkB7]VRaIrT)ruc'5C>]=oq'AV*_ma-:T58S/BYm4e
%I!j:B\Pj2AR3/#-o[D]TAcJr@"gS+%s7gO3e%bqIQ[f$bs1A<uhu#_=nc/A;s68E2*;^h,qUJC?0E:XQZ#1Kh8M-(dM1OW59U6'P
%M5Q1L7::69>t(D#lVuh4.Fjs)9pJ\FCn\;#,iSh0GsfqN&"95Y`1?^b"m[5$^*QraiRc<]D=kj>H[;iP:eD'BdF[$RI=g9^0j3uI
%A=ES<#gu_,ABU-piW'o3_6.CH(eAM3JF&(7!m(_i+E+%\*@.[&lh*I*9>(DhJ0%:ARl#_3cJYTZ]`Z&H<tpN_@Ij)]/d4urfVe0?
%Q*.Ut3g0W."CI0/Aq5<t8#(*rM"dFcj&@4BXQM6*r<r7fUI8uppF/3A"-U68CT\CnP0MV,o:,`0mJ9'Gk3\&+OGtL]*M%X]R?o*`
%kL.m&c4S).:`f\g#$ur,lLK]`-)lJBE)4TlT"`q3C<A^K3J(mu!@+O3;5^B-78eC7N1I"*-kA*?2GD8"Sa8fiAd=j=KVB*g&\/Gu
%rH<<6,q>.uY7:qtZ4?'d//;LpZ^T%U"SIepi0\(*c,V@O#m;"KBdAEh=gR8l`m%fndN<eDcX;)frt.^Bl5k5B#%B!fhZ1+&dMLGB
%lN1b<_rC?U;N]`A&Bc5:H'#UGkW/!I"V&PagI;t2-\a'hK:!*Y*">4-G_9jf!R)k[d_0pWH5Q5o$CE4hT=21b^c[\H=u9b?RmS^,
%7.4<!CLZfX`/0W(jClU\m?JPhm'ri4.umH2-%tb@=AnLN,b7\q+B2!SM4/W$e%>J2`2Oo:8DR_;;a3Pn_SrUt2r+_Xg5(T@hs1NR
%D<7esd?6&1<=Ke+J$FuP]NT]t5ajI6Do2^?-6\dc5&9*,h_.BKVG$>"SsOaJ1TMro4cKu<_j:8pmLi7KL-(tQ^Ht'uiqIk@FKm-)
%:LBUjZ,NcbcGi%p?Gb']30KNq@FcKtF'P&U$?2Z\b\VcML<kt",cp2B/uaZuK<blYp6^*C7MqMM!$OWG85coC,mB\I6A8VTWg/5e
%0uB2Mqb!<Zm5gsDLkOI-2)3`U1B"(E*_$\+>`oj"`a.XW(3[KTQH0F8go2=1S(@AYLiA*g^&@n>`e.3g3bh>uKWE%Y=,S\FE$ib.
%i^@[2W)=ER7GFIi=-^f$"bOs%ok2aKc=DLf`sO[u*(VYaSsD'r(=,l)nS0in9GcJo'SAu56R%B`MG94Z2+b*tA:,,^oJ]"5FUeYr
%Snf+AH\s`*Tq,G+I'(?@<oFA`D4p5-,TS&N`]u^ldd6+K]o0po1;ec7e>?La8pAbeVtnkKT1*[h><%O;!(MX9m$FOEeQX+M_IC!P
%Xe=3b]$t)*#$B-o/E%VSSV^Y6)"R(;U9KX`r$clSMiG>pa!8GB=QeD:nHQ8,#_ghA-%=IT:Jm/!%7lc3:J2Nt$Q#Va2h_"b'I#q(
%KI:dJ2L363T@[)0\%V/MO58Fp,15aOog5)GOFf>>KnY'_8Lbld@I4ZCd727_IQO@36ZW3%)"[ZR<Wa<moWO)o4.^J[Cl+8oM0]RR
%l+o?]?`P>TnXLL/i666$,n^(lP5<_u*;2[>`=s_EJl.&VYBek@01`MhE>,SE.#8bM16SN12\#K!+cgCkGd1QuW9Y$&6HEClE.U<C
%/WgqA]R9Il$J[W^S&j")U4PQRH]M#$cO_Y-3Wl96Jkrmu%]Qo7LmaM&OBXYX^NG$Q;:?C.CKOKfJp1Ec#UEh#Z$Y#tQ5C@fYU.ue
%OTqoJ4t&Ys,h"3_V]rS"*UMdtZbNKCLc7ja/Q<a\,Vs_em^f)Nea4e3fcD@PZk_fUL^2I7;JDU<K<@!7]j#Sg-H)e\BV<.?LgG"D
%!V2[g0+_Qg,&YcpXa"g$6l2%:I\`tLAQ?*49UsFeGgG_n9fR_q.0>?3?&-N8MrBV3-79-,AjR0-fT`&2rJ1e\fuQNXD/[b#mA]#@
%NX&QEM53XW%"q7LfN`Q8<^\#83``fp+dm%,[WSteMn?amA%$`^qL@_0X!>3<HFD&f@TfK>#U4deZtt%_$[)mLWlC!t-[(d8\RY%e
%R[$MSfLQW#48PR,0r.eU>LHY)G;Nc7)j[E@O&q^r<sjJ[iebl7p:M"L@_PgcHMC4L?,9<D!e/VW0a!8+E$.l8D(PPlNmm,Uj;tVn
%i#S-C'3ZpQ&i$+?P+;RY>,&cEd?=%o'S95X.@,jZr)HmZXcSKdY##I7M(Sl=j3\qZ$>u`<WGCArQR.(Vc)5lk;)3E(Eip#fB,-L>
%lUDLOYL7ChIQ>Vto:#U-\sGN.bG/'3\L,V*,H1)ZcYcS`(pn=lqQYG/hPcsH9=!'s=gZH6n_d;("6NJa-_qB1PWEE]"^eCe4fD#1
%4GC\*;N2T1<J)F31_S>h86a<pZ6^C,-'aJ$A>]^P<K9n4!_JV0Ci7ZL#q>r7XC*04XG+l"n1qoaM(E.0,"nk]s#sN^F&P2-IVr<*
%eK>0C(J2Iie'D%;PR=jpqjRT38C6BS=23Fs'dXmM7uV\1Whb3iaG^-Q[K=Z:c.Hc2Vor%j#/*NC3^seY6M#r5&T<aP%o/KJ21(SJ
%WAb=*>Y^T6Ge\Qs?LXY95MfN:e!Z+f%'u9*hA@%X'?'1lS-^qbNek,8.<$"U-Q^\)!>d(-(d!cm5i5Q.ns%_Jb(H]H#CXWtB,^5,
%s"8gP7:CjjI0F-uhGg/]7he+j!0='IhoAD,Nta!T.]LrN+?R-H>r+(/6qgeC&O\II4-F@.a]h`bK.&`XW;"-7Wh\P^#t4b$.gu'6
%eUu%r%mbbW=n/P.Wd8#+.jRBLMl/1?I2b!n]3L;98%TdMEV6cS9X2b,L?)8dEct!0C3CsS:r>"`fR5!%pUBpSZ9"=N$;%Kter#%D
%>>b'Y`@\Ip_$(T?-0)"<bS[se]&)&XLAHU3F@U'n&nqOJV*\s/mLTQ+(1Xd)MtW\&Y3gaJ66f?+3\\:[H+_B:Kdp7Y@VCLYJii>D
%"`heuKuR4+r<fGQg'$8XD?4NkeH@*9,H;n%d<?K1lPUh8)"Ce28*R#VV`[X[2q3c)LrpDXhH@jFe0(c!>Uu%<?.dst8;$-R:f=N*
%\]oM@2Z[Mfe('WBdMmlQF*rIZWiu*uLL3KpAO(d7UG%fEF&=1E]m"KQht3CHYXO#UG!$HK.R);Z(5Woi5E!@M9j;C]e@@W6n&)''
%<Z9V(EC!=.W9_^.C<g:F0"2U7GEJ?1SEfe+MMP&&Q/>Zp.NK,NCDZ+B'a_H4]2GitK2iX^fi?bLch[XH'D?lgMlLG';UI=dlnUI^
%g.O?;7T")'IWe0/'QF/p,Wf5b^!XfrT\N;.DIOi3VUWKbOj'`MDh8L2p:3*<3O_E[B7-ionkfRCMBDTo[8-[2W*<;GQ>)ak-opRs
%VLDR%rV>E+6N7#;Had>)ZK"";h#RIB5,o&;2=D?pM$]q]5doEaFfR)ZJ5JK]>=;PU##/=iJ)>$h,N_18cJGI(@V2('9`eiG7]j)M
%>4WXg@`0+gQS/CPC1]V+[ES_Y/Cde?Cq;(:#P;jn2sUJe9MQ>K[1Z&>2b7P]Ps[1iE4m14[;p`%,1dh1`*U_,.]\PLA7ScH>.WJ3
%S9eXAbf+F)%Zb+N1JFE"Nl*O>$.2dj09(?D@SJC57\WhFPr#InAkkR\`8Z'Sm5_eimVB[mUn+KEBkBD7&Gc:JN@CbBW>(D*!@kBj
%O[-?eMItfIQ1"H!nK**C1XcBMac5)]V2RGQ;X#CuT_;[\>ql)7'<H*m]u65#&\Db[H-tb`RJR.gP'Mt<Ggk=0IQ`t>&6<.KI'QI>
%@@>IuXT#c]9]Z;c4H)k#j10pp:5bA;Smc]T-)$W,CMGog;Q2CC'pG/AU5`hJZU9sd6JT4cXN<?eRp;C:KY!8`/DjL@+\ECp=YHRn
%#,>_5UC8("VQFfphJ]'0#DCJ@b)%b5iU8ItYWV>dIDnBrHjIc$3%g()9jK_j+F)YOW#bs-jUoG/;<;AP,BE590Zk!V:.A[)<r'1U
%YYb3*;)VQi61%Q'ipB`'s*u[9/GBfWjq7?f&%k4?F$^N[h;DrpD<;+p"2r:eaKBQ$bp6P.5%1m^IW`75P'n4!c5)/#AdFYO7,Z7S
%R6@3SicIPK&c!,%'Xq-s>Y;(4h1u5n=Yp;DLO#>&#Uo]YC+FT0Q@_R+KnRptbWLI-!CI;NPc`T(MDu3%ru82pk2D:!H0*V(=GL-I
%^'lEV9^RZ#jtbsH!:lQ]6TLRg4>l]^QCVs4-tECX#>rpbWr]"7)*-?0=D7Q:lnEHd(mJM#k_'65=qq`V9lXYQ,Y_=uJf[/aN;"&6
%P`pgn`AeNBjH1XW-TS9e"Z3h2?@?)^h"I14(.Cn_ONRsA0mi+\_q`Q>.e5TakS0@-n!mB@aMN2:KmX/"^"DM`>)[5I^Ucd&M9BV:
%!%Y6jQE!b*GR[l/0UF:"&<^5Xr3IrcbP<;cD-)h"`Bb:uq/$Lu+%".g&9%_]7]p1aa0fC_LF$",fi&M<=nSCJ8ApIZ_"'6[-_&FV
%G"n3?cbl1]"WX^>UTYVdAk,!h<iX5@(tV=6js60W2U;9_B:Y@brLp1a?h,YIS//A1<uNpGS_Kmh$'R=,P`;H7&`aGu#:YW=JpAKO
%lJ[CmVi!%&pO5Y'DS$;'GrZ#Xh"1`a_P4h0`<Rr]ZG^F-In+h;[N7#i=>=ARr!pP<eeLmC7^/A=@-[-b>]2-W<IY)"PNoP\DS=V]
%S7&T\kjD0$==Mkc?IK`^rJeW[[pAu(7i5+h1]4hRTKVqYMHLKA;@ZhQqh$M!kt&@Eo8XV>Af2'9:LW>WpG/EI>^#ar`m(CQpq]LI
%0]F.5bJs]e<iV3tm</nG/.Y[.ZPDq5qn>]EpRS[#I0.^J%<6H1e9GY\fb01=ZoFCsOgS,PTW5A:7^iBVP,X[2/t5r)Y(8fbXb&(Q
%X]paTU+2]VncVGHiStF]rQHu^RO.5?K!57:g:e;ha3G4?0m3D7PC"iFrKP)Wa%onb1WNBYA'Z%kXQ`3ti6#W2Eg(3-'1Jt#<s"X_
%&ZkNR#Gk8&gsSHI,/XeQ>dZBTEiJ?;7Fd[)i-]+,NIlJePC>e4aA1W^-Kil($CK@>)=[.@,W=WQJsdh)le#fl(Jb7=>MG=#d8jgu
%TZa@t()os,(iP=GOVecW%',G<8.0eTat0X=qGf^m@LB:1ic!r0E.?hGmr@g=4'2[o@l5X7X?nZ%:I$0W?jkuZY44-N,Td@U<I$ti
%Mh.kf0t#*\X,s-J8'HgZI$hq'_IMMG92[=<+LP_LcsB4EBeGDi5k?dshS\647gftrW2H8A-7)D'I'U_=`UupAh1iHR?;5u1<K\LP
%aJe[b!1g)eKIoR[YC]Sf22uWj[3P5F$N<E[U(saNARCV5foO7nP4cH[XO:eC_WM8g_k)mmIdf=rUI:%t.af]s,Fr)Z$k&Q=E@kg+
%b"M/l1j_4Gk`CIB]/DL'3E/kD!Wt1\VgaLZ""4A-h;X'a,Ui_2W5;i+N'`]c&2eEL';rGDIjj<F;\P1:imQoKmi(l:B5G/:(2LOm
%[ddm8TaB.`cDfo?7@(Bgp#L>sn1u8o.DELNPlDA$=8E%gC!Co<Oo/f?1Se=D@6G"5B'[-.=OO;,PaEFWaGX[2VGJ)-FHo##X`Zt`
%VeSYOJ%=`P%d,UD@&<IJ2/c<Y/2nr*\>B;@6]O3m*/@:eBT;80"f)DufR3s&L9mX"CheDC;lOuGK0VMo6Z70c<0Js!$-RM0il2:)
%PPu12,5&3bXm$=A>r;'^5GKAM^`;:N?*:(4"u:8"H.d0aR=Ws+kYb0*J_+cLbC[^dTJOMDe-)+9:JC71RS?9e.O0A9))p!McA@)]
%bt(WO5"$TDQ"fOO6<lguc^Jaaphc0QeR<;-BIPEqe>j+?(cUh+I7$',k7T>)_EB9=<t<ToJFGMi\Ue9"<S`D4UVoMjK>@R@7mmeO
%=Z1ufb(%-CdLY4DE1[>&p?A.#Plsk'&Fe:5^jT49k8IdU4's%_@VHV$<&cWPFGB"bCDX-F0"h-^MC'j!/c%a^Fmo33hd9DpQ't;K
%1Fq_pr*ChP]Pa.?pjV^3+if@2/[)#8(I.S\.,7,EdY+6?Ksgr46d.'2rMsXJ+93]g$6gsgV4<&?^5pE#LrVM\X1#;_/`Ho*)iIT<
%=9oT(%)#eHF\VB`rMCoKphb_*34;eikR;cYemsS<-7[NMh'c"OSBc&@4;G-\!8[&YM[Sn,RK^Mp.2t#8Tt$jGaCN+)cmq]W/f(:+
%(8Z1:rg.EPKD"W73PX/0jaJ<H'W]-0mGdenno1/4?VOn1\)hT3:a*$BanI.q$JPlB"a."fGd=gr#KDWD0S5\CfSCLc"TWNW];%>(
%Z&_H';m.8*<!0K6?lq+>(.2(5&e7g?eF7NO*'%hobn+"e2dU4%/[)V508pBSC-_*YSMLGH#%R!1"Nj4_+^e-(j6[l]jh?,OF[+[?
%mi?s@?fA7[d0"VBA'PQA=X?QJg(%2[.eA2P'W1sgefot-]/=^I&\<+lWi\6uX@54L)X9lr2o/?"%eKk=THWc.o]sc!Xo+ca3CQ^>
%-Q=_BE?5[P/$`#t9ch""*FY2uabt.ZmEU1uV6A]t3?qGk4k3=o(dTdrpqNmZn^7>_eo&ep-DoFVN[`3o`V=TEB-[5l&T##K@iWW/
%6*+0r!El\Nm>/ssFAV!0lE$'?"_S@q<n!j'\U;'3PW5V58A83Rk&Ej-klSS--iicl:(=W+>Er.rRqlQQMm$Q;N;>inP!`7P3D#Jt
%FCqm8\]`X*RH@6(B5g=:FuS6;ISghgq#\Kk!pUU?7KlPQOc<lu55JgCLiBDb,0tKXQu'dZ2GN,QdIH=V_o?aSF?YKSDaE[*e<uVY
%PrkZ;8k5)qX>a,ti#<Es*nB9;>&6pOiFH/5H1$%)U"a<MM%[VMJhcDr4qX5'U.$'dYZSUU$H66I/)3s<c0[&>mjqQm[,\$&28jtK
%bD_nSkQ\"S.k4VA&)"go,W<%9JEcK*k182"k;c1?AsCAp0sHD0U2[/4.Yp^'j:D^[YnP'>hda6:+U=!pNH#ZW"ELcs&[,Eiit$D,
%SbI!kYfT@jI`o6QX\n7*)-j>)+b_5gRs.chs42.D8Hih2)<LO;1/Y5X>^(0>r&9%hR^UtOR?;K$+JZgTJGU,\>0AV_Zb*CIl*CCq
%:?.83Z&s>)M4>F")Zs)4,Vpc62c"$-_82e@LStna>)8-T.9%X+R_^,-lDD][Hb1jkfeO_Y=e]pFFGc"kLs)0eE+8(HL%'J=X3k;K
%c$fUTm,f7Z`Y[7O0gMe5Ip;huT5JrF^rO]6T%7GVTn;4-@OuZ-/0b^#8=Ifc7dW>A5f^F:Vj]t61_u5)O5+KY5!'=hQE8TE%n^i+
%:]N/eei)g.q.p@[,^7p*6q]>Q3cO['#2dcM#V9"obY.*IhpBAs1b;0M&^Y\o^^](FV:Sp>Rs'WBqdrV\&+-IK;5;N*C@u/-Ie\lI
%6c6<DHY1c\I.HGZ!68hJb1g(@UVR?+PH+V=2hQkojrj%*/K1/5!4K-N1_<)N!Sa"**Skr,pANU[?[.Qp,5JQr@PL7*+:Es(_8F[?
%D<i%N8,A:nW1n)S>YS*33fZIGM%eS6\ZlcnG)@tkgi447l$_;SC_MN>iU]_bca&AK4eF_n,1B*BRJg)lXsO.G$NW^nR/i9'Z*M4L
%U8SM"%;j_WeOEYUlaI^iQ#"pC,J$'+7&Xu')9m=tH%?H\&PLg,=lo/+]7DOO_M8T/q#1@?N28.GadE4bj#1!dCr%'E]/*>8GNXZ(
%S>\Z=J$0lL=;0p\%_H\]GBMk,okW=N<N0V4!SE?o#.DV3Wj(/CCTp/dYIRo(G;ZEsd])98q,)T+=VrT;/K-GhDn<U;^APk20/(Qr
%D)kh]cWTBEj`]h)'+#Jga9mL=?)hgJq%-?bT=Z!OaIY[h?k?H(G7=0S2j4H`W])Bf%aC^`M%r@C7eLK+foApsIn<@95$)+bdZol\
%n]jF[j3JKMB7#m^I==(L8r_XZ)mEhl-l1)(m]K\Vg^%C`(8D)]OW5j>FhCA/Et[=eJ;?nS`mX\nU!.BaWVW,)k56pB>t%]B<Ek>?
%J$lGPl_U5Qo<o]W@@-oHE=j'U),qg%3X-uKG/60Kc=n_*`*;BW@_(eNhReQ>`Jo9LmRKa(-7<4>qp)hN4iqhT@98e,n)oCG*m1m4
%].@'3-G>/1m]b2]hR"M,-A4aEK*++LFIoPR?lfjtkq!f?0mNYs08&uF]]ggC@Wu"'*?(6LX=+e><,#m%O@M&3Ea2(.p8_M\<>.dG
%Fob"2&Ln^LZDWp'TN\=.=&5t,g"I'HnCfHD0N(j\'*4O`:@CO,6hHZBqrEW_c&(>BW95iQ-_FS!9sT=aaEUA9IPc>)7g\O':D*J#
%&YBr*'JpM@[r;k\+Gh%EIcJP).5^.g]?"deA6T4>Z7Un\6^[u(Y7>1pg4+;?Z2<pu^4Xk7Y3*NDB!f^T_1mYUeRFrA^34PboOSCS
%+h^3<1OPg3MtLA`H^,^E!mHs*l%9<Y"@);diIg+UmL/'mL&3FkZH2\[Ch[[6Oh!bnLp1@.X&5%md*f=1LOQID/lQYRB7XNU.Q(@$
%0s!4NqR9[e3?k0jn/lGL^?SZqCsj+$g/VK7bQ;K1k7Ik72>aC2UB(tC]DoOAEs<LY8LFdLOq&>\MIoXD>u')&fjjm"!Ea^M2n1n;
%eY%p+5o]0eI2u/P#b>8'aAc3`_.U2Yk1>\(n#8I[FS5GK)JEP<-nh/^\7cV8j;"\I@l9h9,0^apb9CXGm;0k=9)po9rPBM6W9g]N
%+<=r0?Gr8;Fb^8l/r:NF,".YdF`!p0b6c\%F,93E7Q["$6Q\2V]I+uQ.&J$#Ue53UBbn/S[of(#T7gCef?JRNMbX'rZIjl+\-RML
%$7ciRJb-8N&V8(nIhYc)>7a_>9fZdq.G3:lZk5Ui/1_k?Vr#^$BaogL]f=YcSVuXHZ;gH@W0CSBr1K@YJ93E]LV6-`<QX5Fc,X6G
%pq(i(Oj@oBlUEXi)]clP-IRc!-D%/Y)huiFn-]><G$%_+&2l`G<b%;kVLUY/";C(mMftX;n!iGrpQlp4Tl*Rd._&\JDNlQB/n-0f
%^%Fu,dPMPbN+RP7"k$e3pA>._kIX'<mpW.q.?>>9>Ei-j\`R,0Fk<Ve*WN&M*jjI'F$=L6]<8^5]n`/[Fdsm+TO]bD::!Zh/f'T\
%$XZ.&9g,*R2NDf5;SA8pBJsQF7ScYK\7t=Y')$lG4k-.t=kO'_<BR(a4D^@S[ejAnj5Wd'](E&&pJYmGbR&t<<!B9?876gLi+a2`
%[,o:G24j2s!/%!fiC>28!,pLP(VCVGj<I])=5STfl;&U*)VnFO$F50g]*%uJm!kJV4((XJdmPPh:#uOM.oX\,=*i\Pi$3IIUrFiC
%IG+tk_^+\QHT8mDQG0<=n;/V=7fMa33:0%p$Q'_HR@:[P)mOW>5d<dYU*g"#Vnbl+GLp=E$n/'W*Nq:U;GXM,3XX_q4IM>HK<P>Z
%@+l**;RJg]>4_=F^0R$hYG#-u'F2&$ha%ZoXiR]pr9k<\XOR7`-^?'QTHs;!1#=;bRL:NWB,.f+.+S@3<?cE$<B<7(UUn'][co'h
%&jb"]"+W/qHEK*p1]q/"Bl?/$o`Q]BeSDqpaj28u)Q00)YF^-(mseIqqW2/;f;#jdVI/C;TldA%bG:@Y0!))3LQPeR&VM(637G6p
%<_\IQ"*piG:O`XX(cbE4#n,)P_kX,YHq%4DhS%^[6nY$i8O>cNa"8GATgaj@$:Nn8OR`W?KEYW!PDbHT.TT2(qW4"ue%/5,V..Sd
%Zg5u,4UX/JISJpu;3dKVeZI[eFPjbq'5A3n!-/GK,B23GUPH5@:2lRUXqkt:<'?XJ9m&8:\StYD<B7_35/H1Z+JLeeePLT9)EoQd
%%n&0D#GmAH_Gij$"PRr9lg0j%XVpnec+:=q7hTHW%4OL.&NX9V$#R!IelWG_!O%H\8%'CX'h\cD4hD0MbpMs[/Tk#"CY=r:K?CDt
%WOF_eha7[uUS^tJWdN5aKXRS?1;qq.,rM#$G*qU7U_825<!`$'`4-`NW/IB?F)ndpZu&3H'R,RHh',[3&*cA/KFstN6%`:@fCEt#
%I/$kM%/bVkD,<(Y!kd;3ldnZP_?5acTog@R*%p8dTagq9H)s\2Ll@![KQ[O*.n_&(Un$^,E[[QaNiHct'Sk1>K\[SiA*o8,pj0G6
%)U]-d5.\43Mec)V[W(o*hT_@36hF3>04RG^8%TlFWG8tTKrgV8H(p%sg?MVhi"hufP&lkqhHI*CPu\43\NOjrH'a[d_1I?Ei5--e
%N/0s#ZUc_c\nE`1!iWtO"7B2X,o4UkVPe=BdGpO5o,S3YeH%%W-b-]Z`89#8>>ni?>4>6OU2+;UG7/T2&;n(A%ekV<IULtB^K^Er
%9*+u6Z;Kse+dGI","Xj&_Y!7UTCk>^X\_fp!+-8(T!%N,DB$45PhqKS9*tlPZk4cD)(Ta>W[M<&GEfQFWkR=j4Y7h3hG<1EI(,0/
%$)X`b5Rl>3%ROeT(G-e,94gd&d!kOc"V#7t*bbB9if?5?>NOen0g2C(^_8JGZlQ<c)R.TMT5S:dW`HueQY"_MLO8i++%*t#S#T`>
%@(o*If3jDj&udkPgBV(.LU8-gJ$Pp6I9V(a43CZjE;=a5P'.l0h6X_LXH@rrV<QMW0t>/>SWBi@qUIdL<7Z&Fn'rHlN7DT7@tJ4X
%A&.UoG\Yi6e"m1Z"qq0Pl\Lg*NL_ZqP8"Q9P?F-0N/5f!NDBcfkcr`qgZnN;O.q1ADtY=m=fYd<7aM^N(I'\aJXqm/1GTL-9<UWQ
%Of60e=Q%#T\$MSs=*V1/)AtQR/qo%YI-q,BHS]"D(5P=>8'<\A?G+o.'FK>Ym+H+TT58UWE52N4hcXk;FsbanF1s+iW'HL-lt7/>
%[dtnV`\:_Gc%$Su!<):)R*nS"D26o.Sp:(N#EA6Dh*0]L\5G49;9*ZI:6+H<PTef)E`X,&kifV6a?GlHCh/iT)g`.DW:"bP`_q8D
%6C%;Ube=XC#lbaPpXqu9m.oFel3i>f7T6,:G\q3ip`5Q'WOBT>UguWR+RK'rk^uYuPi0t$e*IFf<q$8jYsV'FAi/"FkNkeT03]"2
%m+YBikdq%PYj9dnDG*gPN3+ZUKtpNdllTFp+IoUF*K#[n-(rknG%UBd;aNW9:lJ2j+jj=>%>DCkPLfZu7ik!4TpJVF+PL[]<;7+g
%FR8f]HZ:`]Y;BCdi6LT]@8N&>bZ9KDn:5+W]\2lZ+]AK'=mROk6,6t@-q&+BmDXVPd>R**)o3:)A_5!IT\2<LXU@ir/7+Uc0]h%N
%.Tcua$p!;&%O!90]`ehu+!/,Lo.*W3%>AO4ZV.BgZdfgnla"g2=._tPY3P23N??Cf=g(I=6b=*-<.D<7;[:j6@8)7-G!Jbd$$]82
%DVL0Co"A?U/p0Va>GSC5ls#_%Z"J&4jQnS`+<IRH=_!V^NN/YUP`Rsq_eXVF?b+1=*'/<>'QkA^m4p`u'M]Xi#&U-m,"J/\V&?/1
%*bV5.'itY#V[.p_=C6,FIb[E15V$stIb^mXlhT'.O67g.dp8q0:/2?cD_KWC<hEG&o5ra7-QFBE:ai#LXu]>AkMW>.JVI_0_OmIl
%3$fEi=L"Y&Ya,)ISZQJ6'T:Xk"Grlhc%(5u3)<8Ar46GE'#Fq*/$L+q=(odpW$?`;*C)_GEnZkbCM__TLs#e2gje>ZFMUD760W`N
%lCQ/c`q!e;R8nJsS=kd@B]VQtX]0\HRO;jJGLQda2(K#4N)QQ7Okk^;=1e_hU^'nBlZ/LF(W-6"=26U8du)e,p)=uLG+rquH>-dQ
%YoIkjV=t`s!L?Lb7/*g&1Se`l$!13]jqdP);1e[g\`LiFZt()PHqI[5"mlLIU0Nn;>$)gm6req`g2&H]SI+b;-?jHp8(!\#+O+13
%kL%u]_$U-*#k06CJ?W)KNtooE.<A7[gS?0n34MCj[Ib9V@mYrMV5!5ZLlF=B;N6'djRV$/JE`!c4>DTJ)cr!$WJaFb-P#=GBH/E/
%,>g@2kLGC>,H2"V7BQ%78c$8Kqu0.c`l\2,!WQ.&i:Vo9)`RLYlTp/+h%cdqc/N0Ff5A_[!Sn@-IGHFrm\olo:8H9B9cd8J7X<sE
%1q96^cqnUV6=RtXT#.CgfUjPjP>C_>d$>SaRLr"/'_8*ERVj_"m%P@TjbtE78`&eUX+Iu\#6<)56p75Jf#D!*A`ll12cA%uI7U%r
%$CFeGi,^0n3MMPThW0%.!KGHTE<7=`+\og,e&OK?:'D#aI[h&>a<47k5k;EQ9rp*V%um`'Bq)%IU%tHHkQ#tG#BaL8*N"XXI8D0>
%W'_`mpDnmF9(IKf/7uSaCI;*ukeciAS>,kTHsq[>i+Tq]%PA`d%]L!TQQP15.+j>l!s5$ZE*"L5NC(b7,DH(05CYL1.Km`fh;+b"
%n71`&P2T^]`p%46cb0JX?iU*!hu38VrqVmJ,:J3oDOBaKDBP'N"S1b5E$<dMKUO691F`2?0]ru@@#[c%gfQRL%:3"16Z_fkErC-t
%Ar*_I/48G^"<7]s:g;LF_#g`]6R$Wd27W,<^th+u1n1_?+k'6_j(LG(jikRs_fB?X'#HY04]F\fD5UJQ)+:ZtoNQG9IJZM`)K`5B
%;Y82I]:qf1)!^@ZG.J.0@)mb;M37%aFHT<K8TO=/h>TI-CSb+U5$&/CbUO)(/#qHpdq_U-,>OO='Eg2fUt%RHZ#!dt6]UoWOsG\i
%>,-sc2hPe*@RA=.42r6"l[B]-NRS3nq5a8D<sl&ZLp0@=,\e5fT/KW_XDjE=;*=lr8!**NGX7=hUJ*I4UmNpC)9,ZpV.6BIQRE=n
%%FhNiT9j:',.1XJFrVC0]6F/I%GK3KqamZpZ6)ArrlIWpX=72\^%nVJL/Zp4mN=;$J[?J=#I0Gf'li4W(:B2]6BXlu<$cP.%.Ab1
%_kE@C6gTheY4PsGrSlAA74V1R#lX[DJD;_!jFZGhQ-gb[adsbgcj5hNh\PrH*'-W8QIBhj77qS.nId=U,710CPB:GOOAhQq9^a9P
%'c(713ftM)K"G+]2@Uec)I?2j8%6aDK3^sCGi[>9<V=>B&3-$@ki1/_9n^4_h0-c$PT>RF@mc*-&Em:f^):$>LJ)_CY8g]qcbg:e
%qTZb!*hZ1u\6lX5M5sSoO_=!5/qs\t'!kna&LG&DcF=HgDZT;R'Jq!rXodn`ddD@i6<5\j6m0j=$k-]O>1gHRO4(qP\pLc%df#7E
%N!NUIVutPHUf4ciRhOKgoa0Xl:Y7b@pBW(iF4?qbh&=+VH)iC6^UP;AUSg\g/Qq5/A%/seJcV#9YtfSiXb?E0X*q#P@)E".:^:`J
%"jHAL/u50lM[?[/^bEf<?YK]d_I;YmNli7P+Ap9X)_R7T#84_dmi%<!/5JIYD!*]pQRPh=?X#u&.M!_\)[Tpb]kdnPc4TMAEe'hg
%K^8K)>]-I5QQQ3D`YY4V@7^$17T\<di@FA@)L')9gF:1_0SomS0uuI=WeQXZ!D>cl*Ue.'#ks_+;Y'N-*]b&L"M&n`X*s>Ip\"@$
%^<P<YILq:CWUjg`)2ZL!7IlOF_biWD-=6F;&1D;GJg?0+Ja.$N,.+$ihN;4Y5ml/6Y]]%%E=g9FE]kcYAr>'hh2?]^[:Qd31]`CB
%es*mi,fbLYemBafe.'f)0h!Z3OrP?(GuMX;Pe>Zmn#d<'Bbm9i$kU3lQipiAA`[5QPa#Z.jT[#\q.AOLq_u-\LlM!d(iHHj%LM>q
%q_@(<-*ht%72iO0,-/4h%haL8P-j>4#t#9^.GWFQ+)NMBA&F\=>^TBmB=[_`GQ2",`)",_?(kT!or`p>odI=2cA?eB5a7R8'oP3V
%OgG\L;'`j/>=NPraT7D_,+1\"Pp7@DZ5nH,gc1!Mjdt&#`<b7&0@<7B@\!=r7X9$6]s-c1j11;:M@s+;AD`YkW-%,l%12Ll/@N^J
%E]^pLn2\Ql<Jr1shPJ2G?6-n.d5"MTb/9nk#6g0eH4rY#1f)QVBSV7DYNa]TZHol2LuY"9".nN(+>4?/e56V[;[ShUQ<g6oLDDgl
%([]:7M?s:r48gXG#j;\PIZnu$h$[5JJXELqr]2):?E:==2AO<4AFAjn^I^L2C?I_W>Z#Nu2I+HO1Hp^0&,L9OV?hojo9uTJ'Un^:
%2bmiWRY'#_Xcqhl5.n(i9chl/'O4BY4FA"K:C_WpB,M'bN1C&2UYBXi-j#@'m!K"O!GcRJ0"BU0A6MUUcJ5@oH9H-f2n#Xkdq^BC
%IFg%-U@#\sQ-BLTkp1n5kF[3HF9/P9.73>uc6LA:4rmPAZb6tH\rSc,8#.42Y4(B)pG).B6-i&pdC\o4UEHV;NMdCC'qUD-pcLSm
%dtP))b0i.q$QN9X,4LRQPu8"t92NWh<"`(d/pMflT\h(UqZTqSa`;<G5u\<WEM^IXlq&OV2.r'gheqn;[s0!@Hk;s`%q7__FZp:l
%hM4g4&$``tGX#:PoRQ`YMN_ac"lTP^(CSZDG:iD<]'`Q.l,tCAX#AQ2")o-tC+>(<"GrWeUc4Tso4pi\&s3W7K2l_66*#tn6q-%a
%JB0(Kh]D]sW\>2l6Q;b8n6N;ZXWD@MOX&@mA&'_u-m;%/[TTL5FOn*\,nXOBZHH9#BXV0)U*-F!/G3KOXp#[MdPSqMAtcHFI0:![
%pc5W*4CV<KlHlU;[YYKi$;7/n$2N=n2PVG&CmB@rK(#36]5-(1T4'`+3s09KiOL(TWXNK_Mf^D\IWVG""_>EXUUXiJ1"[pAlXh5\
%6%`j^G.fWt/Q0W1)]PUmo89`*q@Tt^b=QGZ\!s6pJ]NC/:1_U)l?tscYc-prVAPL[XFSCD&AHBHb_5nWQqiB->i-]s#ZW%dX!F2\
%f7_'lR_dOlX"%tf]Qf/B>,+a'3-E3iXLPb,gk_2s\^7ef)Y_MRnKmhj9/I$FY^"&'#=O\<H.4e*XX&fMRb!A1*G6#WS31a"QptoW
%N5(D-`VDj<>lkTuV#M>g5D"dD;h(+mZTH[ah'KAt]JWLUN\]=aElZAXq`-$1WaZ(Xd$-ep6%g@()pPkol;s)kGT?09nAEkpFM(oa
%5.N]DgPnWnmApchMG_UL#]Gr-3M`jM].>A%Kb$6IP[9&CYP,bq+Ip;OPSn`mQu[l482J]0orM?K=I_B.-Yd[`)=Rf0?JF2.]NI!=
%-)5E\6[1-.![L>?]U0oZZP*&+N+fS[;#4A]G#bPheT!(MaC-P[E90g;*BHkZ3Afp%0.93nOjP\s9CPDr='?aAm2t--Y868]s+lC)
%lW$8c_MVG+L5"VSWh,Sdc\#OVkOWR)4YDOSP+/XID5s'(0F`fId;otQ=T^ml*C^(S>(":!&H:M7"0U9UP<4cX.QL=A>(6rA#;?^i
%Lu<3n1kjtka'-m;E>&gJ!O-h!$K,9U[*q95bq,Bs8T6J?cg-@94Q$ccidU^0Il;2`G45Ek0?!%d)SVj#)Wu<#ihHmX$6gSGaJo6c
%H&#3H\FQl"Opm"[Xi0pQ.Uc=$YUo(+G'0`/Z\RFTF<B@AZenmAmrebk.Q"IaNf*gh`"=W?o8c#<]SX8bqr.'5s#Pl#,&*nS<dJR\
%*+!`=C;2@#68cMN_K&jnk=!KG>A4(\K:Mh<?;#mfCYM9"ZOk@P5$V4'[5/I?JbacN[.87H\q33E!8!=CgT`Q8*qo-DN0sJ8(F3NC
%j8`(Z-^2Ysn%\J;iFPGl_I5Cag5]E&;T+BOHaZWk>7plkS)'OlEb+0r@]MI<K8LpnVH7'EE>#QL8Z%XFg6&?O1b1R92VWhJ_pIGk
%A$8^U+\/IB\8\?jA,t=kqkP&-M0NPCkVW%!FYbBF7\+6il[7O2?Z!,na-bA^$I8OjSU):Y9hI/L]5)Z_'=Z;fXY7;D##JAN(kiGX
%_MP:R$\HnX(CG-SN$dF,A7;gcDsE.<AQ]eVQI%FkHX!OjN,9cX2F]c(S21@QL/FVBWZAgmD$\#W(S8)4@aQ(^4?MIGoe]s7*GUMA
%(<@]h?P![s('4k&bEG5uWCAmE>UD?(=[2p8TbqRU4n$L.7N7Id*K&(^1/S&;C`&-:An0B/&e?5nrRjWo.EC0R^&#A`%<"tOZQ_*H
%l_bbhs8;:4^AHGfr5HGGiJ1e=a8bf1B=H%[nQ5bPqnN.-n,DAAJ+4?TgNUF3jU^8Kp0W:Cl2.r=kh;!h]0H>IhgbC<]?buu](c)/
%rJ//f?/1_e?Lk:Kp&2Z#oe6@9fDjfboCJD'fA?2aid^orhgMCMIsuZlpZI&!lefCen?7<>X5Em@]-%$us8:\+J,A'*s-mrrf>%4N
%\%hh<8&b*g(Hf:f_tUqFh=n\_gN+fbm[?I\?i"]4?hG5Mq9@_Q5Q'[.s8@^[rMSBTM2Lopci$)CqW72Frkq"gHKnjcpY5.#rMMUR
%oui/JNX92#!$VKgZ;%ha.Fq.]_aH/sBo<+:7Ea7`\lkWkjr8[GI$s,6n"9WE!^X@\5;@'"K_'oK&1@cRKS<3Q($[`2*/1*`=J#Gj
%"_m8bbHa\O55V<\TD5>;oEUm\`I75SVA"4LraXRZ':_jbn%(Np.bUPZLi@#de]hQ^W?J5-R[,B\1S;R#$!&PoT'Z"9N#ogGLg&9t
%q<pj*X7bYr`I/L(R*,7M#He25o%r7=immW#i?,s9ptb'8qWt3cgY_CR?@Uh(-IX&S1'sGE557]rPHpG=a7ccfJs5G&!B<UjG3)M>
%A;"#UFH&q5G#\^^lRgh$jnC@0hYXY@aX=L,;u-?s'[a/JT2OTg\*#-YN<SP=7e)tK)TSLV%@35i&^*/"-bj@=nb.?5[_h_/0>74t
%5L$&igh^0MIIL0IP9N>V8Go6O:$p#c+m'iBe&X$];>*u1..s6K-FAY8T[HTQ@3J'D>Bk!GA"p]>pmu^O'YiC=+aV/nD1nn/A':jt
%Q*je[?DfBo:%WMGnQSEgM>[Kl-oR>'1Kc@JG8AU#qo_HrQB%L0+8a)7[>H4N^>e3G$I&EV-eGcYM9KW21quh4m.JE%rPqYc'u53d
%\b0U0aK'$PH9Y_2o=gZJ)<h(($WSD3RDkA^mHU+Y8:&\tp?a"8_C-*E="$_"PESUXO_p@\+\[T3(3I@gWG,hHM'.`uW62+f#C]A(
%,E8JO9CS#$2(BHu*==:6%#/7[Ogn_lK]>$g[FL2Pp'b*0j$bUcn:0;o=3;V4lM[Kj7$1M"QgmR#oct9WYMo6)B:`(/#\8*kofh&2
%Tad+_eYZqb6sn[7Q3b3JTo+;eJm%0^22EHPalBG-G`cRqO@2FG7h?I4%],\V]QI9*%JM;!2#Z`3!duD[(8QPS7Y4+AA0'iYk\FVN
%iW[R_"RHm,AGb3](]J.6r?8'[MLX4Yj!RR7.=2!k5NpTAJOeF+J0$]_qiVF:q[SpC9b!I>]LCF)bCHNWPjZYT<#H(?9/;AC&6ace
%6cfX4)"B+AR]G,?2(`;2'6RR)8-j]f,9[eeSl^LpqJdefA9e[<&(NmP9;KG9BOZA>(0/ra-iRiJrIO,QW1KUu\8NQ;p`FVG("2Ut
%#H%X'T56&tfr;t"c7Dd%dqnGFPsH/7m4df%&et*iZGJa1SFltZ$<LTbo!2i/B!KXH7nc&l@Y\+KMhhDDEA*5b:XT4;\$lAa6'gPt
%TEI\0!hpCVMjiEo0s0`jj3'+Re("8IHCW*]m@Q6.KV"T],_s'_m*to!n?Fs]eok)d/a8I]NMmM*W(Z_Q="UK'X7s(Th870(T:aoo
%oc""CQU(?(+0!-I//>:n?u[TNW"Qdsf@cDOT:UK>qYLJ`FiI=WcoLr:8sj-,q)kg`lH*=3J'HTL+TkEpL+^7=^-@otRkLD-5!C:k
%EDKdq6%6t`L&$)nfX:b3Bq+]5+ltr,Q77>KP"(&^P]T:kpY?67cH)%P&"!GR0Dl1@G_AD;%1,`:8mnQ68_[_[qrAjVU(aGL5[\(i
%2$?.&qg(bo,WhY$W#<\SAa*q(H'sOZ=X81hF?o`V`W:]8KMKM$T6</Ps5aLb:HS7Kd'HKk4$lL9Uff&]XaSI$_mc.Yn"&(Pq58.t
%?OR>F4e:lE=QY06YE8/n@_*+sr;'\LUm3cRktk\.bEG6S)1BKebD'R`55QcL0?\`lifg\uSOsDcDb_ohW!#\9PJolpG,r6/-([*S
%?[0;D7"+n/Vd=l5+3WI<+#7V6h$6.nYp&jTr7G!KVjK@.W[.&_^T8ENer>4?!5%,f8g-hs/QmHEEbCZrS&"!D-.75W5.]q#6mXV_
%k<C9Pf=IQGpuI;KEu7LO8b5Y@Q.Ro@ji\$),>iqAn\dlTiU^X'1X>jm:VHbI5L$,kTGq(j#<uolM5G]Mc$[L>T2@6FUON5HA&Ugn
%<Qp;M@m<X7j</KkktD/_j:A4QOQ;jF0N8$iG1WfP?p:$Zq\n*$Bb@Cs`C"cNg9n3tA7i%WGMqi5[<K`^IgEb;7;RJU5TX3!gXZEG
%:f*BnBQR>-?!Wqtlbt0I0W?+ZdL^dU8aHQLH@8U3IJ9ug51;XidQ/(A@3ItcGHP[8%QK)QG(o3&h.>:_i%_(Abq$2pJlduEe9X*R
%(7"Gn&a^3!(Lu/Q=u2M7WM*m<jdGda,ODP)]AD@$hF#`LR$LM&d&d<&kLDn[&OM#>U:4BRY6AdS:K:"c9muWu>CX!oqn3=ToWXtQ
%`<F;S;HUVW0J.99Hnr1K6K'q;[%;'3oI@Y<ZVZf]U1>&hA%GN4U"`Ua][gF'KYm,1Bb_QK13IkYH9eX.*:AL=hFJueL/Pl7l[$5V
%b`utR]>^0MF$fOVY4NL-mI6XMVMn2OSU:C=?aiIt]>u$-,/am>A"=UjC7[C*&U4hOiHH5ugE9QjTN<eU6S)9u=>M8;@<c=82<@37
%\UQ*9pTh"HT5HpM6k>iD3=5?e^Km1b2@opS<:$;E7+$Z.NB'fGaf(*`YiHM:*\Y;#lSbRhSA3Wn7A]YF^OfCsb:KM]-O!S8.&0nJ
%l%)eDkp_kM_jOh5s,qZ8`O,9M$s14]=<V"dU_=-5'_bXf;O\0F=3d$3MW$`dO-a-KGa\2I@RqH[/GQL^J7/<kN?5-\3!g9X/6(%O
%+[fF86nk[78(IE-hjPf#`4\0ETsK-OU1^.<!&/5`k&FO'l0`/`(=(o?nVLltV$gJR.e486(24'32t59tWnr&smiK0[h0V?bSGUW]
%co-q(;-)fo<\_7/_K.e41ETOV=%u=5a]aNikoiXkD8&iS::pnmo*T81CT1CLIa))^9(>R:?8RTV*FC/#qNJ5\bkGbY7o9nq(:S03
%=R^sBh$B(poX+iXN'u8(s/Ca$Se_H[W=H<[NOL@R9:.7RU=\7J/L,c2b6Vo=aIu4R0PCCIBE.>WjLUt8D[e!4Y!2eB8[894AQer#
%ic(/]"*_qE:X5H+Gss`)(/SDp#RC56S+;nbPQD!"<YFX0G,FE!p6\=oYsXCpbnEsqY:a949kLnhq6a2Gs#m]<:3H"#`m%"4>h7*I
%lG5[Lio$dr4T,Qm=u%_1I@M<dmhN`J.3o!_S6`]4/^7fr5dapXgk4GadR_j*8:bK[1!?nkZ'mL(\DF^a(Y?sHd:pS,KXRVX,fa=J
%i<K,WE1_H;dC'dVNCHI\/"U^`IDl-,*XGDb2J:Z"-fX!iK4mgV/XWiN>1V1f)pfdW)GC=6a?WlNY-5`jRZ/,hEU\X_4ar+lEVd^c
%jh[V$)gIEukC[4@BX#8%ARA33-!3[^Sqfs;'/_)Wb%iPGOq!(R$6@)f:I6rLFY>WE3,XR^Ha/&,4b\Pn'T;S^E^rNG2,S,4bb(R"
%'Hn50ZYUd'0d^T>f\'Qc<F7<aK<^>aXGRK1DM9.&G=a6O1hfm]X''Ld]D/Ps^@jDEn'02LTG9eUo<,VF2!Uk1H1^),54<JInCVF=
%Ti7IT3LrS>i<)r>c#'El*D#4q9+070=)Jdaj:""WcV/#=.@S1p7te8(Wh0'q\lN(G2=&coHgfT0f1&@AbYe%geN@bRMkfdPb/(5q
%&^iu4ZV73^&H+t$.KaTk2Z_)sXU8)GVpukQGCXYrl]$JlQ)`,^-d7@#IR'"C];2J`6Kf2@?^9.qM:*0MW>/$4f1mM3+k4oumt$sZ
%?+!lNR:)TL'XXO,E0m8?OIg2*2iZ>JK,LMl]nI`]3lbqXN?p`pHmD`e_8r=Y-:+ARN5a6;8V>?d=`)<C1kt6A>>uKYi_h8VOO%3J
%S;E.P4ruQ1QZ"riTgQi)1q[l`!cF8Qi$)biIMds[HSg8\*`Ab@j^=006A3MXjbUn**SNf`JXQ]heDhW.hh-*$cl8%X/X^sE?q_T"
%=Of4u=D<m*F7A*th14U``4:!82KD%h#.'f[j\@A%_U*W$RB2PbV.Gf8[!<im9eKk5WBP"?MI?BECT=8)Am8.QP-/-:Ga;<Vc.h='
%*ju6/3-W=#ZUAP*RalXqJHdB8"SA0km"V0'ZXlMJQBIqnI+T&ApqaFGp\s10.;&-`Is:9BIs6m@lbE&[Xr7"YZa]7mfAF:=^Y&+h
%l[nG`Ofj3!^Xkn;q*nX8U6>Q<h0UaP,(rK@Uo&DpTIQcqN8=@0hd?;:le,K^\cp2b/maHY5gWR?OM(P>Mfc4g>t$aGDluk#6aTS2
%U8*?kg7t.pMc<!F7=!K<n+pdiCV]l-nt%Xr,iV6,>G+-U]*C!o$.33cg3)RSJ$PqoS,G`3V>'\A2up\i`@nr=.]8Vc=9(ZIZ,KQd
%l&J#p(GnlB9MNt%&o5LYV^dO\g'l0b1QPbTU#g#"^:0+JXh\qQh3_f/9kGmf%q.,HbXSSLI&rc]R!bPm=&!rVE-92VXg\A2;3:?#
%eTp3Uo;s\umBVhfV"<5e3-;;6M)dIo)TV$m*@l6#oS:_K/.%1?MnKR-].,j%Q;uT,.VmV>@oZOp[4NE/h9@M4]:NSMXqP>`h:dB5
%*Qg,S"]A*"kP%pCoA&#B$<j\KQgN7W8`t+08UDhP<i@6MP@<R_Y\gg-OjO;og"L+4MW<KFIGuPhcQ\`?106%-antFrr\Y"n;0VVX
%1juL)"Vp-4KrB.@KfGkaeJ3D^kt@9/JY!>]UCH2?RtL*G<8N\la+O<;Cj7XH*jir)<dW3%%m/aaZQAf'j/s3iP6]>HOfDQ,Wf&0g
%)c.,dmUs1h87Tkdau?1(6CX-sc!lM5KMPXkP8YuL*]'CQ:CZ=]TXqE`NM)5%Ue%htT\@.S<(*c3fm%!<.$U$.!OfEZ6Uf/2p)0/b
%D]apqc]]kdN6+m/-Z^WZkYB+^.,Y^0>"(J7+XCi35kq'I''0CdZs.TB)<V^U>$7ag:GS4'KRnsYV=uK=5!N(de5SK]jgZuRetaJp
%@/K>G^.0h]RaYbLV;h)C-1sYXC<hPQqoa0<gV)n.II)a8BMISfqre%J29jSa/+OMa_bM`+/r*V$JI/KI&]q@j.Ad`;Yq!X*b1u7I
%(1??"D;_jSD2P]YMIAlR&TTH5^,X%HdOf1PMeqdm>-\eoOdMm.kf86$q1U\'28S<KYAfAEn?Hj<[Xkk3^UK-oJ#Gn34'nhCm1""g
%SF/0"Oo6^@4dD3\DVF=+hH-4Sg1n?@j;N]X")6+5G4afoWo3b2K1e^FSM^U:KX>kAU=;f//[p@WDk@OQ.lcP,/CiQ_$X/"'8<$pD
%jl_*&Z)oe#S4EA6,c8kQ]gk,bNH;=Z\N[*X*VAm-HX8-'fLDB34`&M+\S7.llGfFIi[Q9hWQ3a6aBDK*S`u/4Z(0n*96eD7g%-nf
%N`BRm2=<&R)'X]=p7_?+-_MU0Sp3E#MnB>6k5'lhRZH7-^@nmiL6D9$n&j0fm>,Y`jqeSialn2)mB5#;]7d/kp@=QP8'\Q:$V?+Y
%DcIekf$>KqVEhq?4"C9?gFZlrh;DL*O?VY7(YL;P8chm<$T%W/9rSjlqLF`&/mO5*8[^a%W8u&BHu7(aBgIea7Xp+9[?efHeug#n
%VVDK&M(hduI8#Z$^3CTr,c%rS.'J<\]Z^$AF"7</CXdUGb5!@p5A,n-@[;(eC#tOb<V1ul]c"Y.GADjdDgBSIhqYm[PJUT(MO.]I
%4O9Usfb]SAX_)imA>Ae>T,`bE3N)M!2Fg7p.0=%[,#nhZf@Zq2SCS^s,\;ZPWRIY:6$giXoD0op?m*t&1IQjr."-UVK[i]C0$8'f
%_GI.W"Kl?Z1e]8C^M1cA?f%'s0[a4IOM`SLGEd$WM>jD_oEa/mj,jYu&J.fbLX$\CbE_>hRSHEJ9bSn'fJo(K=(^[pD7#h8G,Jp/
%T,@uaD)/D9PUsgU>E&hcr#I7N@5p&Ej]O/f=Y1SSUUIiLYc?lu=.U2,5S.ddQ3a,-\gY^+U0tQC`Q<RO'58Yi.@O:?C5rO:m6IuH
%RSnI#irg`66!R)r?S*dCGVl`f>l"pd^M&od%l!6Zh#Yb/oq+?Sa$rlM.C7[#p!40a$A5?gp'OjKpTR@^S5\E,`:Ycn5m:g,rJJCt
%@clM3@)PQWhmGbA4?nHghQ#-EVg4Bte@(i`Brj6[cQ6rNApc+<p,.Od$,j?JpdVQ+c=$!9U@BX5lE*,FM*[.46j"7(cPrrnPKZ@;
%.s@kJqRe0a)jq<\ABQgr#p)b-\:eg!Md>5[]u*t3ZJ/CDa<ZO+8Lo@q>$?;G5LYa4W1N7R615jc0Dk2HM(`2C[Kt7m@$^N)Y%Q:j
%Nj?6r.CupO(Y\<9:);dHd't/_pLER+V`ah8f8]?%e('r)$jp4=>B!@Q9fZNfL%9'fP#CFR)ke&r,lfN+f5(a&m?P?nUteUFP)%Q8
%k/*:>8&J;3/VKi*@Tg=3%p$&h4`hHAiiR1,V:"='%A>3/b?8'<3oY8O(]/\sgq#gCG-mY7if1'@HeS%oOHO@rMGOZdgOoVODQMqH
%#*MpXAMZ7IT>k"4WN7A?//:eA:2e)3BV]`=Mk)0%[a>&R+]P9i*^Q$-b>+0c<A=mo<,nM<@e#RS=AUYS@blA+KsABt]fH<EAG;((
%*V)b'R:eT+&Z+K(pSnr-]O1'n]iU-U))M'o`=@0JZ4-ZcCOMUkj1H*ZMkm5?lWNa`Q7=-SZiuT)79D.RIPjkQhXo74@U6tV*`#=`
%ZCF;K$DA\2.h(P<#C_B/!_G?^eLJ$(=:dAV0uT<7ho3AR8T1Hjr*6SLOG">-,NS57L8D_<DlhJ/Mb9#N#:td5Mm>->dZ'()ijL-9
%Uo$dOh\*s+q<n5>c^1\-C+QZ^<U3(?fIIQ"rV8.j^*_CWaO)(u0rZs+Y2-mo8"8(4?u26*?V(uhBPKq=<`:C"&rY&\QG$NP[LkJ[
%R\d?75u_1Y'1s#Qh\F^@][S4Y"U37"pCq=?&1YPnkZ`6@_&mc6Hh`2&K\C(SDX_jP+GJ>1pA>mR'7i8D>Oq^M6'me%DW@hdm]W3W
%dV?SB,E&K6g0MmL[Db^bqLhHPs-iPTm>$Pke]SpcTbj/hP0Fm6MNEU`jrR-PEY[!_cpSX;JQ:60[K<L?&"EtS\GWdE3X03W8p9??
%NL?'snbEm$^kjpc["?XPf;o-'q+^V:nVfug(6h^Hgj"n6poY\[p""aZ^$k\cUI.![gj?jn[DA!jhB<%M\VC!q36S7DB132^g1`.)
%;+47tbZbXFkp:nE^$u^cck.E/NtcYo2\<Da)s4Y&b]0T28n+4=VHO\.NWTRNEmlTS1F-#Ac<_']<>o_n2Xo]h^W)]bh8+?JCX"GD
%$^hc3\ot1']bcc(@nf5+:9$*e`[\6;oQi^t]Aasj<fC9]X6(pgUf_taQoEtpq5U0""tda^Bql#r)'=27otQKHi[f^6p<'DKLDF%S
%E>q&Ub5:=Me0u&n'-$&>cs4f(&K-5u#(2[&Aa>+Z'.hh^7j'D4=u,efYHSTG&K&J0UMVk&Wmt+nGMGMgH0POq"ZjVi@iqIi<X9G<
%F?W4:ASUG4'n1@RO8(aQMALh;B)Pi'4>sD7>6"LU<<7cQE\?:"`qf":_>3+i!"]t=j`hiG#)duS3")oojr:.O;l"nMVh&t)\0e'O
%n,!bOriFY6^K>d="\;GO(Djj$c4*)jV"/oDd]GQB?YdR8%sMQLDca[O_k4@$B0UadibGd\<_ORKGD$d.T\;^=23m8Z=dE5)Q57No
%lXXHh'X%TD[L:pOP>$+q^nBss/eK^m<#--"OVl"4%G[Nk$@=h@7YsDYgdAamcb%1->=J^ag<T;%D*C:1l*4,]^d?p,'cB3&&h$RN
%h)I1&g+tToj=9g^W\m[>pe&Cjh)3Hd_].Z3GVnrR=h-FZl85m:!!biSJYa#c4C[GD\S*j_Y'+j5;C.;QSpB^U!"Q0&f7YU)`\4ao
%MSS`IRkIi/D"D*Wlr0&/St5Z&Tphnb?Q8?Xj1uCG-tG5k#Neg00Hh`oj#n@8E&UUs)qV^K(3[N[<dYmRU"i<)o<npD+o"Jc"1cl5
%C"nqLoO:)'TbrQ.F,^ep']ET0:X;tf/3*W')cDXOTn-Ib\EF)sZZOj-KT13Mn+l??NK+4V0kuqc^7%_uB$H+_UIHU6C=]cdTcK";
%((614:l:o]5:E3Z^=ASh2<-_9ST@nsCh7)qIXUg7WE+iUA%h3Y5hn^+<J@#%,-&d1dp!?k#,74MqMJYXoEV_So]5-e!oU^02:BmP
%4Zpg4!7l$\fL2VPT\a^+al#^U4&-rOOu$s'46#uq]HP1k/Z]G/1l064^8s9rOSY=%gcBn@o'OP*Nh&2@^V_P:V,oasAMu4@V"ILd
%V@SI%dMUgrM)EB$EMQrkhmXPAQY2QP#2enANZtZI2pRRIH38DA^QeM\3_a[Ij"5C'OSl89<YBn:AlO2'm4'`&o/P`bY8K:Ur8"2i
%^gI#KIoec?/FCDAH!+5FV$FI$b&847NgD_3<Y<r'O5U=BHEIEppY%/;33bqrLk$G[GR9UKV2O;#DVWf8$secd$)H0q^9Q#Icl>Wg
%Oj=(UG='V\(/%sb#e\l[b7!2SN[mY=3M,41A@i.ML?()R&hMkBqXPRi:FKQLdV!Wp>c0&tU'4R=@2/p#?g5d.JRhhc#(U'Q;1+W1
%"5urA@UpG#m"MFK#q>G(9%!]5)o'sqX*4,f3JUjBh:%E:RG@LIEkG.cP"NfTc>*>:S>c]4<7W*Vd9UctQqE`PII7tf;;@Ru2+^uS
%k=q:j(\!eY>Vb!og_e>#F<^!&q-/SG-e0^-Fem-u"m/iY_Jd",P=/g<jQh.e;(NB77c?XMP+P=?ZR%NR$-YbR98[=JdpYn4MtuEN
%B6"llDI'uXSe'SmP<J]lVpC-PJcu-oE]*,01+m\iHph1YMQK8]!-D0M3H-.+0MQ>iCDBR=*LK@kFfk@f'P,@4Fc`(;9J+6:IgLI@
%i!:@L=\-ULn;tgNT984"JZ5#o7`K,cXqJS),J.UFG&]_7Y]QXQ,kk@1\[@D/d"okdp?O:HM<Oh@)=JV'eC0HnG*4u4U\s0cfqnPq
%Eb`ToJFgn69#b!EV$p,YA:`(RX$rg4\!]Im2=cG]YT;7%(T)]i<AXOcT%l2LHL+QHU.Ta9ru"PbLgu`LduM=adu%1plh#kcqKd*E
%RM5\2)F(^l%:^;rdE^\`@QZ<M8[-D!p#@1W0KHs%KM$R9GXSAm!cW7L(uo453)]ENoRLU4P=3D@pYB:`m$W7[Cb[9f8oFE<(jb<U
%PL$B&#$(fV7@nV/H+n.*V-\<4B<0FHBIII]_K$?ej<LCT68cppZj*b>e)=^bEX.R_UjcY_Y'Q1#ME1K=\_hrjCkrp,%Atoa83PXJ
%/Or[r@B7R5ES9><fB'$f9'?IQ``l8:g291.l4K_+X(8_?Y*%bTc078],iGqmM(Le#:f2tFg.$W-bs$WW=%3Kol;qiqiG68-mp?Hm
%b5M3%qT?k'TcMH:Z-$`\=%6_1`5GWY_?$(ebY]=g6\Cp.nd_XI6t!m=/V&[hoG1gsk*>-f!c)8`>DpqdBeZKoO/S&-)C3C6p(TB<
%D9h?t+Zr7s#oq(:9,,bg5P7ki4RB*R4o2,C^JogW3b$T`5t/OPg"+cf^#KCOWj[pZR;u!BaAX6!3%89<HTG)_dk/_#6oJVF'#GD(
%enI7<RoW(IC=JNI#"rEo7;:Ah44PQ*%ST;VG"%b'=(ft(8hYJ!pN9?f/.X:#0gRg*T'!PVhIl7bD)7T>2RO6rJH3@h%n;Itb>Co[
%mSF)KRG99^&mfeYCF*%gD0jUL?Z"6)d<Tr^^OOAG+*7J4&)-0*7MM6$eD%[>PUP9$il!d[N8b'J.$rMegJ?XG8MOZmV\5EEr78A%
%_BB<4q1ffcY,DthV1gDRjX_1NeD9,S9A(GBQ/(UB:DG]:7:gc`bPegHH4$L$>^tOOY9Ms5H+F\RM%V+>Bn7n(qngD^CnqF*e_(qF
%*a+bsFI8<M)7D3rT/Q8C;bW5JV]r*_E=8#HfbYgg?/uLs&#O_!+],s/9&@o7;'l.-2n&e"Q$@*B+tCCV%]EU*H?O.u#j[)$A2P0a
%kp)q4qo-$nWu/<"nVXb#l_#alTfAdt^XqXs$"tikoj6`3MTtIJbMBnhZ7+Er:locc<4@FM-a4j9/O9>Y3Qb5ll47c]hlau#3k[.R
%Y6rhEgb)Pe+S0B59IOKo4BIQ!"."PP?B3VjIe%Q&\,lRo!CP+U[81/@J@paN.)AoEbYu^N(5>UTX(d-CeG7q-8%#q<ORmc*>,].+
%NO&j\J0h*-67>V#gr_Vki24*!feNYUk6*u8Bh`"+A=ju!N@M,=;(@KGbI\7SOWo=N75`-LTO-?ubDJA[NnhUS0E#oJ#"o\HC(j8b
%c]]385/2oX;@sumlLUtdg!+fmhH]-(M<3N%"Q"q"1,l:$*bi5!<"TFJ01eh),75OUl0?/,N=%+rg'%g:IV^Mqm?PM.nn:e1r?N(Q
%<<oh?Wuo'[l#.,FkJ=WV4U;b<L$j_]i(7)lOjmnmKX?D'T7C)qR]kbbVos)VEspn\#Uad[-.te.(8o@g`$3eH9l?*E+k.qggIg%O
%Z4=\i$D4Jb&l+=P;MnC0;#"W>]$F5K-s%H6\o"@:'aESE+A,HP$t"Le)cD$+*Rrc!?#`!qm=Xd-!odaAmbpc(,nULL(FmWjT,Utk
%K`LeQ[2hR"P\[X!S([ICb6()1:D!n^Yi:DR!d_f+4LMa7kq_@m;qc8oOLqjh1s(X3mbGg:UB3BfO8&%MP(-$idd'\W]ZFLZLB70M
%\GHtuP;l]jC,.FII!9P(;cctGjSp2?&;=nX`CU.Ds'!p7Wm_T/7NiMJ(V)9&31,B3n]GL$l1S5^H*^LLU+,(1"1&@<rV[-(G>8An
%,U'$uB4<1$QfmP(V!:RcQ4q+:kLA*b4!EBMaka*I%jrKIhlhN6mRg]U?i0P8"5\a_o>N@I%#4dp_uIIg6i1oAbO>GhB:;D5:r7VY
%2<5-NYFHb9d^0_KiDel-F*f_*Mcf[!BdaYd!E5/%bgj[8,j\L;(+nYU(<@<J*">OUaRr_Lo#fOsH!dB-]Bt5^BZQHV.S<d"UFoo3
%L2$F@l8Z3-A3dD)<TX*;Lmg8]N5NCi'q<O=I?'p-G+bQR>^26dl99!:UQ\%7Re]B=*)1)XOUf1n<^^i(g3f<#R)G$OfoYu"3BpD7
%<>8\VZ2kp[b(6`3dT9Zpa`=/@.#Z:P-l);*Wd%L,&rPJO195Q29K58lWhs_NPf!`r7I$SJ)$^6UFV0^;M8J:6\gV*d2pj7O"\SLr
%[#/'<[]cs=boq]]aI'ofGI>qQOV,M&M^0I'r(j&#l@<0,G;sl'BWJ'6elL."1^$cVVurt/;(kN)O7#tEBQP7_*d!8ZjEGnQ1,-!Z
%ALM)grS0E!PlNZW(6ge44[VDaMIn=&e3dm1?9r.L[ODTs)u!D*hM]\Rg339P@e';L#$Cd%A&"J-T_K)d+"pu,Z&dF11b>3?)or/1
%N(e=K-GZd<SLfML5^^_GH_r7+E]`r#-=Qn^7Tg>u>2udCME#0`+B(m2HM/7sH,K^ldo,iLY(c*Q?k0AQ+E-AS/n7dS8Fo?URFsa<
%X.&4ff1'LjOn/7C>nC'h?h-77-P`nD-l8QLVX@r_J3#$4qe=Ltd0]p`JN;(1P0J\EN0o3opej3SqClUBe5h7mia+#`Z0''EQ]oN*
%^K._E#19I[Yb,*tciX"#GM_^<I7'r*XbKKtR-/'%K^V/"1]p1Yc0Ih3^\]Cncdq?3V.3j!BO8(\]eW\s'NqGK@;f^G1MB'hfmP_-
%X#QT]Dr!H=bCX%.VE@KCBGZaYql,PiHYtbI$f+eC1>A)??4jC4?9T;nJNZr_.=#3e.WH0YH[/8upXRm,)*Zq6[4itqcP4@Ofp0_3
%9Tgb_A0"DiASprq-!6PAE@?TBA>t0,]8'ALVD:,8V<t.F?:,#leRGA[S&JuN;cJat>,_oW?n:Y.9\C5blP9n%"Zl+O)Ah)JPBXE,
%m/])qir7DRi3^6Hbcfhhn%0tu5\&25%=Mt;(.@(pn6HB2N8c`u3`8(R-F`)<EB#AF"N706c\sZfl5^6^,DC2mg9"1(T"S'&`Nil'
%nk@Ok'gXK.3JCVj`'nnCOuRj_YWnc`qXnZi]$;?q//@'B>WRfo1:D>--;mQ6]6MUq/`OB&o#_AIh'&s:KS$:u>PuDX]^S0nm`j(A
%H<+KlPs&+^nB"WnB!CSZMKn2CQpU+\)2,rXI5R7E$:Vr]1VBSXULHe*'_H=[">W./ZT_`kKd+BLGUdT_mfe[g%Dc4oH!FQ51!^Qu
%8mQA\&<E6(I=q";iV7YEWbE/M;O[MGPpSgRC&GLV'HVA>W*VOPH&NZ4,!;_ELOT9o`u^1j+&/7@h"L9%jbU[q+.;,5TrF<EgZ349
%[jTm:Pce'^?qL`U2)5F($UGLi$KXFVgKu<[lB9\cHLa.Xg;fp.rZ)WklZBX%'j#1T/GloBW'J^"DUk%"jID7iJ@tLY4*btqM8/*J
%W65./Oh.Uq9B"EDm_AY7%pug9^XSAXp]V!:[7=#qF'"TQY%ZWC.&O62N&)C5)OZK+OakcfY?5I0d5'Yp\X'iO%]aED#!e5=BGS%.
%FbMj7eNM+=@Df^YE_%t/E9"Oh['YG!S"q%RZ,9eTO@&$N$OFQADWs!?ZPOONG4*-8X*2@GDY4M>U^H>TM:M%J=^oM:3gM8Z)U;TQ
%PL`k`iUYI./4V.]%S_fBOn5C.(@Y#V4R'Y([?@1.WRgQ5H?U9\$WDrEF"#>F@Ee2F`+f_ap2lVZPoM=-_O^D1$mbG1muAbG?V1gD
%rF^T8<`Dr=MBa&&b>3$0m),o&jPq7C@PtTd.Uiti@&:k/.;t!$e3K;q!\LDZ]7C?Afp!_NMB2b"AU@b><@hUH(b>OMTt'J:M-@T%
%%o%(E'J9$IWg%>$rU?0_O2@pl\a%Co4Y1TSBK*Hu`37mH0CaBr>js8YM">G:0Ad7Ed6+75>@]-)1J:2:.bq6oj]fa:;HmoVN<nsL
%*A#RC.[f6_>NM4RpeHJ\M&_[^;Q.BMZEO4(=fLM<Cl7J9;_*#2"eEDU7\-rm?*eS@77)LSD!,V5FKX:AC-t/o`aQh9!:aLOnkS]5
%B!>:V43P/'*g/=,4dG!dXqH!-@mg46nIU&-f*p2t%<p@K:l7n_/$F"jS-+&rXQLjB70jc(`ik)3+\X=\"XZWg?#7Upp<DN2eF6:4
%<R*.qA)"sUEh+=2^Llk6g.<!W:\KqZN"E@R2G8F8&phX4&r71R,b$?!>V0sC:tLgEWtJ#s/geEOPprn->pocVSf"u_1:;WHK5&7S
%<d7[0.WoT+":%)&*B!'Im9`d/T]KAp!'FVB@rj[,:tR[jfl^0<rCDD6>%%EIHCDlm(Lt&:_Xc4W9i7Pj3O0t<&1<mC,'e*#P"2kC
%Ia1+SUkdk,TS4FGjaE=Wka/b>cpq3>R6XMklBloAQ:?%oDa.Wq&TJfgG>0b;"=2/gW3'1X+&Ok$eP`7?-l&68;ma4T7=AXoY7t*'
%#%pMmL^S3Gha8aqoYm`/_>.Dc3mi0ATtfgXWoZm]A4.O$KbE_Wn17XJ!=Y<D:jBRhSHj@4%!>),JIiBqb7<2Dco6d.6)Bg9'nBX.
%0e7!JHWLJd=EO@%FhoP/;.^0/R.nsc6u=E(+UYHPG#L4nfX"0Z#mn=hh/`P'T,gn7&Nd:e7gY^8q4jsS=c)dE&?%.ZP9hi_dEnqb
%Gm$s$V,>(X<fE%s[LIGl(IML$(,1;b[oXgk(B:c$r%q@tq;dUBqLku)l\<)V/34_IZriBgm0KCQ1;SeR,_eKH+4"][SmFY5Q&<Js
%K;!UMk>7\7AP8gIZ63/*L=Zb=FOtRWii+g^r<dtOTKFkUQkN?T.C\I[hKFABTV6haLS,^ZlB@hKK70/^(]po9$[8iY%jD6"#6XPB
%9k;ZLIki_Z&bnWVK9UU<6*;h6BF(XVeP*4'DtbXTYKjZ6NTbqnE/GI"Cj\eD!J+Dl9sr98V5S[N[UH%:h**e+6JQ'W.B&7Wf(%CI
%@qU>U&9[4/e#SQ.('ud2=h[[b:gLISVVl5s\DBcNE%E_j0;0cM]C/jrDL\1+f0hKo'3T*#<k_T[jkS^N25sbe70TIU>oBOB,K-hI
%>]X7$&#%dI12u\d1&,&9US>R[0'Lj1f-[JSna"FgVBu(-=/`eK5B?r$,]+07\.>0H3Y51/>'YVfPFi6NFa;bYQOUW!epZf@Ij'aE
%ma(ppDgqGa^OQ+)Dh%T]09<9lAu>G1hqe9?l[<+_s7X3WG<PQ4lLoFOp>I\)l@8d"GJF(+pV6^`s7Pi1o@m(?GL(#BJ,.:Fr4DFt
%m9fkCrjUL'r:TOX^E:2i\'M8M=u7YBq_u:^cn,3FLZX#]P8\p5T/e/7VF7IO<XIT4IVh?,SJ7<s,!mjWMN>$)lD@btrMp(#BOXd=
%dd"K0Y5IAQ=b[,R;uBfnY4Y:.K?V_H"ceHJaL#e.',"/s/hCqET(S+^MkC<D3[N^>&GC%Em.X`"UQ+:'NZuon*S.;QU'rme`uMoR
%"G2$j]jGo!rsBg.8s41',t^!f[>mW&ag('!V?VnZXdMS6BK-,5@1=8td1@D=P8E@R]mZST[JDpV<V;.onlB9;jJHE2"VA/3V,V<8
%Pd:$Uii'On;24fk0@jRLXhM,q!26K5dUOaO/mP1Hf3Wpkdp8!o5C5oT-nSCER'Mubj99Wr&?;HPEa?#p*/@6e[3(egSHGr;.Ph_4
%^g(E&>dueP]^UB8]hnu0VMt9,_uVU[!fCneC.@Yhrmpm4i1s&H\TSfhjV>oaiukJg;ekBhF`=0:<iTHW]ZJMRO`$;>Jd3\ON.b:r
%8rlc^F]5V"l_rEFJ$A+?1M6d>e;D7FM784P//(m"E[eq>Dtc_uV\1ef$G0%g/1!9K.O&glNm=1C."uhVWQ:1>`.TusQqPj;]P3Z)
%S:#0j7Qo;]O&M1OmoAF<c]IH>WfP4jlMZCI&Y1qm1u^fDE"_$jeuQ'cYZl\aD-'&B'sIL\`d_u'&?,)0Q,cX/Dg<eCH=XMg(Z7"K
%mg:dM=WY'sHD7g3HYMb>'qh6-/UcBTZ="-sc!Ds3?o#Jm5*d`l5H?JnMSe;)qB8*cPZPO?c0)>'HcsBQBQX@k&8IK:MRVT/)Jl>S
%`'X]OWFIR[U`_9d\Nu).@M+q6-u:!2;E)L9BfdY_[:pAtM7.rW1<sU$oUltSlJna^"`l@dHEh0f0q7uX]bH+6:_iB`#/MgZd`+*a
%PEIBCYCds>S:!-/>(N8qJIk6^BcI[MkQ##W%\0'?LdB^f.=\`SGMo@SLYSu@ie%FuSWlOg/,3cr.2aVhKT]_M<No*n>:fIQK1e(b
%;jWBB"egf[`!$#K2g)l+L6#4m<0FtAOTpgHBoS8+=\:0j,$?kFXA4UspD[J/<dWjO*e!F.2L2(fU_GU/PM1C>4:"2%3OHG,asZ(-
%juEI#SN*>mPhjF@>jV/>$#[r[_CWs\+K@E,2+SG*!j-<19!,cqB).mbmd4)8r8lDmr^1QBcP^KODDWD9SK<f&ZEc\7[[a1')I0?!
%k,iuOS4LAO@d*B<p5Y6]C9`%tK:'#n;(Yeon%@G#(-nBXo/0L8e:+Hj>:&@pXSYu9;=*<1>g:==hJ2ku%_D,ILRnBd@R#[8dA<!X
%8ERMCZQ!Dh$s/3/Mo^?HC7rFoj*;po1$[S!E_]G*U5gD";&t=l=Y+6&dY@3S@D#0++bJbNcC#R5MP>7Q,f4Q/kS%[!B+i(1'?P(!
%>J-]i&Z_+b6F[oA3h&M>UW(PA8)^G3'i(m,[odc'CaK(f6j:4s9k^C/%J:IE'^a4k'&o4A^]2D+Y6h,gfefsiAXJ5B,Xe#e!(P(I
%+LpinC7Z1\&CPVQDPuc2W0-6dS]HIRmL"/Qf5qsgdn'UDV,IF"B.sguHWu@ZIH@\lk"5`$"5Q*kA9g2ujQbW+.UJ?JJLd(d[4r37
%VbK*92Lq1)#tu?0s+ULpJ*U[N<e#kPG0R2RW[1sg!nml2)T\fAPOihhKf8'@#@gZ<J"+EsOU7tRh-$L"/$5eRh[9!2)eM0/0"LR&
%XJsn70@O'YD?a]@eXD-+mFa4Y-6"F=m&`/BUH=S=PuOGQc"`_[GhP=::12hj'<2el.q@+W^3h:[B%*lD=Y/)p.j@cpU*`Uh!,%K%
%/kSf;l'R5XB]WI\\sdr`Aro;bWC'itb8?PnU#TabB6k<3c$6qU3((KJTl3aY2L3PoeNI9t$]&.cBV>)sg1E%2P34,LL*jG99E7@5
%M1G]V?H6#=[>d!!:C:b`4IsGHe%Nua*GeEo'2?0o>Rgjlcn-Uo).fisgPZbt3-@L4<JXMco8Hht#YR?_aU3@VIQ[Rg0>&6KO%/<m
%;1'BO,3L[\l,SVpAf=?Ho.]hMVH$7,lK(X8fHjAC!)f^e.CW9IdA/FAj273!$/LZKM!#Bca4Q2V#YF>N8@`lNoDRD6`ZfN>>5aGA
%7gk-?<u_Er#%<P"Zl(+rT4qP1K*m`k-"V3[os?i/Dm_5J9]F:1G>cC3Xg#Im4Qoi/8ub=)>/2Q.OB)Xa]rYR&>kTGsFl'R9Z#Lh<
%jq<.G;\J5&:!*)k-!sC&Y>S^(`b`:0-P&\q)oGEG4hd4_BH9qTAOS1oE7LI@?;RlC.Oj]5Nb).rg#<S:\/?BqpOcdtgjN:QBN9=T
%58TWq0PMi<aigD$L(Okt^aF@Z,!-H[Ir'fr\N'@S-J:V4q'<o,@l%Ju8%A,8:C2O2#9S')#?Q.Ad@DBG_'H3,;Mu;e.B_KtrJ]da
%e^PZ]m?pMGe1Mjj)(D\2-%<4_&%R1f04./la1_G=\Qe.[-n5_A$C+EX1[F1Op$MnbKj`F3\TqH;8jQ^)>\e=bVQ@"BG._#<DgYuc
%hE(>SI<4B<3RT)aNb_$b%;"rbc9o%dO`HFQ;8E`R_\A15$a_]FomWF<(?L8cn3)]N%T3=q7U7eWATn"N??*2Ki<cS6==XP$,1</H
%7r\P4-=]J6nRVLS\\=MBEWiAKn50Ks4VYISgOnAX$N;n-Y(&@h5"0j=H)FK/[sQ%jU9%[ilIa,ZN]Oj7UPH[N;;^A0N2!mE`%-_O
%RN;/PSr.[Yh%VA@`ChLpVT5PsqWUY4[>q^1!B=%A,8cWD>EEu4o?colf+d>+7uSU(-"U7A[524-3=m(0W[&I3j,C(AnF51bmD5`K
%0Qpe4o%80Kp?jGVH:j)@/@OQpXtP:O73?C^)6_'=VfU403FEp;lc8$mU`^,u=f8(Lr8uL>WbH(K5LP5@!Fq"^cB^ib1T!8ZV,+As
%;p[hO3dg!f6raM",7sQoCl5Q@YldP3mWG&+#4n2<pmMjKV-2._]B`qg]F*$*O_c2dU?ABennm^*asa'W+%Ch3b!#pL>-]g:?JFhm
%4##HQ>ApbBHFBl_--*O>WOU4tqohULX,Ju<RBH['H4Wlmi=Oq9JYU/B*(:hW6lRgoKsKVoNrJ4Hph-W;[JH/LDPRJAUUhURA(Nl_
%(]*%^7kt/n"!f\L+u-<A6']>2%eMG0nF&L[gLS$t0X*r:b#k?UL.<D_4B%lbSkQ7D4#`X\1JIVG0-WRA**=L<PO(PsGfL\ih#Y>M
%m/_oOB\_<lgu8HVdMOA7(V<;Wm[+WKHsTh;E\4bsC#O3Wl:?\t8%L:JV&t*P=Wq`Dj!`^Es*Y6T6iX/0-C;7S^XbYMOb7gmAd;9C
%16il$<F(h,W3T<kWa>B+W%>m4@If"R-"F4GD9ah8.kU,4FY4GHPqJ!^a&BB6l]7X\/RMGEe$@+t-a==+,JdH2`N.=5*Y-k3q1b@0
%5/Z@4g?1SH:KOM&QRjF'&&.FuSg'-+aC'CE@J3Ukq9M3nG]);`XBKOD">o0%Zko!ocOEh.HX?2biU^^;IdZWNT5Fb*U.qRR9H,]>
%aG-OqDP>Ms&3bX1]I+=%ei22XO`"mB7?k]H@iR(8d&K$<;;CkI=4u]+YY=?u'.`D"g9K:R)"MCY7KME_%X`tE6tU*9,g=hF*DS-Y
%R&HZ12SJtBB:jFl%82NEJPd)Sp83?d6#Rmt+$W>PddtLlMl=]*:kYe`98mtM$Cto3KR7pp[S9Ce!)k%`pq=7;$#kOQVKtQn;qZhi
%,35!qc_b,^PfNS'X=PAMg@p/^$HnCH6qZKO.CY\K2]8;ZfqQH.i]H8jbQrd9AI-"q+3-n55XoLG\55i<:oOX\?q-1"EVW\<o\hF5
%r[%QE3*HS`$N/;ZW_rI:?G_,jZ'?HYG,.r4U0<5'D"T-/U9.99K[$\tW+&l-j$8Q7SNO<aZ4dT+QD7\ZoLb)p;nNNp#4!'o$:hdg
%R/Vd>_73J.%u1Z.#+Mob!=a^tQpiKocsdpb\-41&-Rh.:3YA@HM.iEj^/4qqg*i1;!]C&0gBq'%aA<:]nV4&7"Rnus*G9C0!sQqJ
%9FMC["HR=d1fZBeRC#e"C?/EU2?D.K/.8Q7-c_?b^gOO/jDhIlps0CL'3c6oZ<!>i2Bg@4dPn0US-g%Qb-WlZhQPldh`;hVmtar*
%W`2!HMN_%D<\VY2a!;=f9d\9UA>X*[%i@[ajcjnd5QL^6>'n5Egr>IH*[(7,9l4r5WQ^BO&Xm%%63d+oEFJO>5iNk;qPU,n)VBa%
%WZ`cH]RAY'&YQHt+,=]@F#nfBnkdNe#389Y2dna5S<hreO'\'n4LKg$\c@$0b;G$S.G+ZiFmY<O=t(YspClng[h:Ie?u(uI;?>&j
%O4?j$#WiBt6AaIV=gu8kc3WH(A,II+d+5(F;Q8932lQnD9Eoc0Rj4"$$DT!m_6tk2!8X]O+24G9F@OhjUut'NM_^"=Qk4q)1_ULF
%^"nlZ\KkdaW%p=cB^M[]9&)HOA2#;Z[8]2SX"998"`5q8QZ@R:SH<2;e'FCUGppr/c3hIDfB`ZOUf-6<Q`@kNHJ?/1LC.mS1-mK"
%\P/(\N<C!]FAkoaU$)[=/#&G?@"$Bh?P)e>?NAX4%p$gXlfnAbbH`H(:9`sAGGdnW;nk*iGW3$]gb#CAYIjP4(dmtF48AI!aF5fN
%5/q29gq%MD[]p^^;F%Eq\\t!Pkb.#=j(:JpX`>2[Q1[0UCX(A.[08tdC?#*X_)m*kpeF93UISGe!n2P+oW_We0jA&GXOLSI[\G/E
%HGd$T^lOa0T6=;Ua5mDd1"G27`6Qmg@TDc:pKd6,mrfP+8RI^q<APne4:Jn!n^]m.,t,LW(-iil;a\Zjc#`1NIfHt!rRVjP!.GP5
%s)b=eV?b9-2R,Ng6s0,27=BOU]jIa'7YpHnMLN>*5MdA\E+qTs^QMCMkk3BXCt[m].d\^*W*i\*Zt-[E_Is#n3>!Ib.h`#1cn;64
%mNqs3_5Z72H?M3s\=9BJD4>j$pL$mQ2mB1:&UoIc2_\'FdA",U&2<@"DG!qhd!B%7K1RWJOr+EQ<=Q<#->\90dXd/[,pmBk<h5I+
%4+N.9E)=M7:>*TcQ-"D`e,)1/S_?kR\^%g=>^d#q2XeInV*q,rHlj-k6s'Y_SAt3p\ODEn@gu<\%u;15gR.h:jQ2eW1Be:T9`a/`
%NRBN8LBq=q"pkkE10,q58o#71`F^u2-L!])27%mG:b-IN2Ujl6Pn84':*@c/\n^qX*I9+m'EYmeGq79<8o+\!m/FCoc1L**T?bH5
%c_YKFchf;=rJLt)7C@hiD:GY2D.FOL',L[:XLaHgR\:.`Ta*c\R.YbZp+54)%mT1#Dgp4l%pO"0[5GHT`bM)QKK-2l+;@nh)'6JE
%jIBl*9bV.f=]"n#A4[nFb\.4>PFGXnFZ&dW=P(XQ?BQ#6:n^i(4GE__"]Ag:N[W;Y/*LeKX?B7OL#ejY'SXjA!ZD8DVCpV.?GZh7
%267qG';nf\16K:;qae@r4UE=q60E^).Jq,piU;"m<IS^`7r[cf@i\+/J5a1@,tO#mD.j&F881r2HU#Bmn)]#^'82<T]V^&\m,f,A
%r:Vdu\M\r'>4h<_&K66sYm%eTV)U8h19H86Or/l;=`gcW@KG$cCn>Pnd@PXUC:sN7nBjJ==7r0GCh^o@^-r!a4T,fjaSIG3dtAg>
%$r@8Zj\WbU`[9%T(([B&XM4SBWU%Y"]PEKIPQXG(R7Uajaq;QKXOVJ^FIZ'f8Z>%]S!6/[Wi\aKoq\mm"jTNZ1<BusHN<mtXqn42
%#_sh;^M8j%D95Idq+bYD4I[^50&U%$nSML#"ELeg<1aRTRm?3VN!Uu.$X,bcCKjo-OQa&:NEZd.l<P?YacYTN#lc?dpuX8t[dRu_
%s56IiW1u22;tqC<OfOpECVN^?>-T'W'Ld`d(#%SLD73+Q'MreV6cDI`0\jYi*kp&5?g`V4rlk8$`e2(I)\E^R[>an)$L_$HML%XY
%DB/j9,\&u2CBpE(jrMZ[HH<Ld4/#7uD*YA$iq6=;I'<^?G6r$tN?]SZiX#Cj>,$3$;0_3JqU)polfcQ@#j5WpkNcZq`6MegQ;`PX
%CIXpVi[)3QY7S+RS4p*8G'@e*P:7m.>5%"lDRf[=<op`".WpH7STD76Rp@C:7<XnG2<c`t\kCMfMj9#T*o=-NQp#(P5\+WUpKE,O
%<o@#ko@W5F/pY5;htqLW,#'QR+cjs3&d3h,hpRe,2^#lUq(21e$(e&+8:Wla3aNi#d*[G.?_i?4`NL"i6b03c1\A=tp\)<F2?gD,
%n:"XA!?&0RB%7BTrp%<p_09jQco3lg^)&nOH:HW=a+.55)m-ms:>A>LG_sfjP#5HF5g!ST5T_t'aN;7a3g.[RZ>%G1hCCT)"AdS=
%$<k`SY&Q:^aVDsEDMn+S9o6p!O?:*+)sA!a:P(gqYm$_:9Kc.2iibWX"fm#obpo>",e-7Nm-\BDn:qh%nQfU23?Zq%)01d=@%s03
%L7fEioLXub*SflL<N?A;<Qg,,34bG=:S3d2ZU/d.c]r<)"jO:7-)V5;7+oj6V_h>flM(USrmGg<!$8W`Q#1\B`9@KhX'FdMiXsds
%DUYYINE.H"YAl\$*mN@Y1$>#H:AJiW.s2jN9PD+s5t,#L65.gYhgoe_lHCiY.S=/ng;D/P2J\s*MCRUYS5:Bl#a\qe!u5(J^84*$
%c9nNi[7em0L]D2YJ]^nRY,uagd:p;cq5rpicc^6d2Xm,f`n=surY3rFfX>rj`Pq08(5?O$m13gT)2dK8nDqiBR/M3g$"f]i)QXt$
%MU@g<G-SiH.l([qS;1XSfVV2`T@cC6Hqu>jLGb59?6(P/OV1]\/b0Zsh<o'mHgnSN/?#8T[YjWc7f6*E*gsQ5#tuI:_cmo5GdYHE
%3Q%*A;^NJ%@8%=kEp,[VCH[Y*9\MY(]EAGK2k,[;CYA5[j(8\.'VdL`OHO2D[SCCA!UrE`D?J6:P5fAWNL:3JIeC*dL49^5LYTNg
%?g$.E2>O1ioq&3dhUJf>g;uu%@rh3<>&_\)jQpngL*)iHJXhQTq1Q+V$L%G]5)<k]J/#t`@A0UX;Ens8*!Dr<r>>VT)o0iAkuUPc
%-o<_I#]);7_55\q]Hktn_pZ9O2'n-\l)DY.EF=tq<'G)61W>O/!g,'T:kXCT5#`S-IbFG1;l%,491;2aA]?A9$WRZ3^?%3V@BOEP
%$/Pe76b]u4fb.bK?"9dnJCUF8TH3#X,CfKn!cpd8Y6j"Rd1cPjY;Q@G^]4;FhaX=8T=o[+j-"L@&@3+[VdI1$*d`g*="S`@;7q+$
%;Hi8^#DJDr$KfGKeIoqJ<H1+rVY!cA,=([:N@=4riKJ.4^'JFAOL42tI`,;d%#+7Mml.6H>/TN^Q$P,^UdKaj?oF"+Ap;XE$Is*F
%7eLh0IIA8f)uf[5I=sUf&MU<E?%O]-#(<S1B['V9'IX&VN3_eo@Q5RXUbVl%s*m(<K2l5_V.(9WjsV?0m5%HuH78^r=1ca?Ahd<Q
%q94#0VE'fBr<Nh.OEa[]Q@b1PUc_lnSJ-m48jUq$'2";fMOd=CT#+&J-P4L5@Y(K@#pW0.#\CV"A>;m[C.L++Ng%IZJ@som.CtLc
%F4\2L^6s.afp<pc9^Eq+8R[KlBWBqO26k2K(t<sdqmgEBK\7$I:3RP)EuisF)283\As&KCn?25FQFr[1H'=S=9A%jpT`Oc$2P&$<
%l*>.eAXb%4_/m#ZkL78!)#`Hl5F5=Xnor6]%.-io,`TO@kV9u;_k970CBP,9!BrnB<$:!tp$&Rl'*Qc_=.Jec%&3l<+_dMlq@kWC
%K:5h/D>M:"O@Y(SLT(nHgU)$7n5!<Xd_r'O=PO?/PRXToL_XpHmubuJ\J/Y%=m+KK&K>gEL-fk0pYQm<P!olCq2iZ0lVLt_=&Na7
%2N@i,/#Fn-BS$eO^</949E+"2>'296+u*a:#'j)_Qtsstp4l/6<p2Rn`N@U:F(uWqi0r]'W^HAtq&n)tq;Y[9;dqI`&VEtA""QAD
%rFkI+_nb*[Sl;H5h<'\rMS%NWBrVniF@YU'bD3A5ELH.FQ',oD,kmt*m&IdGnrgK_E)>A\P#$"50K]J[+T7tK1(lguORMZTFYFj#
%+L%fEG6Br6YHRWCpC>5`7%>ctd$*?I28:7Trie$i[J/27q41l@mqE%MMZ&(?XKgiJIZ5Q?8L8W16D'u1*:[!rrr:]tV:Dk&]?YhU
%rkn,&Zcm_[RT:P`+Mhr_!k1i9:6u,%-';aao^B3&1$1M/)1.,eA_cQ^c8b!Y^"-MNq&"133q?u/?SN(#Esq9YS/"-G,RPd:TRl1f
%X6!#L8tWk6)'Z.^S2!aF(bsWo>O]S7km,#qd8&[2Y#21\2YdKQmh7-[hso6(&,,%9]T@.r`r8O6]U^VN:-C@;<UARI;J,Gi;+O\T
%>LHpah9jQ->Ek'P"FeN3dq^?O#b%Y@YseL^]\hG'q[;9;m%DV?=-:RJ=u*'9rV"0Z]o.f7.-:6#>e!)i_c2MPaR.u=i`*So=`A'\
%d,q%3k8#rsZ.C&p'S@ZrYHI1rq_+B[nAV%VbPfUIM%/Zpa!BC>rYJpI!.9O?Rjd*pkMK#*S9P3kL;3VDIoda*$&ho9r2r][=#\`<
%6(WlpeCr;m[c,^7,_l3(;m\UnBY<R?&5&>6'WD]nPhj)P-,a<n%5*_BZ4fe:kt%(\$^aYi`-06Yo]gt3Y8$._N4c+o-W3[u.\iKV
%cue[N,&#SM_Re0c&TC/MM1-An53OnT,ZIJ6<HKq>SE/(s@'188!a3r]C<8_71`;/gB9Lu#fc'pk%!;^2hVr`VXE9ZE,&c8U#CZDT
%m(]C>W+6'p33fJ@8`["*8m"-B73Z^H*,D-hCCj^CAa]$LjM$+*Aemg5pAr2/\jOV/SY@F3;g1!QJ>DlGOJ88+C9o"%WA_=1jDa&%
%\\\ET>ue/HV6kW1M#KhF1!-U",L/<PC%):OaBHZ>`<Uf=K:#\%?aG::2N8<I5NoN7NhAJ9]#`IX-ibj6BX!B4<b?`gKYNRXS6Q:2
%f@:Q</,:5ZgL>@Lf?,.Sa)B*>qC^0D4e+NWNVp>qCQpEJ])V6Jr:.Jce625;@C=+!'_[\DV$4&Y<,]I+bFo:U</0,TcGAeYqe(_)
%T$\U_b`RIB2>WBG**$GO.6tuhJ3p>/R1#,cX'&9)bM%h"S"*RDcJISZm^9Io]?tPn4fs?feFjANj*5nfme9(:aM"`tX!p%D_!rKF
%VXdS"8#c%=c!#4JAU8TW];1X(-2H_M)js"gPL):12ZV>Y+u&rW*&aS[AJNQlU+F^Yh:L%g)03B,W\6'%1mgZ6`9pU(\K;Su0s]>G
%[MU[lUQu!nSK":9hrr>pcXlYpMH)H)c+fjMmjS#^kC"NdA_]-2OIkW6oug6!RGa7F-RtX?J+,c&3?VE\ChRt`)FM,3oP%6qi?un`
%]K96]@6GFIS4mh>_6igC(>IlL]W^/S7?5n7-f2I+PI*WnU*or[P'U5W%kI;:rQ%#p-oV;*`mf1%861\[]o@6RP@R,L,u13JnF4X+
%oho'PYQKNLEs@7eUI>eop)/n;>`",<<e:#W[8GhW.q-udTddVME6Hd[FYju'!Z^Ttm`n+%)Hu[rMDGVU"SO<BJHICcZOT&:#mGBO
%E'#J#Jgm1G7(Qs_5"b<WEP6jF8;]dS'"%'XUM34h9BGP)9CIRG6HaZr3gpI2l'"4mj/]4G&_@McUa[QTLPbQ4C+7Q<*%k1WcE_>t
%cWV/AlPbU-9+?uq(&9`NMI(m:.4*._,J6n&l#CTc:K\t6B!2?h_T`.=]IJ0#6Wh`WM'j12Q7F)q%^j1r.`7Qf,3#YKKgUXG)$[2%
%U;5i,L^=o)&u%=?V$>R360;ftP&;lcT"(V;#bn[5:`X73#Z2p^JIdoq)=ACjnU"QW$OBUhT".RqjSiJ[fTt'ih<ZAa^0_gkA1ne(
%39@+#]_H0Y3/S*tF&7q"&nDB,]@Z@E;NhL9/YaoYl3n!_UsXgi-\^t>A\F1W@+qg!!)VJ:)l,HAgVB&E2QY`*_&jr%&r]$landa2
%`H2*f=dbV-RbnchdZ,4U`ncXi1)WeWFrr=J<K[me3Vr,%d<u.iCc$ng7Oa\SZ[U:;0/hm)dr!"D`Q]#L9+<W12$IfkkeMkPmQ)%H
%LB+E8l/mLBEO+NLa\WVV5,rfnJ\#DTY8A$UXmI[@CN-3VbX;&g88b^58oO$sdJhj"^+RMg#c@q0.D+c/Lb?uLqb+N8bki?/>SpZ%
%>k,XL=%BXUVWRSO?]C$<MDD5H(=@f.3M,?"bjiV`0T'nEF'-?EBm;OFY;5P[g]c:D/d0_A0AXkY7$5Kd@#*GqX'!RoaqhMDo^e[L
%HKREWY&A/E4:</uU:9^V<j>O-YZg$4?03XY2AI_OnR>+PP?%dIebYK3b<^9:4dK#g=><*njF2p\hCJ.&9r&P-*#W1bhMbgVQ1+IK
%muR(^6i$ShT18Q7%@QR1$bocu[Q54A+\!d?GWZqP["h5=l!.:[&^=T*AH:maFSUoE!rl[n7_eK7QH<%r2f=2elf-l$H+\Pr%+Q>W
%f1f+1ed(l`A6S*/JBp<h/<@So/!i(&!Md9qW`Q_HZPiq;Qcj;16m:u'6(q/b1]I:*M5(;g9*:cAr0bZlkp<5+YSCSjqZ%dW/!7mc
%]L%e4T[[JR+]2$B'2>/s11A]Q20"G0772R<d$2-2%*eO/SQpbfA'3ad>-(-oAd9>J"07sffFDp81*5$sQ*cHpTi%,aCBqdn`#jV*
%r2#4OYJK+;T9shDlu!=Zl#ZRX+Xt6+dM+)Q!MB&'eSAcA;iYW&\(</CSkL*dSeC1%e[3k;hQHalJlsZVakMGk@V+-S.tX`4$*Sa?
%:HE3X4TkG^3EVjT[?E$aEMeW8CkqoK3Z6N?S:C","<XrlGB)Zc\H6kYj-R<('G`Y\O9WL@*b74K"dFO<*"GE,,^e80TMr5FZ$[4@
%-b#DM+HP<UMiLoBaerVXX%cnljV/Yee?b1Pl>4`WQ1R8,GB8oJ.#^2fUjobg932$(=$5T^\0N>`]sB#`TT&O-DtSq)K8<+`EEh9Y
%msTgQ/U*/M+'[?KR)\jB_P2<\,57@E>AT?nP.FGh0;I<dg4&]L/AgG[54d/,p4ujWO;]bESSlKEU52tG5(BtnhCDR&Y:](e!RZPs
%l2:EXV[(42%MI+1jZTDXE-]eHX(LT48RWU59"9]j#BZ%qaEhg]O-"SPB(-cAV2hl8?25KB67R.M-JRQj>HqWmRg'mdc-?AI7=qL>
%kr!T(^<.COKR])/-0IE\cj5KDmt6ip\&?SqJ\'_+Pd&05A^Fh^f#AUQ:=DW^5\UjTXGBe\'@3jAXogG0L+I!uH+54$pWoO-Ug&=[
%'CO9&m5M-09Ci"$df$^uS&\C@STu!Cs"t-7h=!W;5q_5"0CV%9AG7n?PF]du:'92be/W>RZY]C3kEDr-#E_W6@@chZ+GT?&X182^
%cgM"=^V@BV:FlBV)1Og85Nk;S6?1/&#;msna+kT.j6*nAftPF@62Y!i\LLqj3)B\):TNd\L9ER@cmZ:hJ4pt_BO3Dl3iE3LC/QB5
%6tMeW.-FNBMLY-m$*OGg.$:n&>j80'<TR:7[)+$NS3:VnLaD[6Tp5rk4Gl[Nc-<d=%CAqRBqG^^&BPUk!FM,'ZqTX!PWZPgf!DU6
%c\J*uGF')\fiZO_)B>9<E/^1X>2:(Jf6<47A!&FP+il*F<f9a2pu)c[Fg6nN<q%[J(e\g58T3&7CR,"&!="lahMum)>]+4pjqY7,
%KmMfM5JD_)eISQA'k\eqJ.(s46J#eaAX,XI1kQ,I*.,iErcAT<LIBfOGaW_\gAW7,cm2aO,L?jP!+.!,&C.e>AQ*R]B_bKIp>@2r
%4R.;pL*G)H61a,nM^bhg2%trD9H%dN>TfYSE%F^5ibQ,Ymi$*:(V^mK=o3`VPlb>%2)o95o&qgZJ^8qIY7d]^4A\p[6C?I:C*@0U
%FV40"WZ[,7?7okc[UZ<XO)mi&oFl)^5akU+8P[pB8L\P6!P>_XVfKR=-(l6tX?PH.\nhUMe.B%eIB]@BbO;9];B3AGl"*sDPXKuj
%eObL!?!"tW:,QV!'T-r.V&S/'o%-`?=p>H_LhiId<4_ZqW?'B2i9W&b,"aqhqO40NXKZj4aEQ-nM2(SV;Tf;la2=F4;?huHG`u*i
%"[A67K6#R>[k(T"hsI;X-#KhD4A[cp'YXM9nuU)Fo[R2pGZ%jo#LUX+,b>&Nc4mLP_W"LH.L>TVYe`$@K_jc8a';=j_]!rWl1ja<
%dqadJJQf+nU1NU%I@DlWVXtKdNu%-r%1c%!\n\bCFF6.pmR'EKh'W4nc[Iq2:$/f+6oMn!@3Wkf.ZsIO5f_uO**>#$l$?)>/72NB
%51RnuS#6cm+=>K8#qS_J"$@`hX)99R)/9rX/X-%q8h21R(dh=9b&+uB(sLO-KrQ#P(`$Xle%NW;Wj>lYWg9:oH%d.5N,6\0je\6>
%%[ZPKOU5'%Y,)&&4EV9PI>)[q4mW9*2:]aXQ[6#6,XYCG_u4@9TL+p)/i)#Jg[EP3mLF9<nt('pY(Y2IeeC_QdM]SjCfNgBNeSae
%-ZaE;]3H2O/H8'/4.#D-$mU#imFtWDU\m"t)3i>?$N)MF]B.qn8h)t%YQL"3jP;Kol7`*AE#%)"W'JoqI.s3)#=6kJ6fu:eNn]W4
%`Pr3a$p7od6sB5[d&fcK,TU?e'j:LY=1KN>@$]d-&a*ctDm9,%C,V="C]]n@='oJ-9cF>1<ppH@FcFc9ilk+XI#+1#p)Rr+d;(G!
%5<!UH#Cuk;h`)SCLWIA1o6_gWJp;MjKR)0[MTAVk'OUh3r4_'BHTu")GsoPD4ubSaN-/.#/Hg!M@fHCJaXW@E\kp#k-L%]D;L2/1
%9VJG%Q5gaaHsg@r$S06=M2asXIBmZn*nJ>J#sGAra8'3-UiphkWL>N`jd+Uq+6YX9SG0#G>7`nX89L/GZ8Hs3(+m+J+9Y$X4@<lo
%Zn]\+.:GMBr01m$=k8`d/rG>INn)e_=";di1R=n7IIZ,VEf`j=03FB_mWKp1Yl#cc/RNVu]_31uK,%,$K+pNVVs.f)Z7"6KP;F0)
%(aP2gUo1j%]`DP#71uFe^JA:!_TsV6,kbuN/_$[a1nLE+#AMbDIUr[?>t%%q6d8F;1EFDHrkUcrYfem8ELS!f&Mh_b$^?m#9%adK
%`tlS'2DrDf?,qT`mlGr][A8XG[PE=Z>,0WQY1Ll##K]$/D^pA"kQ"4AJDV0[LG/K+BA7[.39SGd9.L)q^$%d[BSp;d*._f!UQp%V
%l82)&1"R42VG.pZ//:HQ%`du9CB@arE4"rqkZe2OntF]MZomA"O9<Yqs4+0$<jHTfN*.L1f)'Ue[!2Ym0trJBZr+&p4q#QAiK[fo
%d7r8N&WVsdWd#g7D69O^SajB#fF!NSe$)4np/DJKp4lhLI]tPTIYn`Glt0&HY&?rW^;m2%)Z_mbi4QK8\-YaZ?DgGZ5`7dke+lpY
%7G7u@5,pmeR"R3WIQhp,>V,RNYb8phV4O+*\GaC0h!rAJ@MT5/_/bB.<hRGL_6C\2\nfo5m,WXsS221!Kt*mN/=rLt':%4-Fcl2%
%IZSQGe*(,jh):;DcC0>uG`&kR]EPe#FWSjFJIQJXZ,h)B$G4jdg;Hpd\G>64]e/OUZK\uR`]h^ne[(ZQLo":!CajqgJ+.c-C[MPp
%7kOTY(9*jeJTMR*f!O15Ad%7f"g2BVXm(eH_tM&/8pmEG:WM*oSb4K)MqU85I,_/af_[?;jG4L1l_<\ej=n,)b24F=Y"V<8(I)!&
%gG'`5b;dNY`igr+(+eX7(iu3(?Vj<JM=e$!)1C?G'9*1aNTe-r#fqQdlX2J=mOFaf&,Y[ros6S\g9:6m9dcFq[7hsahu-j#8U-[T
%^S>2EOK$^4;/NSTN/F7=h=32@,#H"3NJLe5EZZc$GKJ=Alt#*V%rFDJ/4@f$3Tq.,8;&9k)JJYd<U6`iV0tnaW)@7:R@<puS(`MM
%PW2sJ.,qHP_</7TaZ"?].h38?^tX+AO]%5L1@[Z2EXPL#L57XOerCD91Bo4fgGH/pJMkBaEZ4&U`HJX\"hUGWHsrO9Vj19AhgD\5
%F;AK."tp]`)--X1]:62-p)`(kNdH8KlODaDq`_I/.A3H]cG,`GY5>Qc[4;0->lNG$cI^`t=eTM"Df\'Ik7tY*3hSqnKBo<PDmVnc
%Dd>%XB#&5/]H'I(m3VsU(a-B.YZ>]uc8_Nf;j@J#;'YjJ\ENJhC5,Ef>3$e`-DilYmLj=q7WKeW8ra\I62p6@'n9So`7$>LNS%fM
%NK>%s6@oB9C82:83/%/oDj0]RB-bNL?@(V?L_cT^Vgj^78#o\h#Y9m;KG=<2!3-ushON$A-cS()0V8r6M\p6ACkXWKoQ%_XF.KrV
%2QDNc4<RS9S@6n!aQ!-%*74A`JR0k`W]Y;ZN_r[W2;1P__]fue1M0d[)BLPpR;84W<jOE5=C7lYF"VkQQQCPo?@S9lm00d_Vo?['
%/*krZpUB/g#^E/Ao3rX:UaWP0FaDeN-/+NpM&X-*G(2WA(Rb[g=G&XpfJO1Fd?]T7rl3T/;fnYOkLnEUMRB0f'=eE,f?6K(C5]nV
%/7ShK(tj79Lp'$<DR@)?9ZA12.GPp&(!Gc&Eu@T5@ej76g_:HT[uQ.c+]p>f>Rn%7%Z9rdpKriKSuPdH)Luu"24>k2+3^#s]u'9S
%k<,*eU'k-`rqVY559-P3*(rurI&.p)>?QO.`ess2#W=;'_(^f>>iGh?"ppcopUZsTK,CI8(ju=gga;1$HW=kc[U9$W@TNNiR7l]$
%_#:j)4j@5m(ftNEG[i<Gb4AG_RVJ]<Fo`PHMUZ"n#d:taE8eu[\BTJYLdr@:YQ"Ca90F"%[T2f)MqQpkP;Z)/UTe"ZgoHdH!aPgq
%'_,P(@:3JWo2nCSrD?(4SL5>F*66\"A/">[4JshCe[?)a/7]gp7F"(EM?W5X5U)\Q8iVUlO"N#s(JBS1AhMZER:3t8MEQ^jE5\a\
%4n/D]Hl6IEn*ZW:05Zc3ebD_EdS<]7_'$ggp>U_6*aSo8X+j[Xj\6gcep,E1LQ,P$iJa0W=ln"1.<7GLI0>?5_JnZE_;[/pQXubi
%:1;$8iSmN\Gm``k0`!Y!'D>U?]G4BD;rcsMI6GA!+u#$a:[K]&eegZ]I"D_[!"?A>k;7FiP1JIA/R1"BepPiUMi:ZOlQi=f]alpc
%FlH3"q\6=*9_f)\WZ.HI6kNAoEmqaG+U>"i/V;n=SD3!Gap84@/I[+4-f-ucP6gD:_HU:9]nZb;Aei]N(PJNTm+e#QK1VkM(3/Fr
%?@5K!M]d0<i_*M!<3'P5qs05Js$:.NWPHWB?Y^7FL>pb*%IMACQUZC`<L)WgmFd-SB6-aiW@5HZr\V3ePGhNB'r@S>Jj]FQN9kMR
%&5WJCX\OA0@s'_l&G[iP%5QcX:j]P+O)9Ksqo!lbYRd@0Rs[_cr$d;"-*2I)WI!)5C+kh\_\U<<\4k-3Ygoi0D+^:J%d:_=\"O;.
%q!&@g20E$sCLTsP5CK+m$Kdo2EB&lWj#r\K'I5[]EiQ[)B=bRPQ7Uf'5;As&Iii3//+=DK@`Xri1FifGT>S01N2lp2/r&(&\r[CK
%QD62JY[+hpH5MpR!U/IR)qTa&;'\4L6KJtb=(++p-Z*c(^.`nZ8PHPT3@$)/A^9rdb0e)9JO1iClG"#oM>%%b=5s1m@G#;gI<FFo
%:FksD_%oSb,;_'H4Xde.`XEYu3?J;E`??8hJGL<F_rI>^Al>B0!eSA=T@J[Tp^?c2TIM<hB5/^UReKYaBt.!DhG1+?5_XNdhT")_
%he9uGhBYB%<sUN]UY:,GDjrh^M+"eCqoV0!QnZbQaqXuVO3i-:\EbW</N)^:r.7BanUo[d=u0E99j/A'hf7G'UpFmKbc^9SPV,e[
%U_9l3i\OH1DK4J@_!fT>hX+^`*M#t2XB+=U;YIst$hip;^&_M6g:n5%;MI?&MNYSh#\PZ\WYmhb\[C6FV4#ghj1%EiGthdh=pa7J
%i<V)\SbG)FV?\*_jXlA[^]M(c@TTWaG&Gp_#r:9RY89`obB5d:,aG@jq7%]8cc$@%W99g1b^eG4.abM.mf5j_7,Kdk3\-TAq[h)l
%rF]6R>G16I"6.IPd]`C_<mPMabU/9Rp3S@SV*7*:I<:N+n1[`+^_Z%dNc-4?fSHnsDK[S7&oVqP3?Wm\%j`91C09[m5IFpEg[7FV
%Y7O+(Tr6o#GBq`tQ_e[I)t."s>+R=9+:_8O^ZOoN`[+0RF_RCVd[WNg8"B`K<3,q12WB?3CQ;IFIWY,1JbRI=*BS*tMojpu:u_:$
%RRPcPSaF@p(8##e<oFV,Z.\"%@stga/WJ0.>!c]MLfRDK9he+'VRHWZ17XQlff5$D+s96h+9\h<i42HZX_FS^Ns?AckubJ7<j5<*
%Uk0H>`'"g.Za=TA_+(p0N36g<D&8#Wm9A&%P*!bY])aakpd]')K]^Xse*l_4%(#eF]]!od51eYI?@*5[BeU.IVHlp_Z:bO^7mU$d
%]"6bo3m0_^CGXLf]DDSiK^k4U777;n`h2S!T<l071H72Fg(uh7)F8u5oSPVfh:fI_G$]QiO(Se13U0?sct4o?.2[n+pXNqA^=0fL
%JZk<j+bSk>-Q@DhPGjRAOuj\=$$'LRq)e;s%*Hj]75%)=HGWmdS"\1"QXC1(qfR#AL>0P@0N8*RPH!cngf8CuaTI4U&8jT3J0&`p
%6]*0udq@5aY9;eMP5Fa]IYb*'I[#*c6u[90_qlap&u@DVq"T<"l]\<PEX1E"dh*[Ie9me9JWlggX;l`ig=L^H[j(;DoI0X>S5NlX
%.qo*KRf-=mcu^^EC"+s?pLqe/p%XRUE`.^,QU+V.M1F-j&+IJh3p1EWQJsQegKDM-k[iDJ^N#.C>I)WHS_dW-?(A<<Qq?N9?ZLIr
%)6L[]HN_Y?7^7Km((@fX:qF)#a/Xi\mkVjJ0u?ch=#>3JC,R;;!.0NK7(k+D*27d?DdrAZ<?_$,AZ"=p$_Bqq8GBs7gOW+!itgh\
%j4-8(iTg&e2mo-&73TjNROt=[n]^iGA4B3'^Sp!cJk:D'Y4,JXktV9DOG[X<jX#5_q_D,Lk`leO>=lITi]YY:bgIi$Ao=YeRjrY]
%8?S/U%mirB*;rDmr.Nks6aGRXiP+mVs7q,4Dlc7+V[@fskKWJ!*]M"5=tX]amrhcs=IQ:ZR6S;l;6&/Dr?<Rs&EJJt?GBg^Pa[NF
%MN7`P$ihVO!"`76eh'!C[&-rO78*au`X^:5eDTtoj.N5>TVeJ:IsH"!LZ"tk1,@g6'ZT'<8bkSSXPZ`IFkaI!Cb.4b6.]/T[*I-a
%QMB$]D?IXLc@$?$k"oG'jb^#"B1ul*E^N'Bbhb71oFe3/BZI6=&EGM\2o"eTda-kpk&l]..l9nsEh=_N>uW]>eEG6#maqdp65hVo
%ECrA6B2=<>_r:Ac-]RmaJs&.AVlnhWOL2\X(HA$eq`Ic<f?3=6noMdDdLU)TEEI+Al(qUq#\Q'UH7Wn3Je.8X\AiC)4$Io"i4:ZE
%3e6GsX4Q&SF)`;m-tBhcJJ0c,iO>3Ioj.?TFMu#ZlmiZd'/,X]Eu2XBL)(f@Rp\5s+PbO,M[M=s;kQPL0N6k7>V,["c)Fs";R:<Y
%3K?7e,:Ze?9\5)@QtY6o1lEkX%A$B:ecf*-&B4l'HnC@Fqgn:*P7fq67I#5cLo:)kAt'<sG$].h=2geI/o(e.HYl6D\TMNcTu]):
%W8s<!"d^dgP!pXs:1KIAiN:":Br)6p@5UB[^kB'fJ/-UG;4uoP3E#)%DBGb@^%O_%4SkLFA0I9MY`]0(daL]UX5nYCY\X@2?(0M*
%:WXm?ebYr6-V>F&_te@6l@E3)H0GL@Ht3Z^E65#V6Sh54?r5rm1'7BR@^4eS27EeYDuiJZZ\Y+%LIjH')h79:YeoF!Olej_hgX6B
%/>Q'J87/R1VfhgFJ8&6s+TUJ>Z[B,?c6T<',lm"lPNGgNJ3Q)*3KQ_'>[[a#p=n`0iR6d"4DVCnA#6M0-6o-2#TZ8qL3sK0e^#mb
%hH<E"4.k]oi7>!B&ATN:/T%n]Kp[d"m))b/laTa:>Ou,QlA(r-aX9P.Y:U5?NXc,+3WbTM)=XaO4cK=t6]X%F]*`ge;X(R+W":^[
%m_@tH'r'UE_uC)4]Ze@f28`V=B<^E2P$B<[N027AcDc"K0OFTCT];1Spc6?IhluN%/<$Djo%TmJ!da8Ah!$8JZH<Hp:okfX8jS%e
%H'n_^3*io&T'V7Ri0!^NV^HeC/Kc>C5n&e,:^pa[nKA.WYbm7DY9&IYFDjL\8R9Z0N^Cm]<&AGa]:J'A1f$t-R8KX"6ZB\*Q$$Ji
%$XFC"O^(IbiqtgS9n>bc-<Jd23#8C,8gR"TB*e]L2U\fprE".n\HHBJTWT;5.eL,Sf/<]!,IDd8C?aQ4oeanN]4'q!M"P`P+SiRL
%I\9##gl/WFTn,Y)fHY@_)XfB!2T<;!eC!=FYO/\2<`?:>d5Yr37W5mrZruXgb#IBQ'D&$78ti(LBjksmF.Vh&1tbj^\QNNe"pmT`
%)L"3/:=h+k?e5`Z*b<=5ZKMtQWLR%?3RqgThlY)cF>shIdoh+tr`Pnam9Cmf<s,=cVWEH87N[Y"WOhcDUV*B?34U(gd)Z/W-3^:9
%G!5Bn93"dE+Yt_/&M7q<mUAA4/D,</_fCQnAVQSc`WDT$>20UJb@b][nqTs_=E<4`bjqQ-$`5?tIr6=[atKq3f*n"5E*l8H<`I3H
%M.Hl)IUVYSg-27-1Xur(UrR`Uq+`eGI:2+&@C2.o,tfqPN+4BSOhelr'PWa__CN@0%k4Ip9="uQkqJ8Ard'%"+&U-+;DOiF]Y;!%
%bqn'(<O5"A7U]S_`oRO?/W7uS*IJgL<\]k2r<6hL0-<D3ZTS[Wj:oZ`kC[lI]fh>K9S=faI?*\4U7R6?Ekq2aQSg)t8#n./e%dt$
%_ejd@G7jP=BXk)8B#@N7A(tjs)7[4D_lDtaj5sV?S&c"M`?sXGC33)oI!A>%QcN!ZcTcl$)':#;[<ImAj:G(Kil,c9SqEbt_\jMD
%#@RQ%PRfrXFBk2&cOgUcWZOF%lq`7CmIM;TZ^$&[m]NTq:D&^t52V?g,+k=i6ore9/5=3!N`HW2']^-dRdF!LIuWb!ic0n/':@,t
%/(8Cp3DYs@r`C2'4WW?m!r]-m:8A*)'m[CVL5HN0'''",U>DXl>GQ##j!pJ?D:l.K*"hN!>1f4*&MK75JF2N/)_U>MY(du6)qWAo
%Mf%b4O$L0m,)"X,\2@=::.;ScdGGDpH*1*A_P5gF2_6uTLI[B4KJR,_EH78tr/b$I-Z1N&j7L09S=/^)&".asO]AH,m2u8^P#GJN
%2uF8o8Ed*6Otmn60.]X0ej3=q+tS#K7DD]4O2Onm&a\J=hl@6EY;69gi%3QZ0]jT,[Rl]lOudN+"RHpgjef36XWMOfLE(fIC?/Q^
%I=1"is-kt*BIC5d;<DNgG#FBA[#0'VJ&4EtE@1<;53d:ape7>/4!VP0fo^bD&D<UVH=->eh20SS]Z%.9,?VhOXiZPdfe/4W/K_?6
%&=;WO,5)"9TT(PCUc=Fc'8%r::N/*We*CEZ5K*?n!BmFVAp04G_LqjYLGHc0p="JKbYmt?]9[04^Y-m<L#7g-QI.(A%mP,G5T3H%
%I5denBH:HC)`:.7`CrlTLpGWV\I]K<Z%[rILBIfViD?>jV"EW1b,@1lPGE`j52(@7k_HpbS?2be&,h"XrLa)8%mU'J:VZi,pQsi_
%s5V-arq&F)q=,PVroocarL6%Nq8\!\l0ZMUr<`5bVglG[l0XPHr:K1Ps%gE-o_.JJpJ:gHKeL-Rn@RTVrI=icJ,;2)%V`Wj`W~>
%AI9_PrivateDataEnd
